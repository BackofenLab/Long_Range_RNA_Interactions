%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Mar 25 16:52:03 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP -T 18.000000 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUUGAGAAAAAGACAGCUUAGGAGAACAAGAGCUGGGGAUGGUCAAGAAGGCCAUCCUGAAAGGUAAGGGGGGCGGUCCCCCUCGACGAGUGUCGAAAGAGACCGCAANNNNNNNCUCUCUUCAGGAUUUUUCCUCCUCCUAUACAAAAUUCCCCCUCGGUAGAGGGGGGGCGGUUCUUGUUCUCCCUGAGCCACCAUCACCCAGACACAGGUAGUCUGACAAGGAGGUGAUGUGUGACUCGGAAAAACACCC\
GCU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[115.00000000 100.00000000]
[129.99302673 100.45744324]
[144.96513367 101.37190247]
[159.90238953 102.74252319]
[174.79089355 104.56803131]
[189.61680603 106.84673309]
[204.36633301 109.57650757]
[219.02574158 112.75481415]
[233.58140564 116.37870026]
[248.01979065 120.44479370]
[262.32745361 124.94930267]
[276.49108887 129.88804626]
[290.49752808 135.25642395]
[304.33374023 141.04945374]
[317.98684692 147.26173401]
[331.44415283 153.88749695]
[344.69314575 160.92057800]
[357.72149658 168.35441589]
[370.51708984 176.18211365]
[383.06802368 184.39639282]
[395.36260986 192.98960876]
[407.38940430 201.95376587]
[419.13723755 211.28051758]
[430.59518433 220.96119690]
[441.75256348 230.98678589]
[452.59902954 241.34797668]
[463.12448120 252.03512573]
[473.31912231 263.03829956]
[483.17346191 274.34722900]
[492.67834473 285.95141602]
[501.82492065 297.84008789]
[510.60467529 310.00216675]
[519.00946045 322.42633057]
[527.03143311 335.10101318]
[534.66314697 348.01443481]
[541.89752197 361.15460205]
[548.72778320 374.50927734]
[555.14764404 388.06604004]
[561.15106201 401.81228638]
[566.73248291 415.73519897]
[571.88671875 429.82186890]
[576.60894775 444.05914307]
[580.89483643 458.43380737]
[584.74035645 472.93249512]
[588.14190674 487.54171753]
[591.09637451 502.24786377]
[593.60095215 517.03729248]
[595.65338135 531.89624023]
[597.25170898 546.81085205]
[598.39447021 561.76727295]
[599.08056641 576.75158691]
[599.30938721 591.74981689]
[599.08074951 606.74804688]
[598.39477539 621.73236084]
[597.25219727 636.68878174]
[595.65405273 651.60339355]
[593.60180664 666.46234131]
[591.09735107 681.25177002]
[588.14306641 695.95794678]
[584.74163818 710.56719971]
[580.89630127 725.06591797]
[576.61059570 739.44061279]
[571.88848877 753.67797852]
[566.73437500 767.76470947]
[561.15307617 781.68768311]
[555.14978027 795.43395996]
[548.73010254 808.99078369]
[541.89996338 822.34552002]
[534.66571045 835.48577881]
[527.03411865 848.39929199]
[519.01226807 861.07403564]
[510.60760498 873.49829102]
[501.82797241 885.66046143]
[492.68151855 897.54919434]
[483.17675781 909.15350342]
[473.32254028 920.46252441]
[463.12802124 931.46575928]
[452.60269165 942.15301514]
[441.75631714 952.51428223]
[430.59902954 962.53997803]
[419.14117432 972.22076416]
[407.39343262 981.54760742]
[395.36669922 990.51184082]
[383.07220459 999.10516357]
[370.52136230 1007.31958008]
[357.72583008 1015.14739990]
[344.69754028 1022.58135986]
[331.44860840 1029.61450195]
[317.99136353 1036.24035645]
[304.33831787 1042.45275879]
[290.50216675 1048.24584961]
[276.49575806 1053.61437988]
[262.33215332 1058.55322266]
[248.02452087 1063.05786133]
[233.58616638 1067.12402344]
[219.03053284 1070.74804688]
[204.37113953 1073.92651367]
[189.62164307 1076.65637207]
[174.79576111 1078.93518066]
[159.90727234 1080.76086426]
[144.97003174 1082.13159180]
[129.99794006 1083.04614258]
[115.00492096 1083.50366211]
[100.00492096 1083.50378418]
[85.01189423 1083.04650879]
[70.03978729 1082.13220215]
[55.10252762 1080.76171875]
[40.21401215 1078.93627930]
[25.38809013 1076.65771484]
[10.63855171 1073.92810059]
[-4.02088213 1070.74987793]
[-18.57657433 1067.12609863]
[-33.01498413 1063.06005859]
[-47.32268143 1058.55566406]
[-61.48635864 1053.61706543]
[-75.49283600 1048.24877930]
[-89.32908630 1042.45581055]
[-102.98223877 1036.24365234]
[-116.43959045 1029.61791992]
[-129.68862915 1022.58489990]
[-142.71702576 1015.15112305]
[-155.51266479 1007.32348633]
[-168.06362915 999.10931396]
[-180.35826111 990.51617432]
[-192.38511658 981.55212402]
[-204.13301086 972.22546387]
[-215.59100342 962.54486084]
[-226.74845886 952.51934814]
[-237.59498596 942.15820312]
[-248.12048340 931.47113037]
[-258.31518555 920.46801758]
[-268.16958618 909.15911865]
[-277.67453003 897.55499268]
[-286.82116699 885.66638184]
[-295.60098267 873.50433350]
[-304.00582886 861.08020020]
[-312.02786255 848.40557861]
[-319.65963745 835.49218750]
[-326.89407349 822.35205078]
[-333.72442627 808.99743652]
[-340.14431763 795.44073486]
[-346.14779663 781.69451904]
[-351.72927856 767.77160645]
[-356.88357544 753.68499756]
[-361.60589600 739.44775391]
[-365.89181519 725.07312012]
[-369.73736572 710.57446289]
[-373.13897705 695.96527100]
[-376.09350586 681.25909424]
[-378.59817505 666.46966553]
[-380.65066528 651.61077881]
[-382.24905396 636.69616699]
[-383.39184570 621.73974609]
[-384.07800293 606.75543213]
[-384.30688477 591.75720215]
[-384.07824707 576.75897217]
[-383.39233398 561.77465820]
[-382.24978638 546.81823730]
[-380.65164185 531.90362549]
[-378.59942627 517.04467773]
[-376.09500122 502.25521851]
[-373.14071655 487.54901123]
[-369.73934937 472.93975830]
[-365.89401245 458.44100952]
[-361.60830688 444.06628418]
[-356.88623047 429.82894897]
[-351.73217773 415.74221802]
[-346.15090942 401.81924438]
[-340.14764404 388.07293701]
[-333.72796631 374.51611328]
[-326.89785767 361.16134644]
[-319.66363525 348.02108765]
[-312.03207397 335.10757446]
[-304.01022339 322.43280029]
[-295.60559082 310.00854492]
[-286.82595825 297.84637451]
[-277.67953491 285.95761108]
[-268.17480469 274.35330200]
[-258.32058716 263.04425049]
[-248.12608337 252.04098511]
[-237.60075378 241.35372925]
[-226.75440979 230.99241638]
[-215.59712219 220.96670532]
[-204.13928223 211.28590393]
[-192.39154053 201.95903015]
[-180.36483765 192.99475098]
[-168.07034302 184.40141296]
[-155.51950073 176.18701172]
[-163.34733582 163.39151001]
[-171.17517090 150.59600830]
[-179.00300598 137.80050659]
[-186.83084106 125.00499725]
[-200.00770569 117.83768463]
[-200.38905334 102.84253693]
[-208.21690369 90.04703522]
[-216.04475403 77.25153351]
[-227.44349670 67.50122070]
[-241.29736328 61.75053024]
[-255.15122986 55.99983978]
[-269.00509644 50.24914932]
[-282.85894775 44.49845886]
[-296.71279907 38.74776840]
[-310.56665039 32.99707794]
[-322.89440918 41.54263306]
[-322.37030029 56.53347397]
[-321.84619141 71.52431488]
[-321.32208252 86.51515961]
[-320.79797363 101.50600433]
[-308.97744751 110.74044800]
[-305.85818481 125.41253662]
[-312.89971924 138.65704346]
[-326.80725098 144.27670288]
[-341.07327271 139.64202881]
[-349.02258301 126.92163086]
[-346.93560791 112.06752777]
[-335.78884888 102.03011322]
[-336.31295776 87.03927612]
[-336.83706665 72.04843903]
[-337.36117554 57.05759811]
[-337.88528442 42.06675720]
[-350.77972412 34.40300751]
[-357.48388672 20.98458290]
[-355.86926270 6.07173777]
[-346.44845581 -5.60080814]
[-332.21252441 -10.32710648]
[-317.68124390 -6.60659266]
[-307.46823120 4.37949800]
[-304.81600952 19.14316177]
[-290.96212769 24.89381027]
[-277.10824585 30.64445877]
[-263.25436401 36.39510727]
[-249.40048218 42.14575577]
[-235.54660034 47.89640427]
[-221.69271851 53.64705276]
[-206.73985291 54.83515930]
[-203.24911499 69.42333221]
[-195.42123413 82.21881104]
[-187.59335327 95.01428986]
[-174.41647339 102.18155670]
[-174.03506470 117.17670441]
[-166.20716858 129.97216797]
[-158.37927246 142.76763916]
[-150.55137634 155.56311035]
[-142.72348022 168.35858154]
[-129.69523621 160.92454529]
[-116.44635010 153.89126587]
[-102.98913574 147.26530457]
[-89.33611298 141.05281067]
[-75.49998474 135.25958252]
[-61.49362183 129.89099121]
[-47.33005142 124.95204163]
[-33.02244949 120.44731903]
[-18.58412552 116.38101959]
[-4.02850962 112.75692749]
[10.63085651 109.57840729]
[25.38033676 106.84841919]
[40.20621109 104.56950378]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[189 245]
[190 244]
[191 243]
[192 242]
[193 241]
[195 239]
[196 238]
[197 237]
[198 235]
[199 234]
[200 233]
[201 232]
[202 231]
[203 230]
[204 229]
[205 221]
[206 220]
[207 219]
[208 218]
[209 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
