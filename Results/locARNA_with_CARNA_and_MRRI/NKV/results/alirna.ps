%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Wed Feb  7 15:18:29 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_AAAAUGAUUUCCGG_AGAACAACACGCCACAAUCAGAGGCG___AUGAAAAAACGCAAAAGGAAAAACCGGAAUAAAAAGGUCAAAAAAAAAAAGAAAAAUCAAAAAAAAAAAA_______UUGGCCA_AGC__CUCCAGCGUUUAACACCUGAGCUUCUCCAAAUGACCCAGU_U__AUCGGGGCCGGAGUGAAUAG_GAGGCCAGC_CAGA_CAAA\
) } def
/len { sequence length } bind def

/coor [
[85.02796173 298.94577026]
[70.75619507 294.13632202]
[57.85220718 286.37094116]
[46.91955185 276.01278687]
[38.46956635 263.54635620]
[32.89747238 249.55473328]
[30.46388245 234.69230652]
[31.28262329 219.65422058]
[35.31539917 205.14385986]
[42.37359238 191.83987427]
[52.12707901 180.36453247]
[64.11966705 171.25453186]
[77.79044342 164.93600464]
[92.50000000 161.70443726]
[92.50000000 146.70443726]
[76.96782684 141.31674194]
[64.21772766 130.93838501]
[55.78978729 116.82294464]
[52.70202637 100.67546082]
[55.32741928 84.44638062]
[63.34883881 70.09603882]
[75.79737854 59.35781097]
[91.16936493 53.52877808]
[90.74102020 38.53489685]
[90.31268311 23.54101372]
[79.10465240 12.72353458]
[78.88385010 -2.48849678]
[89.26573181 -13.10697460]
[88.83739471 -28.10085678]
[88.40904999 -43.09474182]
[87.98071289 -58.08862305]
[87.55236816 -73.08250427]
[87.12403107 -88.07638550]
[86.69568634 -103.07027435]
[86.26734924 -118.06415558]
[71.26650238 -118.26827240]
[56.28759003 -119.10458374]
[41.35725403 -120.57161713]
[26.50203705 -122.66675568]
[11.74834919 -125.38628387]
[-2.87757730 -128.72535706]
[-17.34973717 -132.67803955]
[-31.64240074 -137.23730469]
[-45.73015594 -142.39503479]
[-59.58795547 -148.14208984]
[-73.19115448 -154.46821594]
[-86.51557922 -161.36219788]
[-99.53752899 -168.81175232]
[-112.23385620 -176.80364990]
[-124.58198547 -185.32368469]
[-136.55996704 -194.35668945]
[-148.14648438 -203.88661194]
[-159.32096863 -213.89651489]
[-170.06352234 -224.36860657]
[-180.35507202 -235.28424072]
[-190.17729187 -246.62403870]
[-199.51274109 -258.36782837]
[-208.34481812 -270.49472046]
[-216.65780640 -282.98315430]
[-224.43695068 -295.81094360]
[-231.66838074 -308.95529175]
[-238.33927917 -322.39279175]
[-244.43775940 -336.09954834]
[-249.95298767 -350.05123901]
[-254.87516785 -364.22302246]
[-259.19552612 -378.58969116]
[-262.90640259 -393.12573242]
[-266.00119019 -407.80529785]
[-268.47439575 -422.60226440]
[-270.32159424 -437.49035645]
[-271.53952026 -452.44305420]
[-272.12600708 -467.43383789]
[-272.08001709 -482.43600464]
[-271.40164185 -497.42288208]
[-270.09207153 -512.36785889]
[-268.15362549 -527.24432373]
[-265.58975220 -542.02587891]
[-262.40502930 -556.68615723]
[-258.60513306 -571.19921875]
[-254.19676208 -585.53912354]
[-249.18780518 -599.68048096]
[-243.58714294 -613.59808350]
[-237.40473938 -627.26721191]
[-230.65159607 -640.66357422]
[-223.33970642 -653.76330566]
[-215.48208618 -666.54315186]
[-207.09268188 -678.98040771]
[-198.18643188 -691.05291748]
[-188.77915955 -702.73925781]
[-178.88760376 -714.01861572]
[-168.52932739 -724.87097168]
[-157.72277832 -735.27697754]
[-146.48713684 -745.21820068]
[-134.84240723 -754.67694092]
[-122.80928040 -763.63635254]
[-110.40914917 -772.08050537]
[-97.66407013 -779.99438477]
[-84.59669495 -787.36401367]
[-71.23025513 -794.17614746]
[-57.58852768 -800.41876221]
[-43.69575500 -806.08074951]
[-29.57664490 -811.15203857]
[-15.25629997 -815.62359619]
[-0.76017910 -819.48748779]
[13.88594341 -822.73681641]
[28.65602684 -825.36584473]
[43.52381134 -827.36987305]
[58.46286011 -828.74536133]
[73.44660950 -829.48980713]
[88.44843292 -829.60198975]
[103.44164276 -829.08160400]
[118.39958191 -827.92962646]
[133.29566956 -826.14807129]
[148.10340881 -823.74017334]
[162.79646301 -820.71014404]
[177.34873962 -817.06341553]
[191.73432922 -812.80645752]
[205.92767334 -807.94683838]
[219.90354919 -802.49316406]
[233.63708496 -796.45520020]
[247.10386658 -789.84362793]
[260.27996826 -782.67022705]
[273.14193726 -774.94775391]
[285.66690063 -766.68994141]
[297.83264160 -757.91137695]
[309.61749268 -748.62780762]
[321.00048828 -738.85571289]
[331.96139526 -728.61242676]
[342.48077393 -717.91613770]
[352.53985596 -706.78588867]
[362.12078857 -695.24151611]
[371.20651245 -683.30352783]
[379.78091431 -670.99304199]
[387.82873535 -658.33209229]
[395.33566284 -645.34313965]
[402.28833008 -632.04925537]
[408.67437744 -618.47406006]
[414.48248291 -604.64178467]
[419.70230103 -590.57690430]
[424.32455444 -576.30444336]
[428.34103394 -561.84985352]
[431.74456787 -547.23883057]
[434.52914429 -532.49725342]
[436.68975830 -517.65142822]
[438.22262573 -502.72772217]
[439.12500000 -487.75265503]
[439.39526367 -472.75283813]
[439.03295898 -457.75497437]
[438.03869629 -442.78573608]
[436.41427612 -427.87170410]
[434.16256714 -413.03939819]
[431.28759766 -398.31521606]
[427.79446411 -383.72531128]
[423.68936157 -369.29565430]
[418.97961426 -355.05184937]
[413.67358398 -341.01928711]
[407.78070068 -327.22286987]
[401.31143188 -313.68716431]
[394.27731323 -300.43618774]
[386.69082642 -287.49353027]
[378.56549072 -274.88220215]
[369.91567993 -262.62460327]
[360.75686646 -250.74256897]
[351.10525513 -239.25718689]
[340.97805786 -228.18890381]
[330.39324951 -217.55738831]
[319.36968994 -207.38154602]
[307.92691040 -197.67945862]
[296.08532715 -188.46839905]
[283.86596680 -179.76470947]
[271.29052734 -171.58389282]
[258.38140869 -163.94049072]
[245.16154480 -156.84808350]
[231.65443420 -150.31927490]
[217.88410950 -144.36569214]
[203.87504578 -138.99792480]
[189.65213013 -134.22547913]
[175.24069214 -130.05688477]
[160.66632080 -126.49952698]
[145.95492554 -123.55973053]
[131.13269043 -121.24273682]
[116.22595978 -119.55265808]
[101.26123047 -118.49249268]
[101.68957520 -103.49861145]
[102.11791229 -88.50473022]
[102.54625702 -73.51084900]
[102.97459412 -58.51696396]
[103.40293884 -43.52308273]
[103.83127594 -28.52919769]
[104.25962067 -13.53531551]
[115.23076630 -3.52684450]
[115.87876129 11.67298317]
[105.30656433 23.11267281]
[105.73490906 38.10655594]
[106.16324615 53.10043716]
[119.10816193 56.72838593]
[130.50965881 63.85148621]
[139.44682312 73.89439392]
[145.19776917 86.04591370]
[147.29797363 99.32453918]
[145.57780457 112.65772247]
[140.17620850 124.96851349]
[131.52947998 135.26254272]
[120.33603668 142.70831299]
[107.50000000 146.70443726]
[107.50000000 161.70443726]
[122.20955658 164.93600464]
[135.88034058 171.25453186]
[147.87292480 180.36453247]
[157.62640381 191.83987427]
[164.68460083 205.14385986]
[168.71737671 219.65422058]
[169.53611755 234.69230652]
[167.10252380 249.55473328]
[161.53042603 263.54635620]
[153.08044434 276.01278687]
[142.14779663 286.37094116]
[129.24380493 294.13632202]
[114.97203827 298.94577026]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 206]
[15 205]
[23 195]
[24 194]
[25 193]
[28 190]
[29 189]
[30 188]
[31 187]
[32 186]
[33 185]
[34 184]
[35 183]
] def

init

% Start Annotations
14 206 0.16 1 colorpair
15 205 0.16 0.6 colorpair
23 195 0.32 0.6 colorpair
24 194 0.16 1 colorpair
25 193 0.16 0.6 colorpair
28 190 0.16 1 colorpair
29 189 0.0 0.6 colorpair
30 188 0.16 1 colorpair
31 187 0.16 1 colorpair
32 186 0.16 0.6 colorpair
33 185 0.32 0.6 colorpair
34 184 0.0 1 colorpair
35 183 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
206 cmark
15 205 1 gmark
15 cmark
205 cmark
23 195 1 gmark
23 cmark
195 cmark
24 cmark
194 cmark
25 193 1 gmark
25 cmark
193 cmark
28 cmark
29 189 1 gmark
30 cmark
188 cmark
31 cmark
187 cmark
32 186 1 gmark
32 cmark
186 cmark
33 185 1 gmark
33 cmark
185 cmark
35 cmark

% End Annotations
showpage
end
%%EOF
