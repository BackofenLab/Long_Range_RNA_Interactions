%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Feb 15 17:49:56 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_AAAAUGAUUUCCGG_AGAACAACACGCCACAAUCAGAGGCG___AUGAAAAAACGCAAAAGGAAAAACCGGAAUAAAAAGGUCAAAAAAAAAAAGAAAAAUCAAAAAAAAAAAA_______UUGGCCA_AGC__CUCCAGCGUUUAACACCUGAGCUUCUCCAAAUGACCCAGU_U__AUCGGGGCCGGAGUGAAUAGGAAA_CCAGCGCACAAAAAACCCAGAUUGUAUAACUGAUUUCCGACUGG_CAAAGA\
UAUGACAUCCGCU\
) } def
/len { sequence length } bind def

/coor [
[48.62042618 324.95480347]
[47.89060974 309.96435547]
[48.36940002 294.96377563]
[50.05369186 280.05038452]
[52.93255997 265.32089233]
[56.98733139 250.87078857]
[62.19171524 236.79382324]
[68.51195526 223.18130493]
[75.90705872 210.12149048]
[84.32906342 197.69908142]
[93.72335815 185.99465942]
[104.02901459 175.08412170]
[115.17919159 165.03823853]
[127.10157013 155.92213440]
[118.97856140 143.31195068]
[102.97824860 147.19364929]
[86.61688995 145.35420227]
[71.87792969 138.01658630]
[60.54813004 126.07031250]
[54.00097275 110.96360779]
[53.03015518 94.52781677]
[57.75336075 78.75540924]
[67.59801483 65.55841827]
[59.18270874 53.14139175]
[50.76740265 40.72436142]
[35.50296021 37.62040329]
[27.14552689 24.90789032]
[30.19874573 10.37470627]
[21.78343964 -2.04232287]
[13.36813354 -14.45935249]
[4.95282745 -26.87638283]
[-3.46247840 -39.29341125]
[-11.87778473 -51.71044159]
[-20.29309082 -64.12747192]
[-28.70839691 -76.54450226]
[-41.47102737 -68.65892029]
[-54.55474091 -61.31837845]
[-67.93627167 -54.53592682]
[-81.59183502 -48.32362366]
[-95.49715424 -42.69251251]
[-109.62748718 -37.65261078]
[-123.95773315 -33.21287537]
[-138.46240234 -29.38120079]
[-153.11570740 -26.16440010]
[-167.89158630 -23.56819153]
[-182.76379395 -21.59719086]
[-197.70585632 -20.25490570]
[-212.69122314 -19.54371834]
[-227.69325256 -19.46489525]
[-242.68527222 -20.01857758]
[-257.64062500 -21.20377922]
[-272.53271484 -23.01839256]
[-287.33505249 -25.45919228]
[-302.02136230 -28.52183914]
[-316.56549072 -32.20088959]
[-330.94158936 -36.48979568]
[-345.12411499 -41.38093948]
[-359.08782959 -46.86561966]
[-372.80792236 -52.93408966]
[-386.25997925 -59.57555389]
[-399.42010498 -66.77820587]
[-412.26489258 -74.52924347]
[-424.77151489 -82.81488037]
[-436.91769409 -91.62039185]
[-448.68188477 -100.93011475]
[-460.04315186 -110.72749329]
[-470.98129272 -120.99512482]
[-481.47686768 -131.71473694]
[-491.51123047 -142.86727905]
[-501.06646729 -154.43292236]
[-510.12567139 -166.39109802]
[-518.67272949 -178.72055054]
[-526.69238281 -191.39935303]
[-534.17041016 -204.40496826]
[-541.09356689 -217.71426392]
[-547.44946289 -231.30358887]
[-553.22680664 -245.14877319]
[-558.41534424 -259.22518921]
[-563.00592041 -273.50784302]
[-566.99023438 -287.97131348]
[-570.36132812 -302.58990479]
[-573.11315918 -317.33761597]
[-575.24078369 -332.18820190]
[-576.74047852 -347.11529541]
[-577.60961914 -362.09234619]
[-577.84655762 -377.09271240]
[-577.45092773 -392.08972168]
[-576.42340088 -407.05673218]
[-574.76586914 -421.96713257]
[-572.48126221 -436.79437256]
[-569.57354736 -451.51214600]
[-566.04803467 -466.09423828]
[-561.91088867 -480.51477051]
[-557.16949463 -494.74804688]
[-551.83233643 -508.76879883]
[-545.90881348 -522.55206299]
[-539.40948486 -536.07342529]
[-532.34594727 -549.30871582]
[-524.73071289 -562.23449707]
[-516.57739258 -574.82775879]
[-507.90039062 -587.06610107]
[-498.71517944 -598.92773438]
[-489.03811646 -610.39166260]
[-478.88635254 -621.43743896]
[-468.27795410 -632.04541016]
[-457.23181152 -642.19671631]
[-445.76751709 -651.87335205]
[-433.90548706 -661.05810547]
[-421.66680908 -669.73461914]
[-409.07324219 -677.88751221]
[-396.14718628 -685.50219727]
[-382.91159058 -692.56524658]
[-369.39001465 -699.06402588]
[-355.60650635 -704.98699951]
[-341.58554077 -710.32366943]
[-327.35208130 -715.06445312]
[-312.93139648 -719.20104980]
[-298.34915161 -722.72601318]
[-283.63128662 -725.63311768]
[-268.80392456 -727.91717529]
[-253.89347839 -729.57415771]
[-238.92643738 -730.60107422]
[-223.92939758 -730.99609375]
[-208.92904663 -730.75860596]
[-193.95204163 -729.88891602]
[-179.02500916 -728.38861084]
[-164.17448425 -726.26037598]
[-149.42689514 -723.50799561]
[-134.80844116 -720.13635254]
[-120.34512329 -716.15148926]
[-106.06265259 -711.56036377]
[-91.98641968 -706.37127686]
[-78.14145660 -700.59338379]
[-64.55238342 -694.23693848]
[-51.24335098 -687.31329346]
[-38.23802567 -679.83477783]
[-25.55953407 -671.81457520]
[-13.23041630 -663.26708984]
[-1.27259243 -654.20739746]
[10.29267693 -644.65167236]
[21.44482803 -634.61694336]
[32.16403580 -624.12091064]
[42.43123627 -613.18237305]
[52.22817993 -601.82073975]
[61.53744507 -590.05621338]
[70.34248352 -577.90966797]
[78.62763977 -565.40270996]
[86.37817383 -552.55761719]
[93.58031464 -539.39721680]
[100.22126007 -525.94488525]
[106.28919220 -512.22460938]
[111.77333832 -498.26065063]
[116.66392517 -484.07794189]
[120.95227814 -469.70169067]
[124.63076019 -455.15740967]
[127.69284058 -440.47097778]
[130.13307190 -425.66854858]
[131.94709778 -410.77636719]
[133.13171387 -395.82098389]
[133.68481445 -380.82894897]
[133.60542297 -365.82693481]
[132.89364624 -350.84158325]
[131.55078125 -335.89956665]
[129.57920837 -321.02743530]
[126.98242188 -306.25164795]
[123.76505280 -291.59848022]
[119.93281555 -277.09396362]
[115.49252319 -262.76388550]
[110.45207214 -248.63374329]
[104.82042694 -234.72865295]
[98.60758972 -221.07333374]
[91.82462311 -207.69206238]
[84.48356628 -194.60862732]
[76.59749603 -181.84629822]
[68.18041229 -169.42778015]
[59.24728775 -157.37512207]
[49.81401062 -145.70977783]
[39.89734650 -134.45246887]
[29.51492691 -123.62322235]
[18.68521500 -113.24129486]
[7.42746401 -103.32514191]
[-4.23831034 -93.89238739]
[-16.29136658 -84.95980835]
[-7.87606049 -72.54277802]
[0.53924531 -60.12574768]
[8.95455074 -47.70871735]
[17.36985779 -35.29168701]
[25.78516388 -22.87465858]
[34.20046997 -10.45762920]
[42.61577606 1.95940089]
[57.24585342 4.50821114]
[65.95705414 16.98096466]
[63.18443298 32.30905533]
[71.59973907 44.72608566]
[80.01504517 57.14311600]
[92.85388947 53.25554276]
[106.26782227 53.12969208]
[119.17734528 56.77569580]
[130.54359436 63.90013885]
[139.45187378 73.92968750]
[145.18528748 86.05722809]
[147.28245544 99.30680084]
[145.57460022 112.61215210]
[140.19917297 124.90255737]
[131.58874512 135.18894958]
[139.71176147 147.79913330]
[152.94175720 140.71301270]
[166.69906616 134.71444702]
[180.89445496 129.84233093]
[195.43585205 126.12829590]
[210.22895813 123.59639740]
[225.17781067 122.26307678]
[240.18550110 122.13696289]
[255.15466309 123.21888733]
[269.98822021 125.50182343]
[284.58996582 128.97097778]
[298.86523438 133.60383606]
[312.72140503 139.37037659]
[326.06863403 146.23316956]
[338.82034302 154.14772034]
[350.89382935 163.06269836]
[362.21081543 172.92030334]
[372.69790649 183.65657043]
[382.28704834 195.20190430]
[390.91607666 207.48139954]
[398.52905273 220.41542053]
[405.07653809 233.92010498]
[410.51614380 247.90786743]
[414.81253052 262.28796387]
[417.93786621 276.96716309]
[419.87188721 291.85021973]
[420.60205078 306.84066772]
[420.12359619 321.84124756]
[418.43960571 336.75466919]
[415.56106567 351.48425293]
[411.50662231 365.93441772]
[406.30255127 380.01150513]
[399.98260498 393.62417603]
[392.58779907 406.68414307]
[384.16604614 419.10671997]
[374.77203369 430.81137085]
[364.46661377 441.72213745]
[353.31665039 451.76828003]
[341.39447021 460.88461304]
[328.77740479 469.01208496]
[315.54724121 476.09790039]
[301.78979492 482.09616089]
[287.59429932 486.96795654]
[273.05282593 490.68167114]
[258.25967407 493.21325684]
[243.31076050 494.54626465]
[228.30308533 494.67202759]
[213.33395386 493.58978271]
[198.50044250 491.30651855]
[183.89875793 487.83703613]
[169.62361145 483.20385742]
[155.76756287 477.43701172]
[142.42048645 470.57394409]
[129.66896057 462.65908813]
[117.59564972 453.74383545]
[106.27888489 443.88601685]
[95.79204559 433.14950562]
[86.20314789 421.60397339]
[77.57437897 409.32427979]
[69.96170807 396.39007568]
[63.41449738 382.88525391]
[57.97521210 368.89736938]
[53.67913055 354.51718140]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 206]
[15 205]
[23 195]
[24 194]
[25 193]
[28 190]
[29 189]
[30 188]
[31 187]
[32 186]
[33 185]
[34 184]
[35 183]
] def

init

% Start Annotations
14 206 0.16 1 colorpair
15 205 0.16 0.6 colorpair
23 195 0.32 0.6 colorpair
24 194 0.16 1 colorpair
25 193 0.16 0.6 colorpair
28 190 0.16 1 colorpair
29 189 0.0 0.6 colorpair
30 188 0.16 1 colorpair
31 187 0.16 1 colorpair
32 186 0.16 0.6 colorpair
33 185 0.32 0.6 colorpair
34 184 0.0 1 colorpair
35 183 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
206 cmark
15 205 1 gmark
15 cmark
205 cmark
23 195 1 gmark
23 cmark
195 cmark
24 cmark
194 cmark
25 193 1 gmark
25 cmark
193 cmark
28 cmark
29 189 1 gmark
30 cmark
188 cmark
31 cmark
187 cmark
32 186 1 gmark
32 cmark
186 cmark
33 185 1 gmark
33 cmark
185 cmark
35 cmark

% End Annotations
showpage
end
%%EOF
