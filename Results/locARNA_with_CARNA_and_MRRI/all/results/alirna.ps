%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Feb 15 17:44:43 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________UAAUUCAGUUUGAACAGUUUUUUAGAAAAGAGGAUUUUAC_____AUGACU___A__AAAAAACCAGGAAGACCCGGCGGAAGCCGGGCUGUCAAUAUGCUAAAACGCGCGGCAACCCG__________________________CCCACGCCACCCAACCGCAAACAAGAAACAGCAUAUUGACACCUGGGA__AAGACUGGGAGAUUCUGUGCUUUUCCGCAAC__AACAGCCACCAG_GCACAG\
AU_CGCCG___AA_AGAUGUGGCUGGUGGUUGUAAAACACACAGGCUCU\
) } def
/len { sequence length } bind def

/coor [
[55.32871628 604.13745117]
[40.40906906 602.59228516]
[25.54175758 600.60571289]
[10.73984814 598.17938232]
[-3.98366308 595.31555176]
[-18.61584282 592.01666260]
[-33.14383698 588.28558350]
[-47.55488968 584.12567139]
[-61.83634186 579.54046631]
[-75.97564697 574.53411865]
[-89.96038818 569.11102295]
[-103.77828217 563.27581787]
[-117.41719055 557.03375244]
[-130.86514282 550.39025879]
[-144.11030579 543.35113525]
[-157.14106750 535.92266846]
[-169.94598389 528.11126709]
[-182.51379395 519.92382812]
[-194.83346558 511.36761475]
[-206.89416504 502.45007324]
[-218.68533325 493.17901611]
[-230.19657898 483.56265259]
[-241.41780090 473.60937500]
[-252.33914185 463.32797241]
[-262.95101929 452.72741699]
[-273.24411011 441.81707764]
[-283.20938110 430.60650635]
[-292.83804321 419.10552979]
[-302.12170410 407.32431030]
[-311.05212402 395.27313232]
[-319.62155151 382.96261597]
[-327.82238770 370.40356445]
[-335.64746094 357.60702515]
[-343.08987427 344.58419800]
[-350.14312744 331.34658813]
[-356.80102539 317.90573120]
[-363.05767822 304.27349854]
[-368.90762329 290.46185303]
[-374.34573364 276.48294067]
[-379.36718750 262.34896851]
[-383.96759033 248.07244873]
[-388.14294434 233.66584778]
[-391.88952637 219.14184570]
[-395.20407104 204.51319885]
[-398.08367920 189.79277039]
[-400.52578735 174.99345398]
[-402.52828979 160.12828064]
[-404.08938599 145.21029663]
[-405.20773315 130.25259399]
[-405.88235474 115.26831818]
[-406.11264038 100.27064514]
[-405.89840698 85.27272034]
[-405.23980713 70.28774261]
[-404.13745117 55.32885361]
[-402.59231567 40.40920639]
[-400.60571289 25.54189491]
[-398.17941284 10.73998356]
[-395.31555176 -3.98352814]
[-392.01666260 -18.61570930]
[-388.28561401 -33.14370346]
[-384.12567139 -47.55475998]
[-379.54052734 -61.83621216]
[-374.53417969 -75.97551727]
[-369.11105347 -89.96025848]
[-363.27587891 -103.77815247]
[-357.03381348 -117.41706848]
[-350.39031982 -130.86502075]
[-343.35122681 -144.11018372]
[-335.92272949 -157.14096069]
[-328.11132812 -169.94586182]
[-319.92391968 -182.51367188]
[-311.36770630 -194.83334351]
[-302.45013428 -206.89405823]
[-293.17910767 -218.68522644]
[-283.56274414 -230.19647217]
[-273.60946655 -241.41769409]
[-263.32806396 -252.33905029]
[-252.72752380 -262.95092773]
[-241.81716919 -273.24401855]
[-230.60659790 -283.20928955]
[-219.10565186 -292.83798218]
[-207.32441711 -302.12161255]
[-195.27325439 -311.05206299]
[-182.96273804 -319.62145996]
[-170.40368652 -327.82229614]
[-157.60714722 -335.64739990]
[-144.58433533 -343.08981323]
[-131.34669495 -350.14306641]
[-117.90586090 -356.80096436]
[-104.27363586 -363.05761719]
[-90.46199036 -368.90756226]
[-76.48305511 -374.34567261]
[-62.34911346 -379.36712646]
[-48.07257462 -383.96755981]
[-33.66597748 -388.14291382]
[-19.14198112 -391.88949585]
[-4.51333904 -395.20404053]
[10.20710087 -398.08364868]
[25.00640869 -400.52575684]
[23.00384521 -415.39147949]
[21.00128365 -430.25720215]
[18.99872017 -445.12295532]
[16.99615860 -459.98867798]
[14.99359608 -474.85440063]
[12.99103451 -489.72012329]
[10.98847198 -504.58584595]
[8.98590946 -519.45153809]
[6.98334742 -534.31726074]
[4.98078537 -549.18298340]
[-10.00922585 -548.43060303]
[-25.00962448 -548.93518066]
[-39.91519165 -550.69317627]
[-54.62137604 -553.69226074]
[-69.02501678 -557.91149902]
[-83.02509308 -563.32116699]
[-96.52339172 -569.88336182]
[-109.42523193 -577.55206299]
[-121.64012146 -586.27343750]
[-133.08236694 -595.98638916]
[-143.67173767 -606.62274170]
[-153.33390808 -618.10791016]
[-162.00114441 -630.36132812]
[-169.61264038 -643.29699707]
[-176.11500549 -656.82421875]
[-181.46261597 -670.84808350]
[-185.61798096 -685.27026367]
[-188.55195618 -699.98962402]
[-190.24392700 -714.90283203]
[-190.68206787 -729.90527344]
[-189.86328125 -744.89184570]
[-187.79330444 -759.75726318]
[-184.48667908 -774.39739990]
[-179.96659851 -788.70947266]
[-174.26473999 -802.59307861]
[-167.42112732 -815.95092773]
[-159.48374939 -828.68927002]
[-150.50828552 -840.71868896]
[-140.55769348 -851.95489502]
[-129.70178223 -862.31903076]
[-118.01667023 -871.73846436]
[-105.58435059 -880.14697266]
[-92.49201965 -887.48577881]
[-78.83150482 -893.70324707]
[-64.69863129 -898.75579834]
[-50.19253922 -902.60803223]
[-35.41496658 -905.23291016]
[-20.46957970 -906.61199951]
[-5.46120691 -906.73565674]
[9.50487614 -905.60302734]
[24.32369232 -903.22198486]
[38.89129639 -899.60931396]
[53.10550308 -894.79028320]
[66.86660767 -888.79876709]
[80.07809448 -881.67675781]
[92.64727783 -873.47418213]
[104.48600769 -864.24859619]
[115.51123047 -854.06475830]
[125.64561462 -842.99401855]
[134.81808472 -831.11413574]
[142.96427917 -818.50836182]
[150.02706909 -805.26507568]
[155.95692444 -791.47729492]
[160.71223450 -777.24163818]
[164.25964355 -762.65802002]
[166.57427979 -747.82867432]
[167.63990784 -732.85766602]
[167.44903564 -717.85003662]
[166.00302124 -702.91094971]
[163.31199646 -688.14526367]
[159.39483643 -673.65655518]
[154.27902222 -659.54644775]
[148.00045776 -645.91394043]
[140.60313416 -632.85461426]
[132.13899231 -620.46008301]
[122.66736603 -608.81726074]
[112.25470734 -598.00787354]
[100.97406006 -588.10766602]
[88.90454102 -579.18615723]
[76.13081360 -571.30590820]
[62.74247742 -564.52215576]
[48.83344269 -558.88256836]
[34.50127792 -554.42657471]
[19.84650803 -551.18554688]
[21.84907150 -536.31982422]
[23.85163307 -521.45410156]
[25.85419655 -506.58840942]
[27.85675812 -491.72268677]
[29.85931969 -476.85696411]
[31.86188316 -461.99124146]
[33.86444473 -447.12548828]
[35.86700821 -432.25976562]
[37.86956787 -417.39404297]
[39.87213135 -402.52832031]
[54.79012299 -404.08941650]
[69.74781799 -405.20776367]
[84.73209381 -405.88238525]
[99.72977448 -406.11264038]
[114.72769165 -405.89837646]
[129.71267700 -405.23977661]
[144.67155457 -404.13742065]
[159.59120178 -402.59225464]
[174.45851135 -400.60565186]
[189.26042175 -398.17935181]
[203.98393250 -395.31549072]
[218.61610413 -392.01657104]
[233.14410400 -388.28549194]
[247.55516052 -384.12554932]
[261.83660889 -379.54040527]
[275.97589111 -374.53405762]
[289.96063232 -369.11090088]
[303.77853394 -363.27572632]
[317.41744995 -357.03363037]
[330.86538696 -350.39010620]
[344.11056519 -343.35101318]
[357.14132690 -335.92251587]
[369.94622803 -328.11111450]
[382.51400757 -319.92370605]
[394.83367920 -311.36746216]
[406.89437866 -302.44989014]
[418.68554688 -293.17886353]
[430.19677734 -283.56246948]
[441.41799927 -273.60919189]
[452.33935547 -263.32775879]
[462.95123291 -252.72721863]
[473.24429321 -241.81686401]
[483.20956421 -230.60629272]
[492.83822632 -219.10533142]
[502.12185669 -207.32408142]
[511.05230713 -195.27291870]
[519.62170410 -182.96238708]
[527.82250977 -170.40333557]
[535.64758301 -157.60678101]
[543.09002686 -144.58396912]
[550.14324951 -131.34632874]
[556.80114746 -117.90548706]
[563.05780029 -104.27325439]
[568.90771484 -90.46160889]
[574.34582520 -76.48266602]
[579.36724854 -62.34872055]
[583.96765137 -48.07217789]
[588.14300537 -33.66558075]
[591.88958740 -19.14158058]
[595.20410156 -4.51293421]
[598.08374023 10.20750809]
[600.52581787 25.00681686]
[602.52832031 39.87199402]
[604.08941650 54.78998566]
[605.20776367 69.74768066]
[605.88238525 84.73195648]
[606.11267090 99.72963715]
[605.89837646 114.72755432]
[605.23980713 129.71253967]
[604.13745117 144.67141724]
[602.59228516 159.59106445]
[600.60565186 174.45837402]
[598.17938232 189.26028442]
[595.31549072 203.98379517]
[592.01660156 218.61598206]
[588.28552246 233.14396667]
[584.12561035 247.55502319]
[579.54046631 261.83648682]
[574.53411865 275.97576904]
[569.11096191 289.96051025]
[563.27575684 303.77841187]
[557.03369141 317.41732788]
[550.39019775 330.86526489]
[543.35107422 344.11044312]
[535.92254639 357.14120483]
[528.11120605 369.94610596]
[519.92376709 382.51391602]
[511.36752319 394.83358765]
[502.44998169 406.89428711]
[493.17892456 418.68542480]
[483.56256104 430.19668579]
[473.60928345 441.41790771]
[463.32788086 452.33923340]
[452.72732544 462.95111084]
[441.81698608 473.24420166]
[430.60638428 483.20947266]
[419.10543823 492.83813477]
[407.32418823 502.12176514]
[395.27301025 511.05221558]
[382.96249390 519.62164307]
[370.40344238 527.82244873]
[357.60690308 535.64752197]
[344.58407593 543.08996582]
[331.34643555 550.14318848]
[317.90560913 556.80108643]
[304.27337646 563.05773926]
[290.46173096 568.90765381]
[276.48278809 574.34576416]
[262.34884644 579.36724854]
[248.07231140 583.96765137]
[233.66571045 588.14294434]
[219.14170837 591.88958740]
[204.51306152 595.20410156]
[189.79263306 598.08367920]
[174.99331665 600.52581787]
[160.12814331 602.52832031]
[145.21015930 604.08941650]
[130.25245667 605.20776367]
[115.26818085 605.88238525]
[100.27050018 606.11267090]
[85.27258301 605.89837646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[99 193]
[100 192]
[101 191]
[102 190]
[103 189]
[104 188]
[105 187]
[106 186]
[107 185]
[108 184]
[109 183]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
99 193 22 gmark
99 cmark
193 cmark
100 192 7 gmark
100 cmark
192 cmark
101 191 6 gmark
101 cmark
191 cmark
102 190 18 gmark
102 cmark
190 cmark
103 189 15 gmark
103 cmark
189 cmark
104 188 12 gmark
104 cmark
188 cmark
105 187 18 gmark
105 cmark
106 186 13 gmark
106 cmark
186 cmark
107 185 12 gmark
107 cmark
185 cmark
108 184 16 gmark
108 cmark
184 cmark
109 183 20 gmark
183 cmark

% End Annotations
showpage
end
%%EOF
