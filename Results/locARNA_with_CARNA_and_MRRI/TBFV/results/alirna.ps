%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Wed Feb  7 15:14:53 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUUGAGAAAAAGACAGCUUAGGAGAACAAGAGCUGGGG______AUGGCCAGGAAGGCCAUCCUGAAAGGAAAGGGGGGCGGUCCCCCUCGACGAGUGUCGAAAGAGACCGCAA_____________CUCUCUUCAGGAUUUUUCCUCCUCCUAUACCAAA_UUCCCCCUCGACAGAGGGGGGGCGGUUCUUGUUCUCCCUGAGCCACCAUCACCCAGAC\
) } def
/len { sequence length } bind def

/coor [
[-20.17627144 875.21270752]
[-35.11304474 873.44281006]
[-49.49369049 869.03411865]
[-62.85593033 862.12829590]
[-74.77021790 852.94738770]
[-84.85356140 841.78643799]
[-92.78182983 829.00433350]
[-98.30015564 815.01190186]
[-101.23114014 800.25897217]
[-101.48057556 785.21978760]
[-99.04044342 770.37774658]
[-93.98917389 756.21002197]
[-86.48915863 743.17205811]
[-76.78147888 731.68286133]
[-65.17820740 722.11187744]
[-52.05233002 714.76672363]
[-37.82579803 709.88354492]
[-22.95593262 707.61926270]
[-22.53335381 692.62524414]
[-22.11077309 677.63122559]
[-21.68819427 662.63714600]
[-21.26561356 647.64312744]
[-20.84303474 632.64904785]
[-20.42045403 617.65502930]
[-20.10350037 602.65838623]
[-19.89218903 587.65985107]
[-19.68087959 572.66131592]
[-19.46956825 557.66284180]
[-19.25825691 542.66430664]
[-19.04694557 527.66583252]
[-18.83563614 512.66729736]
[-18.62432480 497.66879272]
[-18.41301346 482.67025757]
[-18.20170212 467.67175293]
[-17.99039268 452.67324829]
[-17.77908134 437.67474365]
[-17.56777000 422.67623901]
[-24.33068085 436.06512451]
[-34.29089355 447.28094482]
[-46.78682327 455.57864380]
[-60.98844910 460.40707397]
[-75.95246124 461.44552612]
[-90.68489838 458.62503052]
[-104.20719147 452.13290405]
[-115.62115479 442.40039062]
[-124.16862488 430.07397461]
[-129.28186035 415.97238159]
[-130.62123108 401.03231812]
[-128.09776306 386.24609375]
[-121.87907410 372.59588623]
[-112.37822723 360.98840332]
[-100.22630310 352.19461060]
[-86.23046112 346.79864502]
[-71.32035828 345.15890503]
[-56.48635864 347.38430786]
[-42.71378326 353.32705688]
[-30.91745186 362.59240723]
[-21.88091087 374.56491089]
[-16.20439339 388.44934082]
[-14.26494980 403.32565308]
[-9.48923969 389.10620117]
[-10.33861923 381.77117920]
[-4.54479980 374.72091675]
[0.43075109 360.57015991]
[5.40630198 346.41940308]
[10.38185310 332.26864624]
[-1.53328502 323.23590088]
[-10.08469296 310.94592285]
[-14.42457485 296.59512329]
[-14.11586761 281.58526611]
[-9.17622375 267.38659668]
[-0.07751115 255.39375305]
[12.29922867 246.78883362]
[26.74908829 242.42488098]
[41.86058426 242.74131775]
[46.83613586 228.59056091]
[51.81168747 214.43980408]
[56.78723526 200.28904724]
[61.76278687 186.13829041]
[66.73834229 171.98753357]
[71.71389008 157.83677673]
[58.71902466 149.40727234]
[48.11349487 138.11807251]
[40.51114273 124.62261200]
[36.35199738 109.70200348]
[35.87678528 94.21984100]
[39.11301041 79.07223511]
[45.87335968 65.13591766]
[55.76655197 53.21753311]
[68.21996307 44.00690842]
[82.51280212 38.03714752]
[97.81779480 35.65378571]
[113.24909210 36.99477386]
[118.02480316 22.77532768]
[115.08383179 7.22986937]
[126.47062683 -2.37170625]
[131.24633789 -16.59115028]
[136.02204895 -30.81059456]
[135.78701782 -39.93304062]
[140.96649170 -45.19588852]
[145.33970642 -59.54422760]
[149.10279846 -74.06452942]
[141.34963989 -87.57476044]
[145.37280273 -102.24681091]
[158.30052185 -109.55499268]
[162.06361389 -124.07529449]
[165.82669067 -138.59559631]
[169.58978271 -153.11590576]
[173.35287476 -167.63619995]
[177.11595154 -182.15650940]
[164.14639282 -189.90034485]
[153.88487244 -200.98538208]
[147.16328430 -214.51301575]
[144.52648926 -229.38661194]
[146.18826294 -244.40045166]
[152.01388550 -258.33740234]
[161.53108215 -270.06768799]
[173.96835327 -278.64038086]
[188.31747437 -283.36050415]
[203.41520691 -283.84545898]
[218.03764343 -280.05587769]
[230.99943542 -272.29904175]
[241.24980164 -261.20367432]
[247.95779419 -247.66931152]
[250.57965088 -232.79306030]
[248.90278625 -217.78091431]
[243.06318665 -203.84980774]
[233.53419495 -192.12908936]
[221.08831787 -183.56890869]
[206.73446655 -178.86318970]
[191.63626099 -178.39341736]
[187.87316895 -163.87312317]
[184.11007690 -149.35281372]
[180.34700012 -134.83251953]
[176.58390808 -120.31221008]
[172.82081604 -105.79190826]
[180.57170105 -93.12464905]
[176.96223450 -78.34539032]
[163.62309265 -70.30144501]
[159.86001587 -55.78114319]
[173.27789307 -62.48638535]
[187.54786682 -57.86381912]
[194.48558044 -44.56464005]
[190.11203003 -30.21640015]
[176.93557739 -23.04831314]
[162.51341248 -27.17152977]
[155.11723328 -40.22033691]
[150.24148560 -26.03488541]
[145.46577454 -11.81544018]
[140.69006348 2.40400386]
[143.97262573 16.93239212]
[132.24424744 27.55103874]
[127.46853638 41.77048111]
[139.75651550 49.35795975]
[150.04415894 59.49347687]
[157.81385803 71.66706848]
[162.67465210 85.26622009]
[164.38200378 99.60669708]
[162.84999084 113.96696472]
[158.15568542 127.62448883]
[150.53530884 139.89208984]
[140.37225342 150.15254211]
[128.17788696 157.88958740]
[114.56575775 162.71391296]
[100.22075653 164.38282776]
[85.86464691 162.81233215]
[80.88909149 176.96308899]
[75.91354370 191.11384583]
[70.93799591 205.26460266]
[65.96244049 219.41535950]
[60.98689270 233.56611633]
[56.01134109 247.71687317]
[67.99552917 256.92755127]
[76.53446960 269.37460327]
[80.80229187 283.83190918]
[80.39309692 298.88009644]
[75.35955048 313.04574585]
[66.20645142 324.94583130]
[53.84016800 333.42257690]
[39.47888565 337.65621948]
[24.53260803 337.24420166]
[19.55705833 351.39495850]
[14.58150673 365.54571533]
[9.60595608 379.69647217]
[4.73020458 393.88192749]
[-0.04550524 408.10137939]
[-2.56925845 422.88754272]
[-2.78056931 437.88604736]
[-2.99188042 452.88455200]
[-3.20319128 467.88305664]
[-3.41450214 482.88159180]
[-3.62581301 497.88009644]
[-3.83712387 512.87860107]
[-4.04843473 527.87713623]
[-4.25974560 542.87561035]
[-4.47105646 557.87414551]
[-4.68236732 572.87268066]
[-4.89367867 587.87115479]
[-5.10498953 602.86968994]
[-2.09886503 611.48577881]
[-5.42640781 618.07757568]
[-5.84898758 633.07165527]
[-6.27156734 648.06567383]
[-6.69414711 663.05975342]
[-7.11672735 678.05377197]
[-7.53930712 693.04785156]
[-7.96188688 708.04187012]
[6.75684834 711.14001465]
[20.68577003 716.81671143]
[33.37711716 724.88946533]
[44.42292023 735.09881592]
[53.46810150 747.11645508]
[60.22189331 760.55621338]
[64.46719360 774.98590088]
[66.06752777 789.94183350]
[64.97145844 804.94311523]
[61.21421051 819.50756836]
[54.91656876 833.16693115]
[46.28098297 845.48223877]
[35.58504105 856.05755615]
[23.17257690 864.55285645]
[9.44260311 870.69512939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 207]
[19 206]
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[25 199]
[26 198]
[27 197]
[28 196]
[29 195]
[30 194]
[31 193]
[32 192]
[33 191]
[34 190]
[35 189]
[36 188]
[37 187]
[60 186]
[61 185]
[63 184]
[64 183]
[65 182]
[66 181]
[75 172]
[76 171]
[77 170]
[78 169]
[79 168]
[80 167]
[81 166]
[93 153]
[94 152]
[96 150]
[97 149]
[98 148]
[100 147]
[101 140]
[102 139]
[105 136]
[106 135]
[107 134]
[108 133]
[109 132]
[110 131]
] def

init

% Start Annotations
18 207 0.0 1 colorpair
19 206 0.0 1 colorpair
20 205 0.0 1 colorpair
21 204 0.0 1 colorpair
22 203 0.0 1 colorpair
23 202 0.0 1 colorpair
24 201 0.0 1 colorpair
25 199 0.0 1 colorpair
26 198 0.0 1 colorpair
27 197 0.0 1 colorpair
28 196 0.0 1 colorpair
29 195 0.0 1 colorpair
30 194 0.0 1 colorpair
31 193 0.0 1 colorpair
32 192 0.0 1 colorpair
33 191 0.0 1 colorpair
34 190 0.0 1 colorpair
35 189 0.0 1 colorpair
36 188 0.0 1 colorpair
37 187 0.0 1 colorpair
60 186 0.0 1 colorpair
61 185 0.0 0.6 colorpair
63 184 0.0 1 colorpair
64 183 0.16 1 colorpair
65 182 0.0 1 colorpair
66 181 0.0 1 colorpair
75 172 0.0 0.6 colorpair
76 171 0.0 1 colorpair
77 170 0.0 1 colorpair
78 169 0.0 1 colorpair
79 168 0.0 1 colorpair
80 167 0.0 1 colorpair
81 166 0.0 0.6 colorpair
93 153 0.0 1 colorpair
94 152 0.16 1 colorpair
96 150 0.0 1 colorpair
97 149 0.16 1 colorpair
98 148 0.0 0.6 colorpair
100 147 0.0 1 colorpair
101 140 0.16 1 colorpair
102 139 0.16 1 colorpair
105 136 0.0 1 colorpair
106 135 0.0 0.6 colorpair
107 134 0.0 1 colorpair
108 133 0.0 0.2 colorpair
109 132 0.0 0.6 colorpair
110 131 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
61 185 1 gmark
64 cmark
75 172 1 gmark
81 166 1 gmark
94 cmark
97 cmark
149 cmark
98 148 1 gmark
101 cmark
102 cmark
106 135 1 gmark
108 133 2 gmark
109 132 1 gmark
110 cmark

% End Annotations
showpage
end
%%EOF
