%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Wed Feb  7 15:14:48 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
A_AACAAUUUUGAUUAGAGUAAACUAGAAAAAGAAUUAUCAAUGGUUACAAAAGCUAGA__AAGAAC___GGCCGCAAAACGGGCUGUCAAUAUGAUAAAACGUA__UUGCC___CG_CU_______AGCC_A__CCCCCUUAAAAAUAUAG__CAGCAUAUUGACACCUGGGAA_AGACCGGAGAUA_____CUCUUUGUUUACUCGAAACAACCACC_AAACGGA\
) } def
/len { sequence length } bind def

/coor [
[74.25926971 497.76922607]
[61.35643005 490.04751587]
[49.94427109 480.25616455]
[40.35114670 468.67687988]
[32.85306549 455.64282227]
[27.66576385 441.52899170]
[24.93848991 426.74148560]
[24.74971581 411.70578003]
[27.10486984 396.85449219]
[31.93618965 382.61486816]
[39.10467148 369.39666748]
[48.40406036 357.58020020]
[59.56679535 347.50540161]
[72.27170563 339.46218872]
[86.15323639 333.68197632]
[100.81199646 330.33102417]
[99.98567963 315.35382080]
[99.15936279 300.37658691]
[98.33305359 285.39938354]
[89.90637970 273.11764526]
[96.87171173 258.91220093]
[96.04539490 243.93498230]
[95.21907806 228.95776367]
[94.39276123 213.98054504]
[92.03549194 211.37376404]
[90.81753540 207.50009155]
[91.31871796 202.90455627]
[93.85480499 198.36979675]
[93.64812469 183.37121582]
[93.44145203 168.37265015]
[93.23477173 153.37406921]
[85.32284546 140.75460815]
[92.86926270 126.84914398]
[78.21482086 117.23745728]
[72.23062897 100.76545715]
[77.29832458 83.98881531]
[91.40103149 73.58444214]
[90.78115845 58.59725571]
[90.16128540 43.61006927]
[89.54140472 28.62288284]
[78.19608307 17.94948578]
[77.78094482 2.74151754]
[88.02631378 -8.00873661]
[87.40644073 -22.99592400]
[86.78656769 -37.98310852]
[86.16668701 -52.97029495]
[80.34748840 -39.14506912]
[71.72600555 -26.87029648]
[60.69525909 -16.70552444]
[47.75807953 -9.11412144]
[33.50421524 -4.44214010]
[18.58343697 -2.90255499]
[3.67590666 -4.56554842]
[-10.53880978 -9.35531235]
[-23.41273117 -17.05350494]
[-34.35899353 -27.30920029]
[-42.87861252 -39.65489197]
[-48.58322144 -53.52779388]
[-51.21276474 -68.29551697]
[-50.64738083 -83.28485107]
[-46.91284180 -97.81252289]
[-40.17938995 -111.21627808]
[-30.75396538 -122.88510132]
[-19.06623459 -132.28706360]
[-5.64898205 -138.99357605]
[8.88616180 -142.69892883]
[23.87660789 -143.23419189]
[38.63901520 -140.57499695]
[52.50043106 -134.84252930]
[64.82897949 -126.29812622]
[75.06266785 -115.33128357]
[82.73498535 -102.44192505]
[87.49618530 -88.21761322]
[89.12923431 -73.30394745]
[77.79854584 -83.39806366]
[71.21345520 -97.02449036]
[70.34938812 -112.09323883]
[75.30692291 -126.30627441]
[85.30121613 -137.50801086]
[98.78604889 -144.01222229]
[113.69301605 -144.85580444]
[118.56350708 -159.04306030]
[123.43399811 -173.23031616]
[128.30448914 -187.41757202]
[128.13006592 -196.53793335]
[133.34106445 -201.76596069]
[138.40657043 -215.88476562]
[143.47207642 -230.00357056]
[148.53759766 -244.12237549]
[153.60310364 -258.24118042]
[158.66860962 -272.35998535]
[163.73411560 -286.47879028]
[168.79962158 -300.59759521]
[173.86512756 -314.71640015]
[178.93064880 -328.83520508]
[183.99615479 -342.95401001]
[189.06166077 -357.07281494]
[194.12716675 -371.19161987]
[180.62506104 -377.75976562]
[167.91227722 -385.74923706]
[156.13783264 -395.06643677]
[145.43980408 -405.60205078]
[135.94360352 -417.23260498]
[127.76058197 -429.82168579]
[120.98667145 -443.22174072]
[115.70129395 -457.27563477]
[111.96642303 -471.81860352]
[109.82585144 -486.68014526]
[109.30466461 -501.68600464]
[110.40897369 -516.66021729]
[113.12584686 -531.42730713]
[117.42341614 -545.81402588]
[123.25129700 -559.65173340]
[130.54115295 -572.77825928]
[139.20753479 -585.03961182]
[149.14881897 -596.29211426]
[160.24845886 -606.40374756]
[172.37629700 -615.25604248]
[185.39015198 -622.74511719]
[199.13745117 -628.78326416]
[213.45701599 -633.29962158]
[228.18093872 -636.24127197]
[243.13659668 -637.57366943]
[258.14865112 -637.28131104]
[273.04110718 -635.36749268]
[287.63931274 -631.85473633]
[301.77212524 -626.78417969]
[315.27386475 -620.21533203]
[327.98623657 -612.22515869]
[339.76019287 -602.90734863]
[350.45764160 -592.37109375]
[359.95321655 -580.74005127]
[368.13555908 -568.15051270]
[374.90875244 -554.75012207]
[380.19335938 -540.69592285]
[383.92745972 -526.15277100]
[386.06723022 -511.29110718]
[386.58761597 -496.28524780]
[385.48248291 -481.31106567]
[382.76483154 -466.54415894]
[378.46649170 -452.15765381]
[372.63787842 -438.32022095]
[365.34729004 -425.19412231]
[356.68026733 -412.93319702]
[346.73837280 -401.68127441]
[335.63818359 -391.57022095]
[323.50985718 -382.71859741]
[310.49560547 -375.23019409]
[296.74798584 -369.19281006]
[282.42819214 -364.67721558]
[267.70410156 -361.73638916]
[252.74836731 -360.40475464]
[237.73632812 -360.69793701]
[222.84399414 -362.61254883]
[208.24597168 -366.12609863]
[203.18046570 -352.00729370]
[198.11495972 -337.88848877]
[193.04943848 -323.76968384]
[187.98393250 -309.65087891]
[182.91842651 -295.53207397]
[177.85292053 -281.41326904]
[172.78741455 -267.29446411]
[167.72190857 -253.17567444]
[162.65638733 -239.05686951]
[157.59088135 -224.93806458]
[152.52537537 -210.81925964]
[147.45986938 -196.70045471]
[142.49174500 -182.54708862]
[137.62126160 -168.35983276]
[132.75076294 -154.17256165]
[127.88027191 -139.98530579]
[139.12582397 -130.16355896]
[145.77229309 -116.74826813]
[146.77893066 -101.76989746]
[141.96130371 -87.50883484]
[132.02401733 -76.14820099]
[118.45793152 -69.43967438]
[103.31649017 -68.43345642]
[101.15387726 -53.59017181]
[101.77375031 -38.60298538]
[102.39362335 -23.61579704]
[103.01349640 -8.62861156]
[114.11162567 1.23886943]
[114.95376587 16.42917824]
[104.52859497 28.00300980]
[105.14846802 42.99019623]
[105.76834106 57.97738266]
[106.38822174 72.96456909]
[117.23139191 78.21002197]
[124.83495331 87.55214691]
[127.76937103 99.23454285]
[125.48296356 111.06085205]
[118.40558624 120.80764771]
[107.86783600 126.64246368]
[115.79454803 140.33471680]
[108.23334503 153.16738892]
[108.44002533 168.16596985]
[108.64669800 183.16455078]
[108.85337830 198.16311646]
[109.36998749 213.15422058]
[110.19630432 228.13143921]
[111.02262115 243.10867310]
[111.84893799 258.08587646]
[120.33470917 271.43887329]
[113.31027222 284.57305908]
[114.13658905 299.55026245]
[114.96290588 314.52749634]
[115.78922272 329.50473022]
[130.72764587 331.22271729]
[145.16079712 335.44079590]
[158.67341614 342.03753662]
[170.87670898 350.82318115]
[181.41957092 361.54495239]
[189.99865723 373.89434814]
[196.36712646 387.51602173]
[200.34175110 402.01809692]
[201.80816650 416.98333740]
[200.72419739 431.98107910]
[197.12101746 446.57989502]
[191.10229492 460.35971069]
[182.84121704 472.92404175]
[172.57545471 483.91140747]
[160.60037231 493.00564575]
[147.26052856 499.94515991]
[132.93974304 504.53024292]
[118.05003357 506.62896729]
[103.01982117 506.18096924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 208]
[17 207]
[18 206]
[19 205]
[21 203]
[22 202]
[23 201]
[24 200]
[28 199]
[29 198]
[30 197]
[31 196]
[33 194]
[37 188]
[38 187]
[39 186]
[40 185]
[43 182]
[44 181]
[45 180]
[46 179]
[74 178]
[81 171]
[82 170]
[83 169]
[84 168]
[86 167]
[87 166]
[88 165]
[89 164]
[90 163]
[91 162]
[92 161]
[93 160]
[94 159]
[95 158]
[96 157]
[97 156]
[98 155]
] def

init

% Start Annotations
16 208 0.16 0.2 colorpair
17 207 0.0 1 colorpair
18 206 0.32 0.6 colorpair
19 205 0.48 0.6 colorpair
21 203 0.32 0.2 colorpair
22 202 0.32 0.6 colorpair
23 201 0.16 0.2 colorpair
24 200 0.16 0.6 colorpair
28 199 0.16 0.6 colorpair
29 198 0.0 0.2 colorpair
30 197 0.16 0.6 colorpair
31 196 0.32 0.2 colorpair
33 194 0.16 0.6 colorpair
37 188 0.0 0.6 colorpair
38 187 0.0 0.2 colorpair
39 186 0.16 0.6 colorpair
40 185 0.0 1 colorpair
43 182 0.16 1 colorpair
44 181 0.16 1 colorpair
45 180 0.0 0.2 colorpair
46 179 0.0 0.2 colorpair
74 178 0.16 1 colorpair
81 171 0.0 0.6 colorpair
82 170 0.0 0.2 colorpair
83 169 0.16 0.6 colorpair
84 168 0.0 0.6 colorpair
86 167 0.0 0.6 colorpair
87 166 0.0 0.6 colorpair
88 165 0.0 1 colorpair
89 164 0.16 1 colorpair
90 163 0.16 1 colorpair
91 162 0.0 1 colorpair
92 161 0.0 1 colorpair
93 160 0.0 1 colorpair
94 159 0.0 1 colorpair
95 158 0.16 1 colorpair
96 157 0.32 1 colorpair
97 156 0.0 0.2 colorpair
98 155 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
16 208 2 gmark
16 cmark
208 cmark
18 206 1 gmark
18 cmark
206 cmark
19 205 1 gmark
19 cmark
205 cmark
21 203 2 gmark
21 cmark
203 cmark
22 202 1 gmark
22 cmark
202 cmark
23 201 2 gmark
23 cmark
201 cmark
24 200 1 gmark
24 cmark
28 199 1 gmark
28 cmark
29 198 2 gmark
30 197 1 gmark
30 cmark
197 cmark
31 196 2 gmark
31 cmark
196 cmark
33 194 1 gmark
194 cmark
37 188 1 gmark
38 187 2 gmark
39 186 1 gmark
39 cmark
186 cmark
182 cmark
181 cmark
45 180 2 gmark
46 179 2 gmark
74 cmark
81 171 1 gmark
82 170 2 gmark
83 169 1 gmark
169 cmark
84 168 1 gmark
86 167 1 gmark
87 166 1 gmark
89 cmark
90 cmark
163 cmark
95 cmark
158 cmark
96 cmark
157 cmark
97 156 2 gmark
98 155 2 gmark
98 cmark
155 cmark

% End Annotations
showpage
end
%%EOF
