%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Feb 15 17:44:59 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
A_AACAAUUUUGAUUAGAGUAAACUAGAAAAAGAAUUAUCAAUG______AUGACUAAACUAGGAAAGACGGCCGCAAAACGGGCUGUCAAUAUGAUAAAACGUA__UUGCCA__CG__________AG___A_CCCCCUCAAAAAAU_UAGAACAGCAUAUUGACACCUGGGAA_AGACCGGAGAUAC_ACUUGAUUCCUCGACACU_AACACCA__AAUGGCACAGAGCGCCGGAAA__AGCUGUUGUUAAAA\
UAGAAAAAAAAUAA_GUAUCU\
) } def
/len { sequence length } bind def

/coor [
[127.25807953 682.41571045]
[116.49532318 671.96313477]
[106.26265717 660.99114990]
[96.58511353 649.52648926]
[87.48638916 637.59735107]
[78.98873901 625.23278809]
[71.11295319 612.46307373]
[63.87832260 599.31958008]
[57.30253601 585.83428955]
[51.40169525 572.04040527]
[46.19023514 557.97149658]
[41.68091202 543.66210938]
[37.88476181 529.14727783]
[34.81106949 514.46240234]
[32.46736145 499.64349365]
[30.85936928 484.72683716]
[29.99103165 469.74890137]
[29.86447144 454.74636841]
[30.48000145 439.75592041]
[31.83611107 424.81423950]
[33.92948532 409.95791626]
[36.75499725 395.22329712]
[40.30573654 380.64645386]
[44.57300949 366.26303101]
[49.54637909 352.10824585]
[55.21367264 338.21670532]
[61.56101608 324.62246704]
[68.57288361 311.35873413]
[76.23210907 298.45800781]
[84.51995850 285.95184326]
[93.41613770 273.87084961]
[102.89888763 262.24459839]
[112.94499969 251.10151672]
[123.52987671 240.46888733]
[134.62763977 230.37274170]
[146.21110535 220.83776855]
[158.25193787 211.88731384]
[149.90954590 199.42117310]
[141.56715393 186.95503235]
[133.22476196 174.48890686]
[118.60987854 171.85440063]
[109.97191620 159.33081055]
[112.83432770 144.01922607]
[104.49193573 131.55310059]
[107.31551361 146.28494263]
[106.94021606 161.28025818]
[103.38320923 175.85240173]
[96.80738068 189.33418274]
[87.51380157 201.10829163]
[75.92802429 210.63560486]
[62.58052444 217.47988892]
[48.08246231 221.32777405]
[33.09766769 222.00305176]
[18.31226921 219.47482300]
[4.40325499 213.85882568]
[-7.99251032 205.41223145]
[-18.30745125 194.52177429]
[-26.06926727 181.68611145]
[-30.92256355 167.49296570]
[-32.64511490 152.59219360]
[-31.15805244 137.66609192]
[-26.52946472 123.39807892]
[-18.97128296 110.44146729]
[-8.82958221 99.38950348]
[3.43127084 90.74823761]
[17.24987793 84.91333008]
[31.99351501 82.15196228]
[46.98710251 82.59055328]
[61.54411316 86.20903778]
[74.99801636 92.84172058]
[86.73278046 102.18491364]
[96.21343231 113.81438446]
[86.24798584 104.00717163]
[89.38549042 90.38191223]
[74.30831146 88.66305542]
[61.07354355 81.32249451]
[51.68283844 69.50605011]
[47.54281616 55.03374100]
[49.25441360 40.11947632]
[56.52587509 27.03240967]
[68.22191620 17.75168228]
[64.02561188 3.35060477]
[59.82931137 -11.05047321]
[55.63301086 -25.45155144]
[50.24798965 -32.78073120]
[51.47177887 -40.03979111]
[47.43907166 -54.48753357]
[43.40636826 -68.93527985]
[39.37366486 -83.38301849]
[35.34095764 -97.83076477]
[31.30825233 -112.27851105]
[27.27554893 -126.72624969]
[23.24284363 -141.17399597]
[19.21013832 -155.62173462]
[15.17743301 -170.06948853]
[11.14472866 -184.51722717]
[7.11202335 -198.96496582]
[3.07931852 -213.41271973]
[-11.73431778 -210.96252441]
[-26.72602844 -210.12835693]
[-41.72004700 -210.91999817]
[-56.54056931 -213.32817078]
[-71.01383972 -217.32463074]
[-84.97016144 -222.86253357]
[-98.24591064 -229.87692261]
[-110.68542480 -238.28558350]
[-122.14286804 -247.98992920]
[-132.48390198 -258.87615967]
[-141.58728027 -270.81668091]
[-149.34628296 -283.67144775]
[-155.66993713 -297.28976440]
[-160.48408508 -311.51199341]
[-163.73228455 -326.17132568]
[-165.37648010 -341.09594727]
[-165.39735413 -356.11080933]
[-163.79470825 -371.03994751]
[-160.58729553 -385.70828247]
[-155.81272888 -399.94381714]
[-149.52699280 -413.57968140]
[-141.80378723 -426.45599365]
[-132.73365784 -438.42178345]
[-122.42295837 -449.33676147]
[-110.99256134 -459.07293701]
[-98.57648468 -467.51617432]
[-85.32030487 -474.56747437]
[-71.37944031 -480.14416504]
[-56.91734314 -484.18087769]
[-42.10357666 -486.63027954]
[-27.11182022 -487.46362305]
[-12.11784649 -486.67117310]
[2.70254898 -484.26220703]
[17.17560387 -480.26498413]
[31.13162994 -474.72634888]
[44.40699768 -467.71121216]
[56.84606552 -459.30187988]
[68.30298615 -449.59692383]
[78.64343262 -438.71014404]
[87.74617004 -426.76913452]
[95.50447845 -413.91394043]
[101.82739258 -400.29528809]
[106.64077759 -386.07281494]
[109.88819122 -371.41329956]
[111.53157806 -356.48858643]
[111.55165863 -341.47372437]
[109.94819641 -326.54467773]
[106.73999023 -311.87652588]
[101.96466827 -297.64123535]
[95.67819977 -284.00570679]
[87.95429993 -271.12982178]
[78.88352966 -259.16452026]
[68.57223511 -248.25010681]
[57.14131546 -238.51452637]
[44.72478485 -230.07196045]
[31.46822548 -223.02136230]
[17.52706146 -217.44541931]
[21.55976677 -202.99768066]
[25.59247208 -188.54992676]
[29.62517738 -174.10218811]
[33.65788269 -159.65444946]
[37.69058609 -145.20669556]
[41.72329330 -130.75895691]
[45.75599670 -116.31121063]
[49.78870010 -101.86347198]
[53.82140732 -87.41572571]
[57.85411072 -72.96797943]
[61.88681793 -58.52024078]
[65.91951752 -44.07249451]
[70.03408813 -29.64785194]
[74.23039246 -15.24677467]
[78.42668915 -0.84569609]
[82.62299347 13.55538177]
[97.47362518 15.10072899]
[110.63686371 22.23336983]
[120.09200287 33.89377975]
[124.37403870 48.32471085]
[122.80059814 63.33597183]
[115.58049011 76.63684082]
[103.78656769 86.18561554]
[113.75201416 95.99282837]
[110.61450958 109.61808777]
[116.95806885 123.21070862]
[125.30046082 135.67683411]
[140.54644775 138.87019348]
[148.82923889 151.63146973]
[145.69090271 166.14651489]
[154.03329468 178.61264038]
[162.37568665 191.07878113]
[170.71807861 203.54492188]
[183.58412170 195.82757568]
[196.81608582 188.75595093]
[210.38156128 182.34736633]
[224.24737549 176.61746216]
[238.37959290 171.58030701]
[252.74362183 167.24819946]
[267.30432129 163.63174438]
[282.02603149 160.73980713]
[296.87277222 158.57945251]
[311.80816650 157.15596008]
[326.79568481 156.47282410]
[341.79864502 156.53170776]
[356.78036499 157.33248901]
[371.70413208 158.87316895]
[386.53341675 161.15002441]
[401.23199463 164.15744019]
[415.76385498 167.88809204]
[430.09344482 172.33282471]
[444.18566895 177.48077393]
[458.00607300 183.31935120]
[471.52084351 189.83424377]
[484.69686890 197.00952148]
[497.50192261 204.82762146]
[509.90469360 213.26940918]
[521.87481689 222.31423950]
[533.38299561 231.93997192]
[544.40100098 242.12304688]
[554.90197754 252.83854675]
[564.86022949 264.06024170]
[574.25128174 275.76068115]
[583.05224609 287.91125488]
[591.24151611 300.48217773]
[598.79907227 313.44268799]
[605.70648193 326.76113892]
[611.94677734 340.40484619]
[617.50469971 354.34048462]
[622.36663818 368.53393555]
[626.52075195 382.95046997]
[629.95678711 397.55477905]
[632.66638184 412.31115723]
[634.64288330 427.18347168]
[635.88153076 442.13531494]
[636.37921143 457.13015747]
[636.13470459 472.13125610]
[635.14868164 487.10189819]
[633.42346191 502.00546265]
[630.96337891 516.80548096]
[627.77435303 531.46569824]
[623.86419678 545.95031738]
[619.24255371 560.22381592]
[613.92065430 574.25128174]
[607.91156006 587.99841309]
[601.22998047 601.43151855]
[593.89227295 614.51776123]
[585.91632080 627.22515869]
[577.32177734 639.52252197]
[568.12957764 651.37982178]
[558.36218262 662.76806641]
[548.04357910 673.65930176]
[537.19903564 684.02691650]
[525.85498047 693.84552002]
[514.03924561 703.09112549]
[501.78076172 711.74108887]
[489.10949707 719.77423096]
[476.05645752 727.17089844]
[462.65359497 733.91302490]
[448.93371582 739.98406982]
[434.93038940 745.36914062]
[420.67788696 750.05511475]
[406.21109009 754.03057861]
[391.56536865 757.28570557]
[376.77661133 759.81256104]
[361.88098145 761.60491943]
[346.91494751 762.65850830]
[331.91510010 762.97064209]
[316.91818237 762.54058838]
[301.96087646 761.36944580]
[287.07980347 759.46002197]
[272.31137085 756.81695557]
[257.69168091 753.44683838]
[243.25657654 749.35784912]
[229.04135132 744.55993652]
[215.08078003 739.06494141]
[201.40905762 732.88623047]
[188.05960083 726.03900146]
[175.06512451 718.53991699]
[162.45738220 710.40740967]
[150.26725769 701.66137695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 188]
[38 187]
[39 186]
[40 185]
[43 182]
[44 181]
[72 180]
[74 178]
[81 171]
[82 170]
[83 169]
[84 168]
[86 167]
[87 166]
[88 165]
[89 164]
[90 163]
[91 162]
[92 161]
[93 160]
[94 159]
[95 158]
[96 157]
[97 156]
[98 155]
] def

init

% Start Annotations
37 188 0.0 0.6 colorpair
38 187 0.0 0.2 colorpair
39 186 0.16 0.6 colorpair
40 185 0.0 1 colorpair
43 182 0.16 1 colorpair
44 181 0.16 1 colorpair
72 180 0.0 0.2 colorpair
74 178 0.16 1 colorpair
81 171 0.0 0.6 colorpair
82 170 0.0 0.2 colorpair
83 169 0.16 0.6 colorpair
84 168 0.0 0.6 colorpair
86 167 0.0 0.6 colorpair
87 166 0.0 0.6 colorpair
88 165 0.0 1 colorpair
89 164 0.16 1 colorpair
90 163 0.16 1 colorpair
91 162 0.0 1 colorpair
92 161 0.0 1 colorpair
93 160 0.0 1 colorpair
94 159 0.0 1 colorpair
95 158 0.16 1 colorpair
96 157 0.32 1 colorpair
97 156 0.0 0.2 colorpair
98 155 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
37 188 1 gmark
38 187 2 gmark
39 186 1 gmark
39 cmark
186 cmark
182 cmark
181 cmark
72 180 2 gmark
74 cmark
81 171 1 gmark
82 170 2 gmark
83 169 1 gmark
169 cmark
84 168 1 gmark
86 167 1 gmark
87 166 1 gmark
89 cmark
90 cmark
163 cmark
95 cmark
158 cmark
96 cmark
157 cmark
97 156 2 gmark
98 155 2 gmark
98 cmark
155 cmark

% End Annotations
showpage
end
%%EOF
