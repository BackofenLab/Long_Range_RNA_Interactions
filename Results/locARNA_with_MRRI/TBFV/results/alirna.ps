%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Jan 25 16:27:09 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGACAGCUUA_GGAGAACAAGAGCUGGGGAUGGCCAGGAAGGCCAUCCUGAAAGGAAAGGGGGGCGGUCCCCCUCGACGAGUGUCGAAAGAGACCGCAA_______________UUUUUCCUCCUCCUAUACCAAA_UUCCCCCUCGACAGAGGGGGGGCGGUUCUUGUUCUC_______________\
) } def
/len { sequence length } bind def

/coor [
[74.79678345 488.40536499]
[60.80027771 482.87509155]
[48.15177917 474.72021484]
[37.33746338 464.25424194]
[28.77300644 451.87939453]
[22.78759956 438.07141113]
[19.61130905 423.36096191]
[19.36622047 408.31347656]
[22.06175423 393.50738525]
[27.59430313 379.51177979]
[35.75120926 366.86459351]
[46.21894455 356.05197144]
[58.59515762 347.48953247]
[72.40413666 341.50634766]
[87.11510468 338.33245850]
[86.86839294 323.33447266]
[86.62168121 308.33651733]
[86.37496948 293.33853149]
[86.12825775 278.34057617]
[85.88154602 263.34259033]
[85.63483429 248.34461975]
[85.38812256 233.34664917]
[85.14141083 218.34867859]
[84.89470673 203.35070801]
[84.64799500 188.35273743]
[84.40128326 173.35476685]
[84.15457153 158.35679626]
[83.90785980 143.35882568]
[76.65209198 156.48718262]
[65.39400482 166.39958191]
[51.45259857 171.93466187]
[36.46124649 172.44393921]
[22.17634201 167.86775208]
[10.27150726 158.74223328]
[2.14151549 146.13655090]
[-1.26112115 131.52758789]
[0.46225068 116.62691498]
[7.10972023 103.18030548]
[17.90246964 92.76318359]
[31.57601547 86.59600067]
[46.52836227 85.40131378]
[61.00769424 89.31909180]
[73.31760406 97.89032745]
[82.01586151 110.11081696]
[86.08329773 124.54802704]
[89.74669647 110.00225830]
[86.10980988 96.50171661]
[95.70753479 86.33434296]
[99.37092590 71.78857422]
[103.03432465 57.24279785]
[106.69772339 42.69702530]
[94.64904022 34.92667770]
[85.60462189 23.83016777]
[80.43943024 10.50197220]
[79.64664459 -3.74858761]
[83.29062653 -17.52596664]
[91.00188446 -29.48506355]
[102.01451874 -38.46253967]
[115.24226379 -43.58998489]
[129.38562012 -44.37790298]
[133.28776550 -58.86145401]
[137.18989563 -73.34500885]
[141.09204102 -87.82855988]
[144.99418640 -102.31211090]
[148.89633179 -116.79566193]
[152.79846191 -131.27922058]
[145.42359924 -152.43054199]
[161.26353455 -167.17121887]
[164.20500183 -181.87998962]
[167.14648438 -196.58874512]
[152.78500366 -200.96076965]
[138.92121887 -206.71943665]
[125.68864441 -213.80928040]
[113.21472931 -222.16201782]
[101.61959839 -231.69720459]
[91.01492310 -242.32299805]
[81.50284576 -253.93708801]
[73.17496490 -266.42761230]
[66.11148834 -279.67428589]
[60.38043594 -293.54949951]
[56.03701019 -307.91967773]
[53.12304306 -322.64636230]
[51.66659164 -337.58776855]
[51.68168640 -352.59997559]
[53.16818237 -367.53842163]
[56.11175919 -382.25921631]
[60.48407364 -396.62063599]
[66.24301910 -410.48428345]
[73.33312225 -423.71673584]
[81.68610382 -436.19049072]
[91.22151947 -447.78540039]
[101.84754181 -458.38986206]
[113.46182251 -467.90173340]
[125.95250702 -476.22933960]
[139.19931030 -483.29257202]
[153.07466125 -489.02334595]
[167.44490051 -493.36648560]
[182.17164612 -496.28015137]
[197.11308289 -497.73629761]
[212.12530518 -497.72091675]
[227.06372070 -496.23410034]
[241.78445435 -493.29025269]
[256.14578247 -488.91763306]
[270.00933838 -483.15841675]
[283.24160767 -476.06805420]
[295.71520996 -467.71481323]
[307.30993652 -458.17916870]
[317.91418457 -447.55294800]
[327.42581177 -435.93847656]
[335.75320435 -423.44760132]
[342.81613159 -410.20065308]
[348.54663086 -396.32522583]
[352.88949585 -381.95489502]
[355.80285645 -367.22805786]
[357.25872803 -352.28659058]
[357.24301147 -337.27438354]
[355.75592041 -322.33599854]
[352.81176758 -307.61532593]
[348.43887329 -293.25408936]
[342.67938232 -279.39065552]
[335.58874512 -266.15850830]
[327.23526001 -253.68508911]
[317.69937134 -242.09053040]
[307.07293701 -231.48651123]
[295.45828247 -221.97511292]
[282.96725464 -213.64797974]
[269.72015381 -206.58529663]
[255.84460449 -200.85508728]
[241.47418213 -196.51252747]
[226.74731445 -193.59944153]
[211.80581665 -192.14389038]
[196.79360962 -192.15988159]
[181.85525513 -193.64727783]
[178.91377258 -178.93850708]
[175.97229004 -164.22975159]
[181.66511536 -158.73033142]
[184.74797058 -151.33807373]
[184.64706421 -143.23529053]
[181.30441284 -135.75028992]
[175.19952393 -130.13958740]
[167.28201294 -127.37707520]
[163.37988281 -112.89352417]
[159.47773743 -98.40997314]
[155.57559204 -83.92642212]
[151.67344666 -69.44286346]
[147.77131653 -54.95931244]
[143.86917114 -40.47576141]
[156.86145020 -31.59635162]
[166.04591370 -18.78486824]
[170.29835510 -3.57792115]
[169.08753967 12.19281673]
[162.54136658 26.62123299]
[151.43376160 37.95714951]
[137.09310913 44.81863403]
[121.24349213 46.36042404]
[117.58010101 60.90619659]
[113.91670227 75.45197296]
[110.25330353 89.99774170]
[113.89019012 103.49828339]
[104.29246521 113.66565704]
[100.62907410 128.21142578]
[98.90583038 143.11210632]
[99.15254211 158.11009216]
[99.39925385 173.10806274]
[99.64596558 188.10603333]
[99.89267731 203.10400391]
[100.13938904 218.10197449]
[100.38609314 233.09994507]
[100.63280487 248.09791565]
[100.87951660 263.09588623]
[101.12622833 278.09384155]
[101.37294006 293.09182739]
[101.61965179 308.08978271]
[101.86636353 323.08776855]
[102.11307526 338.08572388]
[116.92047119 340.77407837]
[130.91876221 346.29983521]
[143.56990051 354.45059204]
[154.38760376 364.91308594]
[162.95606995 377.28512573]
[168.94593811 391.09121704]
[172.12699890 405.80062866]
[172.37695312 420.84802246]
[169.68621826 435.65496826]
[164.15820312 449.65237427]
[156.00538635 462.30218506]
[145.54115295 473.11819458]
[133.16770935 481.68466187]
[119.36067200 487.67230225]
[104.65073395 490.85098267]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 175]
[16 174]
[17 173]
[18 172]
[19 171]
[20 170]
[21 169]
[22 168]
[23 167]
[24 166]
[25 165]
[26 164]
[27 163]
[28 162]
[45 161]
[46 160]
[48 158]
[49 157]
[50 156]
[51 155]
[60 147]
[61 146]
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[68 135]
[69 134]
[70 133]
] def

init

% Start Annotations
15 175 0.0 0.6 colorpair
16 174 0.16 1 colorpair
17 173 0.0 0.6 colorpair
18 172 0.16 1 colorpair
19 171 0.0 0.6 colorpair
20 170 0.16 1 colorpair
21 169 0.16 1 colorpair
22 168 0.16 1 colorpair
23 167 0.0 1 colorpair
24 166 0.0 1 colorpair
25 165 0.0 1 colorpair
26 164 0.0 0.6 colorpair
27 163 0.0 1 colorpair
28 162 0.0 1 colorpair
45 161 0.0 1 colorpair
46 160 0.0 1 colorpair
48 158 0.16 1 colorpair
49 157 0.16 1 colorpair
50 156 0.16 1 colorpair
51 155 0.16 1 colorpair
60 147 0.0 0.6 colorpair
61 146 0.0 1 colorpair
62 145 0.0 1 colorpair
63 144 0.0 1 colorpair
64 143 0.0 1 colorpair
65 142 0.0 1 colorpair
66 141 0.0 1 colorpair
68 135 0.16 0.6 colorpair
69 134 0.0 1 colorpair
70 133 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
15 175 1 gmark
16 cmark
17 173 1 gmark
18 cmark
19 171 1 gmark
20 cmark
21 cmark
22 cmark
26 164 1 gmark
48 cmark
49 cmark
50 cmark
51 cmark
60 147 1 gmark
68 135 1 gmark
135 cmark

% End Annotations
showpage
end
%%EOF
