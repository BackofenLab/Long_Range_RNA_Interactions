%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Tue Feb  6 12:14:28 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUUGAGAAAAAGACAGCUUAGGAGAACAAGAGCUGGGG______AUGGCCAGGAAGGCCAUCCUGAAAGGAAAGGGGGGCGGUCCCCCUCGACGAGUGUCGAAAGAGACCGCAA_____________UCUCUUCAGGAUUUUUCCUCCUCCUAUACCAAA_UUCCCCCUCGACAGAGGGGGGGCGGUUCUUGUUCUCCCUGAGCCACCAUCACCCAGAC\
) } def
/len { sequence length } bind def

/coor [
[-6.02976465 838.14678955]
[-20.96631432 836.37500000]
[-35.34640121 831.96447754]
[-48.70776367 825.05694580]
[-60.62088776 815.87451172]
[-70.70281219 804.71234131]
[-78.62945557 791.92919922]
[-84.14600372 777.93609619]
[-87.07511902 763.18280029]
[-87.32264709 748.14355469]
[-84.88063049 733.30181885]
[-79.82756805 719.13476562]
[-72.32588959 706.09771729]
[-62.61675644 694.60980225]
[-51.01226807 685.04028320]
[-37.88545990 677.69677734]
[-23.65830994 672.81536865]
[-8.78815651 670.55303955]
[-8.36367321 655.55902100]
[-7.93919039 640.56506348]
[-7.51470757 625.57104492]
[-7.09022474 610.57702637]
[-6.66574192 595.58306885]
[-6.24125910 580.58905029]
[-5.92287827 565.59246826]
[-5.71061563 550.59393311]
[-5.49835300 535.59545898]
[-5.28609037 520.59692383]
[-5.07382774 505.59844971]
[-4.86156464 490.59994507]
[-4.64930201 475.60147095]
[-4.43703938 460.60296631]
[-4.22477674 445.60446167]
[-4.01251411 430.60595703]
[-3.80025148 415.60745239]
[-3.58798862 400.60897827]
[-3.37572598 385.61047363]
[-10.15102482 398.99313354]
[-20.12145424 410.19982910]
[-32.62482452 418.48632812]
[-46.83070755 423.30221558]
[-61.79561615 424.32766724]
[-76.52564240 421.49456787]
[-90.04247284 414.99108887]
[-101.44837952 405.24914551]
[-109.98583984 392.91580200]
[-115.08782196 378.81011963]
[-116.41547394 363.86898804]
[-113.88062286 349.08474731]
[-107.65161896 335.43923950]
[-98.14216614 323.83880615]
[-85.98384857 315.05386353]
[-71.98416138 309.66787720]
[-57.07291412 308.03854370]
[-42.24044037 310.27413940]
[-28.47185898 316.22610474]
[-16.68161392 325.49920654]
[-7.65276861 337.47750854]
[-1.98497808 351.36550903]
[-0.05467435 366.24203491]
[4.74178457 352.02957153]
[1.48043621 337.49639893]
[13.22430420 326.89489746]
[18.02076340 312.68243408]
[22.81722260 298.46997070]
[27.61367989 284.25750732]
[16.29729652 275.75820923]
[8.14571190 264.16259766]
[3.96631527 250.59619141]
[4.18016624 236.38075256]
[8.77960873 222.90560913]
[17.32772636 211.49179077]
[28.99981499 203.26257324]
[42.66292953 199.03292847]
[56.98585892 199.22880554]
[61.98295593 185.08564758]
[66.98004913 170.94248962]
[71.97714996 156.79931641]
[76.97424316 142.65615845]
[81.97134399 128.51300049]
[86.96843719 114.36983490]
[81.53374481 94.05767822]
[97.79449463 80.72697449]
[101.98343658 66.32375336]
[106.17237854 51.92053223]
[93.98960876 42.93135452]
[85.63307190 30.34007454]
[82.09527588 15.67705059]
[83.78445435 0.71654391]
[90.47753906 -12.73797417]
[101.34944916 -23.07122612]
[115.07470703 -29.05004501]
[129.98905945 -29.97052002]
[134.17800903 -44.37374115]
[130.60241699 -59.78561020]
[141.58613586 -69.84577942]
[145.77508545 -84.24900055]
[149.96401978 -98.65222168]
[140.21635437 -114.90443420]
[145.36338806 -132.81100464]
[161.68357849 -141.11640930]
[165.46324158 -155.63241577]
[157.72552490 -169.15148926]
[161.76544189 -183.81892395]
[174.70150757 -191.11235046]
[178.48117065 -205.62834167]
[182.26084900 -220.14433289]
[186.04051208 -234.66032410]
[189.82019043 -249.17631531]
[193.59985352 -263.69232178]
[180.73593140 -271.63024902]
[170.78453064 -283.00836182]
[164.63050842 -296.81484985]
[162.82107544 -311.82208252]
[165.51713562 -326.69564819]
[172.47894287 -340.11297607]
[183.08747864 -350.88101196]
[196.39942932 -358.04223633]
[211.23109436 -360.95993042]
[226.26367188 -359.37463379]
[240.16046143 -353.42733765]
[251.68577576 -343.64678955]
[259.81478882 -330.90277100]
[263.82467651 -316.32839966]
[263.35888672 -301.21963501]
[258.45880127 -286.91995239]
[249.56019592 -274.70086670]
[237.45428467 -265.64889526]
[223.21752930 -260.56890869]
[208.11584473 -259.91265869]
[204.33618164 -245.39665222]
[200.55650330 -230.88066101]
[196.77684021 -216.36466980]
[192.99716187 -201.84866333]
[189.21749878 -187.33267212]
[196.95390320 -174.65657043]
[193.32756042 -159.88143921]
[179.97924805 -151.85273743]
[176.19956970 -137.33674622]
[183.96385193 -128.99003601]
[186.76736450 -117.81694031]
[183.80241394 -106.56164551]
[175.69290161 -98.04626465]
[164.36724854 -94.46327972]
[160.17829895 -80.06005859]
[155.98936462 -65.65683746]
[159.86457825 -51.27518463]
[148.58123779 -40.18479538]
[144.39228821 -25.78157616]
[156.48670959 -17.00603485]
[164.86470032 -4.59884405]
[168.49908447 9.95332909]
[166.93249512 24.89880562]
[160.33480835 38.43175125]
[149.48498535 48.91036606]
[135.67909241 55.05606842]
[120.57559967 56.10947800]
[116.38665771 70.51269531]
[112.19771576 84.91591644]
[117.11535645 90.86882019]
[119.32137299 98.26840210]
[118.46625519 105.94232178]
[114.68548584 112.67478180]
[108.57806396 117.39915466]
[101.11160278 119.36693573]
[96.11450195 133.51010132]
[91.11740875 147.65325928]
[86.12030792 161.79641724]
[81.12321472 175.93957520]
[76.12611389 190.08274841]
[71.12902069 204.22590637]
[83.48558807 214.28941345]
[91.63420868 227.95338440]
[94.60494232 243.55549622]
[92.05647278 259.20489502]
[84.31524658 273.01147461]
[72.33375549 283.31405640]
[57.57336807 288.88027954]
[41.82614136 289.05398560]
[37.02968216 303.26644897]
[32.23322296 317.47888184]
[27.43676376 331.69134521]
[30.35503578 347.24108887]
[18.95424271 356.82601929]
[14.15778446 371.03848267]
[11.62277222 385.82272339]
[11.41050911 400.82122803]
[11.19824696 415.81973267]
[10.98598385 430.81823730]
[10.77372169 445.81671143]
[10.56145859 460.81521606]
[10.34919548 475.81372070]
[10.13693333 490.81222534]
[9.92467022 505.81072998]
[9.71240807 520.80920410]
[9.50014496 535.80773926]
[9.28788280 550.80621338]
[9.07561970 565.80468750]
[12.08136177 574.42169189]
[8.75273323 581.01354980]
[8.32825089 596.00756836]
[7.90376759 611.00152588]
[7.47928476 625.99554443]
[7.05480194 640.98950195]
[6.63031912 655.98352051]
[6.20583630 670.97747803]
[20.92417908 674.07751465]
[34.85237885 679.75598145]
[47.54270172 687.83038330]
[58.58721161 698.04107666]
[67.63086700 710.05993652]
[74.38294983 723.50048828]
[78.62641907 737.93078613]
[80.22485352 752.88684082]
[79.12687683 767.88800049]
[75.36778259 782.45196533]
[69.06841278 796.11059570]
[60.43125916 808.42474365]
[49.73397827 818.99865723]
[37.32043839 827.49243164]
[23.58968163 833.63299561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 206]
[19 205]
[20 204]
[21 203]
[22 202]
[23 201]
[24 200]
[25 198]
[26 197]
[27 196]
[28 195]
[29 194]
[30 193]
[31 192]
[32 191]
[33 190]
[34 189]
[35 188]
[36 187]
[37 186]
[60 185]
[61 184]
[63 182]
[64 181]
[65 180]
[66 179]
[75 171]
[76 170]
[77 169]
[78 168]
[79 167]
[80 166]
[81 165]
[83 159]
[84 158]
[85 157]
[93 149]
[94 148]
[96 146]
[97 145]
[98 144]
[101 139]
[102 138]
[105 135]
[106 134]
[107 133]
[108 132]
[109 131]
[110 130]
] def

init

% Start Annotations
18 206 0.0 1 colorpair
19 205 0.0 1 colorpair
20 204 0.0 1 colorpair
21 203 0.0 1 colorpair
22 202 0.0 1 colorpair
23 201 0.0 1 colorpair
24 200 0.0 1 colorpair
25 198 0.0 1 colorpair
26 197 0.0 1 colorpair
27 196 0.0 1 colorpair
28 195 0.0 1 colorpair
29 194 0.0 1 colorpair
30 193 0.0 1 colorpair
31 192 0.0 1 colorpair
32 191 0.0 1 colorpair
33 190 0.0 1 colorpair
34 189 0.0 1 colorpair
35 188 0.0 1 colorpair
36 187 0.0 1 colorpair
37 186 0.0 1 colorpair
60 185 0.0 1 colorpair
61 184 0.0 1 colorpair
63 182 0.16 1 colorpair
64 181 0.16 1 colorpair
65 180 0.16 1 colorpair
66 179 0.16 1 colorpair
75 171 0.0 0.6 colorpair
76 170 0.0 1 colorpair
77 169 0.0 1 colorpair
78 168 0.0 1 colorpair
79 167 0.0 1 colorpair
80 166 0.0 1 colorpair
81 165 0.0 1 colorpair
83 159 0.16 0.6 colorpair
84 158 0.0 1 colorpair
85 157 0.0 1 colorpair
93 149 0.0 1 colorpair
94 148 0.0 0.6 colorpair
96 146 0.0 1 colorpair
97 145 0.0 0.6 colorpair
98 144 0.16 1 colorpair
101 139 0.16 1 colorpair
102 138 0.16 1 colorpair
105 135 0.0 1 colorpair
106 134 0.0 0.6 colorpair
107 133 0.0 1 colorpair
108 132 0.0 0.2 colorpair
109 131 0.0 0.6 colorpair
110 130 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
63 cmark
64 cmark
65 cmark
66 cmark
75 171 1 gmark
83 159 1 gmark
159 cmark
94 148 1 gmark
97 145 1 gmark
98 cmark
101 cmark
102 cmark
106 134 1 gmark
108 132 2 gmark
109 131 1 gmark
110 130 1 gmark
110 cmark

% End Annotations
showpage
end
%%EOF
