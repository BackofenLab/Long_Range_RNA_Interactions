%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Feb  5 19:44:27 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___U____UAACACAGUUUGAACAGUUUUUGAGAACAAGAUCUGG________AUGUCUA__AAAA_AACCAGGAAGGCCC___GGGGCAAACCGGGUUGUCAAUAUGCUAAAACGCGGGGCA_CCCGCG__________________________GAGGUUAGAGGAGACCCCCCGCC_________AAAC_CCAACAAAAAACAGCAUAUUGACACCUGGGAA__AGACCAGGGGAUCUUCUGCUCU_UUACA\
ACACCAGCCACA__\
) } def
/len { sequence length } bind def

/coor [
[41.44349289 753.57708740]
[27.65827751 759.49670410]
[13.62470818 764.80078125]
[-0.62974107 769.47888184]
[-15.07716656 773.52185059]
[-29.68928719 776.92181396]
[-44.43749619 779.67211914]
[-59.29292679 781.76739502]
[-74.22650146 783.20349121]
[-89.20897675 783.97760010]
[-104.21103668 784.08825684]
[-119.20330048 783.53521729]
[-134.15643311 782.31958008]
[-149.04115295 780.44366455]
[-163.82832336 777.91119385]
[-178.48899841 774.72705078]
[-192.99449158 770.89764404]
[-207.31639099 766.43029785]
[-221.42666626 761.33380127]
[-235.29769897 755.61816406]
[-248.90232849 749.29461670]
[-262.21392822 742.37542725]
[-275.20645142 734.87414551]
[-287.85443115 726.80560303]
[-300.13314819 718.18542480]
[-312.01855469 709.03057861]
[-323.48736572 699.35894775]
[-334.51715088 689.18945312]
[-345.08630371 678.54211426]
[-355.17413330 667.43762207]
[-364.76089478 655.89776611]
[-373.82785034 643.94519043]
[-382.35720825 631.60321045]
[-390.33230591 618.89605713]
[-397.73751831 605.84857178]
[-404.55834961 592.48632812]
[-410.78143311 578.83544922]
[-416.39459229 564.92260742]
[-421.38687134 550.77514648]
[-425.74844360 536.42065430]
[-429.47082520 521.88732910]
[-432.54669189 507.20358276]
[-434.97006226 492.39813232]
[-436.73614502 477.49996948]
[-437.84149170 462.53829956]
[-438.28396606 447.54235840]
[-438.06268311 432.54153442]
[-437.17807007 417.56515503]
[-435.63186646 402.64257812]
[-433.42709351 387.80300903]
[-430.56811523 373.07550049]
[-427.06045532 358.48883057]
[-422.91101074 344.07162476]
[-418.12789917 329.85205078]
[-412.72052002 315.85800171]
[-406.69940186 302.11682129]
[-400.07635498 288.65542603]
[-392.86434937 275.50015259]
[-385.07751465 262.67675781]
[-376.73107910 250.21037292]
[-367.84136963 238.12538147]
[-358.42581177 226.44543457]
[-348.50280762 215.19340515]
[-338.09182739 204.39132690]
[-327.21322632 194.06031799]
[-315.88827515 184.22062683]
[-304.13916016 174.89149475]
[-291.98889160 166.09121704]
[-279.46127319 157.83699036]
[-266.58078003 150.14497375]
[-253.37266541 143.03024292]
[-239.86274719 136.50671387]
[-226.07751465 130.58715820]
[-212.04393005 125.28317261]
[-197.78945923 120.60512543]
[-183.34202576 116.56217957]
[-168.72988892 113.16225433]
[-153.98167419 110.41199493]
[-139.12623596 108.31679535]
[-124.19264984 106.88075256]
[-109.21017456 106.10667419]
[-94.20811462 105.99608612]
[-79.21585083 106.54919434]
[-64.26272583 107.76492310]
[-49.37801361 109.64088440]
[-34.59085083 112.17341614]
[-19.93018150 115.35755157]
[-5.42470741 119.18706512]
[8.89717579 123.65444946]
[23.00743484 128.75097656]
[36.87844467 134.46665955]
[50.48305511 140.79029846]
[63.79463196 147.70953369]
[71.29463196 134.71914673]
[78.79463196 121.72877502]
[86.29463196 108.73838806]
[83.96329498 97.35036469]
[89.83386993 87.31748199]
[100.90387726 83.77102661]
[108.55451202 70.86878967]
[116.20515442 57.96655273]
[123.85578918 45.06431580]
[131.50642395 32.16207886]
[139.15707397 19.25984001]
[146.80770874 6.35760307]
[154.45834351 -6.54463387]
[162.10899353 -19.44687080]
[169.75962830 -32.34910965]
[177.41026306 -45.25134659]
[185.06089783 -58.15358353]
[172.67648315 -66.62619019]
[160.86647034 -75.88266754]
[149.68038940 -85.88420105]
[139.16517639 -96.58882904]
[129.36492920 -107.95166016]
[120.32073975 -119.92503357]
[112.07056427 -132.45872498]
[104.64899445 -145.50016785]
[98.08715820 -158.99465942]
[92.41259003 -172.88560486]
[87.64907837 -187.11471558]
[83.81661224 -201.62234497]
[80.93125916 -216.34761047]
[79.00512695 -231.22877502]
[78.04628754 -246.20339966]
[78.05877686 -261.20870972]
[79.04252625 -276.18170166]
[80.99342346 -291.05963135]
[83.90326691 -305.78009033]
[87.75987244 -320.28131104]
[92.54705811 -334.50250244]
[98.24473572 -348.38397217]
[104.82901001 -361.86752319]
[112.27227020 -374.89660645]
[120.54329681 -387.41653442]
[129.60739136 -399.37484741]
[139.42654419 -410.72137451]
[149.95954895 -421.40847778]
[161.16226196 -431.39138794]
[172.98765564 -440.62820435]
[185.38615417 -449.08020020]
[198.30575562 -456.71188354]
[211.69226074 -463.49130249]
[225.48951721 -469.38998413]
[239.63966370 -474.38320923]
[254.08335876 -478.45001221]
[268.75997925 -481.57336426]
[283.60803223 -483.74011230]
[298.56515503 -484.94122314]
[313.56869507 -485.17163086]
[328.55566406 -484.43038940]
[343.46322632 -482.72058105]
[358.22885132 -480.04940796]
[372.79061890 -476.42803955]
[387.08740234 -471.87170410]
[401.05929565 -466.39947510]
[414.64767456 -460.03433228]
[427.79553223 -452.80294800]
[440.44772339 -444.73565674]
[452.55117798 -435.86633301]
[464.05514526 -426.23214722]
[474.91137695 -415.87350464]
[485.07431030 -404.83386230]
[494.50134277 -393.15954590]
[503.15292358 -380.89947510]
[510.99276733 -368.10510254]
[517.98797607 -354.83010864]
[524.10925293 -341.13012695]
[529.33087158 -327.06265259]
[533.63092041 -312.68670654]
[536.99145508 -298.06256104]
[539.39825439 -283.25152588]
[540.84130859 -268.31579590]
[541.31457520 -253.31796265]
[540.81604004 -238.32095337]
[539.34777832 -223.38766479]
[536.91595459 -208.58073425]
[533.53076172 -193.96226501]
[529.20648193 -179.59358215]
[523.96112061 -165.53494263]
[517.81677246 -151.84532166]
[510.79916382 -138.58212280]
[502.93774414 -125.80100250]
[494.26550293 -113.55555725]
[484.81878662 -101.89714050]
[474.63726807 -90.87466431]
[463.76358032 -80.53435516]
[452.24337769 -70.91958618]
[440.12496948 -62.07068253]
[427.45916748 -54.02476120]
[414.29913330 -46.81557083]
[400.70004272 -40.47335052]
[386.71896362 -35.02470016]
[372.41448975 -30.49247551]
[357.84664917 -26.89568329]
[343.07653809 -24.24941254]
[328.16610718 -22.56476021]
[313.17791748 -21.84879494]
[298.17477417 -22.10451698]
[283.21969604 -23.33085632]
[268.37533569 -25.52266884]
[253.70397949 -28.67075920]
[239.26718140 -32.76192474]
[225.12547302 -37.77900696]
[211.33818054 -43.70095825]
[197.96313477 -50.50294495]
[190.31250000 -37.60070801]
[182.66186523 -24.69846916]
[175.01123047 -11.79623222]
[167.36058044 1.10600495]
[159.70994568 14.00824261]
[152.05931091 26.91047859]
[144.40866089 39.81271744]
[136.75802612 52.71495438]
[129.10739136 65.61718750]
[121.45674896 78.51942444]
[113.80611420 91.42166901]
[114.02896881 108.20881653]
[99.28501129 116.23838806]
[91.78501129 129.22877502]
[84.28501129 142.21914673]
[76.78501129 155.20953369]
[89.43303680 163.27807617]
[101.71177673 171.89819336]
[113.59720612 181.05300903]
[125.06605530 190.72457886]
[136.09587097 200.89401245]
[146.66506958 211.54135132]
[156.75294495 222.64579773]
[166.33975220 234.18559265]
[175.40673828 246.13815308]
[183.93615723 258.48007202]
[191.91130066 271.18719482]
[199.31654358 284.23464966]
[206.13742065 297.59692383]
[212.36056519 311.24777222]
[217.97378540 325.16058350]
[222.96609497 339.30804443]
[227.32774353 353.66247559]
[231.05017090 368.19580078]
[234.12609863 382.87954712]
[236.54949951 397.68499756]
[238.31562805 412.58312988]
[239.42103577 427.54483032]
[239.86357117 442.54077148]
[239.64233398 457.54159546]
[238.75778198 472.51794434]
[237.21163940 487.44052124]
[235.00692749 502.28012085]
[232.14797974 517.00762939]
[228.64038086 531.59429932]
[224.49099731 546.01153564]
[219.70794678 560.23114014]
[214.30059814 574.22521973]
[208.27954102 587.96643066]
[201.65653992 601.42785645]
[194.44459534 614.58312988]
[186.65780640 627.40655518]
[178.31140137 639.87292480]
[169.42173767 651.95800781]
[160.00622559 663.63793945]
[150.08328247 674.89001465]
[139.67231750 685.69213867]
[128.79374695 696.02319336]
[117.46883392 705.86291504]
[105.71976471 715.19207764]
[93.56953430 723.99243164]
[81.04193115 732.24670410]
[68.16146851 739.93878174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[93 222]
[94 221]
[95 220]
[96 219]
[99 217]
[100 216]
[101 215]
[102 214]
[103 213]
[104 212]
[105 211]
[106 210]
[107 209]
[108 208]
[109 207]
[110 206]
] def

init

% Start Annotations
103 213 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
93 222 7 gmark
93 cmark
94 221 8 gmark
95 220 11 gmark
95 cmark
220 cmark
96 219 9 gmark
99 217 12 gmark
99 cmark
217 cmark
100 216 8 gmark
101 215 6 gmark
101 cmark
215 cmark
102 214 6 gmark
102 cmark
103 cmark
104 212 6 gmark
105 211 7 gmark
106 210 3 gmark
106 cmark
210 cmark
107 209 7 gmark
108 208 5 gmark
108 cmark
208 cmark
109 207 6 gmark
109 cmark
207 cmark
110 206 5 gmark

% End Annotations
showpage
end
%%EOF
