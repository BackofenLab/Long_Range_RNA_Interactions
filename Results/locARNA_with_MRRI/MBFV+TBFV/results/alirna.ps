%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Fri Feb  2 16:02:07 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________GAACAGUUUUUGAGAACAAGAGAUU_UG______AUGU__ACUAAAAAACCAGGAAGACCC___GGGGGAAGCCGGGCUGUCAAUAUGCUGAAACGCGGAGCAACCCGCG_____________CAC_CCCAAAAAAAAA_CAGCAUAUUGACAC_CUGGGA__AAGACCAGGGGAUCUUCUGC_UC________________UCC\
) } def
/len { sequence length } bind def

/coor [
[56.88825226 603.02526855]
[43.41168213 609.62225342]
[29.56138229 615.39349365]
[15.38789177 620.31793213]
[0.94292736 624.37768555]
[-13.72080135 627.55780029]
[-28.54978943 629.84674072]
[-43.48992538 631.23614502]
[-58.48669434 631.72094727]
[-73.48537445 631.29937744]
[-88.43124390 629.97302246]
[-103.26975250 627.74664307]
[-117.94676208 624.62841797]
[-132.40872192 620.62963867]
[-146.60285950 615.76501465]
[-160.47737122 610.05224609]
[-173.98165894 603.51214600]
[-187.06640625 596.16864014]
[-199.68389893 588.04846191]
[-211.78808594 579.18133545]
[-223.33480835 569.59948730]
[-234.28192139 559.33795166]
[-244.58947754 548.43414307]
[-254.21987915 536.92791748]
[-263.13796997 524.86120605]
[-271.31121826 512.27807617]
[-278.70980835 499.22433472]
[-285.30673218 485.74774170]
[-291.07791138 471.89743042]
[-296.00231934 457.72390747]
[-300.06195068 443.27893066]
[-303.24200439 428.61517334]
[-305.53088379 413.78619385]
[-306.92022705 398.84603882]
[-307.40496826 383.84927368]
[-306.98336792 368.85058594]
[-305.65689087 353.90472412]
[-303.43045044 339.06622314]
[-300.31213379 324.38922119]
[-296.31335449 309.92727661]
[-291.44863892 295.73318481]
[-285.73580933 281.85867310]
[-279.19564819 268.35443115]
[-271.85208130 255.26971436]
[-263.73184204 242.65226746]
[-254.86460876 230.54811096]
[-245.28273010 219.00144958]
[-235.02114868 208.05438232]
[-224.11732483 197.74687195]
[-212.61103821 188.11653137]
[-200.54428101 179.19848633]
[-187.96107483 171.02529907]
[-174.90734863 163.62677002]
[-161.43070984 157.02990723]
[-147.58036804 151.25877380]
[-133.40682983 146.33445740]
[-118.96182251 142.27488708]
[-104.29806519 139.09489441]
[-89.46905518 136.80609131]
[-74.52890778 135.41680908]
[-59.53213501 134.93212891]
[-44.53345490 135.35382080]
[-29.58760452 136.68034363]
[-14.74911404 138.90686035]
[-0.07213076 142.02525330]
[14.38979149 146.02410889]
[28.58388329 150.88888550]
[42.45834732 156.60179138]
[55.96256256 163.14199829]
[63.30383301 150.06124878]
[52.39167786 139.82695007]
[44.24522400 127.27898407]
[39.33771515 113.14630127]
[37.95425034 98.24992371]
[40.17518997 83.45520782]
[45.87152100 69.62162781]
[54.71232224 57.55280685]
[66.18401337 47.94986343]
[79.62016296 41.37065506]
[94.24023438 38.19738388]
[109.19490814 38.61440277]
[123.61542511 42.59747696]
[130.95669556 29.51673698]
[138.29795837 16.43599510]
[145.63923645 3.35525393]
[139.32232666 -10.69476318]
[142.45317078 -25.59614563]
[153.62600708 -35.67740631]
[168.41564941 -37.22799683]
[175.75692749 -50.30873871]
[183.09819031 -63.38947678]
[190.43945312 -76.47022247]
[197.78073120 -89.55096436]
[205.12199402 -102.63169861]
[212.46325684 -115.71244049]
[219.80453491 -128.79318237]
[227.14579773 -141.87393188]
[234.48706055 -154.95466614]
[241.82833862 -168.03540039]
[229.69264221 -176.88194275]
[218.68846130 -187.10176086]
[208.97027588 -198.55136108]
[200.67453003 -211.07000732]
[193.91764832 -224.48197937]
[188.79452515 -238.59899902]
[185.37704468 -253.22285461]
[183.71321106 -268.14825439]
[183.82637024 -283.16571045]
[185.71493530 -298.06436157]
[189.35240173 -312.63504028]
[194.68768311 -326.67324829]
[201.64590454 -339.98187256]
[210.12936401 -352.37411499]
[220.01899719 -363.67596436]
[231.17593384 -373.72875977]
[243.44355774 -382.39141846]
[256.64965820 -389.54232788]
[270.60885620 -395.08105469]
[285.12515259 -398.92987061]
[299.99478149 -401.03475952]
[315.00897217 -401.36611938]
[329.95700073 -399.91937256]
[344.62896729 -396.71478271]
[358.81893921 -391.79733276]
[372.32769775 -385.23608398]
[384.96557617 -377.12313843]
[396.55520630 -367.57238770]
[406.93383789 -356.71786499]
[415.95581055 -344.71203613]
[423.49444580 -331.72335815]
[429.44393921 -317.93423462]
[433.72073364 -303.53820801]
[436.26480103 -288.73739624]
[437.04046631 -273.73959351]
[436.03677368 -258.75527954]
[433.26785278 -243.99488831]
[428.77258301 -229.66558838]
[422.61404419 -215.96855164]
[414.87869263 -203.09606934]
[405.67517090 -191.22883606]
[395.13259888 -180.53346252]
[383.39904785 -171.16007996]
[370.63922119 -163.24031067]
[357.03222656 -156.88528442]
[342.76910400 -152.18426514]
[328.05007935 -149.20321655]
[313.08178711 -147.98399353]
[298.07437134 -148.54371643]
[283.23846436 -150.87454224]
[268.78237915 -154.94371033]
[254.90907288 -160.69413757]
[247.56781006 -147.61340332]
[240.22653198 -134.53265381]
[232.88526917 -121.45191956]
[225.54400635 -108.37117767]
[218.20272827 -95.29043579]
[210.86146545 -82.20969391]
[203.52020264 -69.12895203]
[196.17892456 -56.04821014]
[188.83766174 -42.96746826]
[181.49639893 -29.88672829]
[187.87734985 -16.45462418]
[185.09242249 -1.66583645]
[174.00369263 8.76936245]
[158.71997070 10.69652176]
[151.37870789 23.77726364]
[144.03742981 36.85800552]
[136.69616699 49.93874359]
[147.60832214 60.17305374]
[155.75477600 72.72101593]
[160.66227722 86.85369873]
[162.04574585 101.75007629]
[159.82481384 116.54479218]
[154.12847900 130.37837219]
[145.28767395 142.44718933]
[133.81599426 152.05014038]
[120.37983704 158.62934875]
[105.75976562 161.80261230]
[90.80509186 161.38560486]
[76.38457489 157.40252686]
[69.04330444 170.48326111]
[81.66087341 178.60331726]
[93.76514435 187.47036743]
[105.31194305 197.05209351]
[116.25914764 207.31352234]
[126.56681061 218.21720886]
[136.19731140 229.72335815]
[145.11552429 241.78999329]
[153.28889465 254.37307739]
[160.68760681 267.42672729]
[167.28465271 280.90325928]
[173.05596924 294.75354004]
[177.98049927 308.92700195]
[182.04026794 323.37194824]
[185.22045898 338.03564453]
[187.50947571 352.86462402]
[188.89895630 367.80474854]
[189.38385010 382.80151367]
[188.96235657 397.80020142]
[187.63604736 412.74609375]
[185.40972900 427.58459473]
[182.29154968 442.26162720]
[178.29289246 456.72360229]
[173.42832947 470.91775513]
[167.71560669 484.79229736]
[161.17558289 498.29663086]
[153.83212280 511.38140869]
[145.71202087 523.99896240]
[136.84489441 536.10314941]
[127.26312256 547.64990234]
[117.00164795 558.59710693]
[106.09791565 568.90466309]
[94.59172058 578.53515625]
[82.52503967 587.45330811]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 181]
[70 180]
[82 168]
[83 167]
[84 166]
[85 165]
[89 161]
[90 160]
[91 159]
[92 158]
[93 157]
[94 156]
[95 155]
[96 154]
[97 153]
[98 152]
[99 151]
] def

init

% Start Annotations
96 154 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
69 181 11 gmark
69 cmark
181 cmark
70 180 3 gmark
70 cmark
82 168 7 gmark
82 cmark
168 cmark
83 167 6 gmark
84 166 12 gmark
84 cmark
166 cmark
85 165 10 gmark
89 161 13 gmark
89 cmark
161 cmark
90 160 3 gmark
90 cmark
160 cmark
91 159 3 gmark
91 cmark
159 cmark
92 158 9 gmark
93 157 6 gmark
93 cmark
94 156 8 gmark
95 155 8 gmark
96 154 2 gmark
154 cmark
97 153 4 gmark
153 cmark
98 152 10 gmark
98 cmark
152 cmark
99 151 7 gmark

% End Annotations
showpage
end
%%EOF
