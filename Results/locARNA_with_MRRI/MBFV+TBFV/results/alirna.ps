%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Jan 25 16:29:43 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________UGAGC_AGUUUUUUGAAACGAAGAA_UUUGCA___AUGUCUA__AAA_AAACC____AGGAAAACCCGGGAGAAACCGGGUUGUCAAUAUGCUAAAACGCGCGGGA_CCCGCG______________A_ACCGCAAAAA_AAAACAGCAUAUUGACACCUGGAA___AGAC_AGGAGAUCCUCUUC_CUUCC_____________\
) } def
/len { sequence length } bind def

/coor [
[95.71411133 463.65200806]
[81.01726532 466.80624390]
[66.00792694 467.62243652]
[51.05570602 466.08047485]
[36.52882004 462.21835327]
[22.78500748 456.13113403]
[10.16271782 447.96875000]
[-1.02721083 437.93222046]
[-10.50921726 426.26870728]
[-18.04979706 413.26538086]
[-23.46325874 399.24252319]
[-26.61629105 384.54541016]
[-27.43124580 369.53601074]
[-25.88805389 354.58389282]
[-22.02472115 340.05734253]
[-15.93638134 326.31402588]
[-7.77296829 313.69241333]
[2.26448798 302.50332642]
[13.92880535 293.02227783]
[26.93273926 285.48275757]
[40.95605850 280.07046509]
[55.65342331 276.91864014]
[70.66289520 276.10491943]
[72.20162201 261.18405151]
[73.74034882 246.26318359]
[75.16950989 231.33142090]
[76.48902893 216.38957214]
[77.80855560 201.44772339]
[79.12807465 186.50587463]
[80.44760132 171.56402588]
[81.76712036 156.62217712]
[83.08664703 141.68032837]
[73.59052277 153.29168701]
[59.82191086 159.24360657]
[44.85784531 158.20593262]
[32.04252625 150.41056824]
[24.23995018 137.59963989]
[23.19384766 122.63616943]
[29.13800812 108.86420441]
[40.74401474 99.36154175]
[55.41813660 96.25185394]
[69.88096619 100.23010254]
[80.90032959 110.40721893]
[86.01354218 124.50835419]
[89.71829224 109.97306061]
[86.11981201 96.46222687]
[95.74641418 86.32219696]
[99.45115662 71.78689575]
[103.15590668 57.25160217]
[89.48049164 49.63517380]
[78.24616241 38.75086594]
[70.21228790 25.34239960]
[65.91983795 10.32384968]
[65.65495300 -5.28268576]
[69.42986298 -20.41663933]
[76.98249054 -34.05104446]
[87.79459381 -45.26222610]
[101.12732697 -53.29238129]
[116.07176971 -57.60078049]
[131.61083984 -57.90020752]
[135.10180664 -72.48831940]
[133.72013855 -76.59931183]
[133.71739197 -80.54012299]
[134.87103271 -83.89852142]
[136.84759521 -86.37675476]
[139.24955750 -87.81779480]
[143.59065247 -102.17588806]
[147.93174744 -116.53398132]
[137.50131226 -105.75410461]
[124.67803192 -97.97184753]
[110.30035400 -93.69604492]
[95.30834961 -93.20626068]
[80.68225861 -96.53453064]
[67.37837982 -103.46322632]
[56.26658249 -113.53933716]
[48.07339478 -126.10403442]
[43.33451462 -140.33580017]
[42.35979462 -155.30409241]
[45.21296692 -170.03024292]
[51.70747375 -183.55139160]
[61.41868210 -194.98345947]
[73.71163940 -203.57901001]
[87.78257751 -208.77598572]
[102.71148682 -210.23463440]
[117.52225494 -207.85954285]
[131.24650574 -201.80603027]
[142.98689270 -192.46989441]
[151.97576904 -180.46156311]
[157.62542725 -166.56619263]
[159.56645203 -151.69230652]
[157.67288208 -136.81600952]
[166.16593933 -149.17997742]
[174.65901184 -161.54394531]
[183.15208435 -173.90791321]
[191.64515686 -186.27189636]
[200.13821411 -198.63586426]
[208.63128662 -210.99983215]
[217.12435913 -223.36380005]
[225.61743164 -235.72778320]
[234.11048889 -248.09175110]
[242.60356140 -260.45571899]
[231.29557800 -270.33734131]
[221.21128845 -281.46490479]
[212.48703003 -293.68801880]
[205.24081421 -306.84130859]
[199.57063293 -320.74688721]
[195.55316162 -335.21673584]
[193.24275208 -350.05514526]
[192.67062378 -365.06146240]
[193.84452820 -380.03271484]
[196.74859619 -394.76644897]
[201.34353638 -409.06341553]
[207.56721497 -422.73022461]
[215.33547974 -435.58212280]
[224.54324341 -447.44522095]
[235.06600952 -458.15914917]
[246.76145935 -467.57897949]
[259.47140503 -475.57730103]
[273.02398682 -482.04598999]
[287.23593140 -486.89755249]
[301.91500854 -490.06637573]
[316.86270142 -491.50958252]
[331.87686157 -491.20767212]
[346.75445557 -489.16476440]
[361.29428101 -485.40841675]
[375.29968262 -479.98947144]
[388.58129883 -472.98120117]
[400.95944214 -464.47836304]
[412.26675415 -454.59600830]
[422.35031128 -443.46774292]
[431.07376099 -431.24407959]
[438.31909180 -418.09030151]
[443.98834229 -404.18432617]
[448.00485229 -389.71423340]
[450.31427002 -374.87564087]
[450.88540649 -359.86932373]
[449.71047974 -344.89813232]
[446.80545044 -330.16458130]
[442.20953369 -315.86795044]
[435.98495483 -302.20153809]
[428.21585083 -289.35015869]
[419.00726318 -277.48767090]
[408.48379517 -266.77444458]
[396.78771973 -257.35540771]
[384.07723999 -249.35791016]
[370.52423096 -242.89012146]
[356.31198120 -238.03952026]
[341.63269043 -234.87167358]
[326.68490601 -233.42945862]
[311.67074585 -233.73236084]
[296.79327393 -235.77629089]
[282.25369263 -239.53361511]
[268.24865723 -244.95349121]
[254.96752930 -251.96264648]
[246.47447205 -239.59867859]
[237.98139954 -227.23471069]
[229.48832703 -214.87074280]
[220.99525452 -202.50675964]
[212.50219727 -190.14279175]
[204.00912476 -177.77882385]
[195.51605225 -165.41485596]
[187.02297974 -153.05087280]
[178.52992249 -140.68690491]
[170.03684998 -128.32293701]
[169.66848755 -119.25772095]
[162.28984070 -112.19288635]
[157.94874573 -97.83478546]
[153.60765076 -83.47669220]
[149.68992615 -68.99735260]
[146.19895935 -54.40923309]
[158.97364807 -47.76842880]
[169.79100037 -38.25264740]
[178.01721191 -26.41340828]
[183.16880798 -12.93855000]
[184.94114685 1.38774157]
[183.22637939 15.73056412]
[178.11997986 29.25295639]
[169.91551208 41.16473770]
[159.08767700 50.76868057]
[146.26492310 57.50132370]
[132.19291687 60.96603012]
[117.69120026 60.95634842]
[113.98645782 75.49164581]
[110.28170776 90.02693939]
[113.88018799 103.53777313]
[104.25358582 113.67780304]
[100.54884338 128.21310425]
[98.02849579 142.99984741]
[96.70896912 157.94169617]
[95.38945007 172.88354492]
[94.06992340 187.82539368]
[92.75040436 202.76724243]
[91.43087769 217.70909119]
[90.11135864 232.65093994]
[92.47335052 241.47229004]
[88.66121674 247.80191040]
[87.12248993 262.72277832]
[85.58377075 277.64364624]
[100.11128998 281.50338745]
[113.85610962 287.58831787]
[126.47974396 295.74859619]
[137.67132568 305.78329468]
[147.15525818 317.44525146]
[154.69798279 330.44732666]
[160.11375427 344.46929932]
[163.26921082 359.16589355]
[164.08665466 374.17517090]
[162.54592896 389.12750244]
[158.68498230 403.65472412]
[152.59892273 417.39904785]
[144.43759155 430.02200317]
[134.40197754 441.21276855]
[122.73922729 450.69570923]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 198]
[24 197]
[25 196]
[26 194]
[27 193]
[28 192]
[29 191]
[30 190]
[31 189]
[32 188]
[44 187]
[45 186]
[47 184]
[48 183]
[49 182]
[60 170]
[61 169]
[66 168]
[67 167]
[68 166]
[91 164]
[92 163]
[93 162]
[94 161]
[95 160]
[96 159]
[97 158]
[98 157]
[99 156]
[100 155]
[101 154]
] def

init

% Start Annotations
45 186 0.16 0.6 colorpair
94 161 0.32 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
23 198 8 gmark
23 cmark
198 cmark
24 197 7 gmark
24 cmark
197 cmark
25 196 10 gmark
25 cmark
196 cmark
26 194 14 gmark
26 cmark
194 cmark
27 193 3 gmark
27 cmark
193 cmark
28 192 7 gmark
28 cmark
192 cmark
29 191 7 gmark
29 cmark
191 cmark
30 190 7 gmark
30 cmark
190 cmark
31 189 11 gmark
31 cmark
189 cmark
32 188 11 gmark
32 cmark
188 cmark
44 187 11 gmark
45 186 1 gmark
186 cmark
47 184 13 gmark
47 cmark
184 cmark
48 183 12 gmark
48 cmark
49 182 10 gmark
49 cmark
182 cmark
60 170 9 gmark
60 cmark
170 cmark
61 169 11 gmark
61 cmark
66 168 10 gmark
66 cmark
168 cmark
67 167 9 gmark
67 cmark
167 cmark
68 166 11 gmark
91 164 8 gmark
92 163 7 gmark
92 cmark
163 cmark
93 162 8 gmark
93 cmark
162 cmark
94 161 2 gmark
94 cmark
161 cmark
95 160 6 gmark
95 cmark
160 cmark
96 159 8 gmark
96 cmark
159 cmark
97 158 5 gmark
97 cmark
158 cmark
98 157 8 gmark
99 156 7 gmark
99 cmark
156 cmark
100 155 8 gmark
100 cmark
155 cmark
101 154 6 gmark
101 cmark
154 cmark

% End Annotations
showpage
end
%%EOF
