%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Fri Feb  2 12:14:08 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____A_UGUUAAAUAGA___UUAGCAACUGUGGU___C_AUGUCU___AAAAAACCAGGAAGACCC___GGGGGAAGCCGGGCUGUCAAUAUGCUGAAACGCGGAGCAACCCGCG______________AACCGCAAAAA_AAAACAGCAUAUUGACAC_CUGGGA__AAGACCAGGGGAUCUUCUGCUUCUC_________________\
) } def
/len { sequence length } bind def

/coor [
[15.96794796 716.01031494]
[1.38269556 719.52661133]
[-13.35969925 722.31152344]
[-28.22258568 724.35815430]
[-43.16901016 725.66131592]
[-58.16181564 726.21789551]
[-73.16372681 726.02642822]
[-88.13744354 725.08746338]
[-103.04574585 723.40325928]
[-117.85156250 720.97796631]
[-132.51808167 717.81774902]
[-147.00885010 713.93035889]
[-161.28782654 709.32556152]
[-175.31953430 704.01464844]
[-189.06906128 698.01098633]
[-202.50224304 691.32940674]
[-215.58567810 683.98651123]
[-228.28683472 676.00061035]
[-240.57412720 667.39154053]
[-252.41703796 658.18066406]
[-263.78607178 648.39099121]
[-274.65301514 638.04669189]
[-284.99084473 627.17364502]
[-294.77383423 615.79882812]
[-303.97766113 603.95043945]
[-312.57946777 591.65808105]
[-320.55786133 578.95220947]
[-327.89297485 565.86437988]
[-334.56661987 552.42724609]
[-340.56216431 538.67419434]
[-345.86474609 524.63934326]
[-350.46112061 510.35763550]
[-354.33993530 495.86459351]
[-357.49148560 481.19619751]
[-359.90795898 466.38894653]
[-361.58334351 451.47964478]
[-362.51348877 436.50537109]
[-362.69604492 421.50335693]
[-362.13061523 406.51089478]
[-360.81854248 391.56521606]
[-358.76315308 376.70355225]
[-355.96951294 361.96282959]
[-352.44458008 347.37963867]
[-348.19711304 332.99029541]
[-343.23767090 318.83056641]
[-337.57858276 304.93566895]
[-331.23394775 291.34008789]
[-324.21948242 278.07769775]
[-316.55270386 265.18139648]
[-308.25259399 252.68331909]
[-299.33981323 240.61448669]
[-289.83654785 229.00492859]
[-279.76641846 217.88349915]
[-269.15441895 207.27784729]
[-258.02700806 197.21434021]
[-246.41175842 187.71801758]
[-234.33761597 178.81245422]
[-221.83456421 170.51982117]
[-208.93371582 162.86071777]
[-195.66711426 155.85418701]
[-182.06776428 149.51765442]
[-168.16946411 143.86688232]
[-154.00677490 138.91589355]
[-139.61491394 134.67703247]
[-125.02964020 131.16079712]
[-110.28722382 128.37596130]
[-95.42433167 126.32942963]
[-80.47789764 125.02629852]
[-65.48509216 124.46981049]
[-50.48318100 124.66133881]
[-35.50946808 125.60041809]
[-20.60117722 127.28471375]
[-5.79537344 129.71002197]
[8.87113285 132.87033081]
[23.36187935 136.75778198]
[37.64083862 141.36270142]
[51.67251205 146.67364502]
[65.42201233 152.67741394]
[72.10220337 139.24703979]
[78.78240204 125.81666565]
[85.46259308 112.38629150]
[80.95155334 98.61687469]
[87.40441132 85.64356232]
[101.10702515 80.93351746]
[107.78722382 67.50314331]
[114.46741486 54.07276535]
[121.14761353 40.64239120]
[127.82780457 27.21201324]
[134.50799561 13.78163719]
[141.18820190 0.35126165]
[147.86839294 -13.07911396]
[154.54858398 -26.50949097]
[161.22877502 -39.93986511]
[167.90898132 -53.37024307]
[174.58917236 -66.80062103]
[162.02764893 -75.03131866]
[150.52778625 -84.68997192]
[140.25102234 -95.64098358]
[131.34164429 -107.73062134]
[123.92471313 -120.78915405]
[118.10434723 -134.63328552]
[113.96226501 -149.06863403]
[111.55661011 -163.89257812]
[110.92115784 -178.89698792]
[112.06481934 -193.87124634]
[114.97154999 -208.60513306]
[119.60054016 -222.89179993]
[125.88680267 -236.53068542]
[133.74209595 -249.33032227]
[143.05613708 -261.11102295]
[153.69816589 -271.70742798]
[165.51879883 -280.97073364]
[178.35208130 -288.77093506]
[192.01786804 -294.99850464]
[206.32429504 -299.56604004]
[221.07054138 -302.40942383]
[236.04957581 -303.48870850]
[251.05111694 -302.78875732]
[265.86459351 -300.31942749]
[280.28201294 -296.11532593]
[294.10098267 -290.23550415]
[307.12753296 -282.76251221]
[319.17874146 -273.80123901]
[330.08547974 -263.47750854]
[339.69461060 -251.93624878]
[347.87124634 -239.33944702]
[354.50057983 -225.86398315]
[359.48956299 -211.69902039]
[362.76815796 -197.04339600]
[364.29034424 -182.10287476]
[364.03472900 -167.08717346]
[362.00491333 -152.20712280]
[358.22940063 -137.67158508]
[352.76119995 -123.68462372]
[345.67703247 -110.44260406]
[337.07638550 -98.13140869]
[327.08001709 -86.92388153]
[315.82821655 -76.97735596]
[303.47897339 -68.43145752]
[290.20562744 -61.40616608]
[276.19451904 -56.00010300]
[261.64236450 -52.28915787]
[246.75344849 -50.32542801]
[231.73677063 -50.13648224]
[216.80314636 -51.72497177]
[202.16223145 -55.06859970]
[188.01954651 -60.12042236]
[181.33935547 -46.69004822]
[174.65914917 -33.25967026]
[167.97895813 -19.82929611]
[161.29876709 -6.39891958]
[154.61857605 7.03145647]
[147.93838501 20.46183205]
[141.25817871 33.89220810]
[134.57798767 47.32258606]
[127.89779663 60.75296021]
[121.21759796 74.18333435]
[114.53740692 87.61370850]
[119.04844666 101.38312531]
[112.59558868 114.35643768]
[98.89297485 119.06648254]
[92.21277618 132.49685669]
[85.53258514 145.92723083]
[78.85238647 159.35760498]
[91.93585968 166.70040894]
[104.63705444 174.68624878]
[116.92440033 183.29525757]
[128.76734924 192.50604248]
[140.13645935 202.29571533]
[151.00344849 212.63990784]
[161.34132385 223.51290894]
[171.12437439 234.88771057]
[180.32826233 246.73600769]
[188.93013000 259.02835083]
[196.90858459 271.73419189]
[204.24377441 284.82192993]
[210.91748047 298.25903320]
[216.91311646 312.01208496]
[222.21574402 326.04690552]
[226.81221008 340.32858276]
[230.69108582 354.82162476]
[233.84271240 369.48999023]
[236.25926208 384.29724121]
[237.93473816 399.20651245]
[238.86494446 414.18078613]
[239.04760742 429.18280029]
[238.48223877 444.17529297]
[237.17025757 459.12094116]
[235.11492920 473.98263550]
[232.32136536 488.72338867]
[228.79650879 503.30657959]
[224.54911804 517.69592285]
[219.58975220 531.85571289]
[213.93074036 545.75061035]
[207.58616638 559.34625244]
[200.57179260 572.60870361]
[192.90505981 585.50500488]
[184.60501099 598.00311279]
[175.69232178 610.07202148]
[166.18911743 621.68164062]
[156.11901855 632.80310059]
[145.50709534 643.40881348]
[134.37971497 653.47235107]
[122.76452637 662.96875000]
[110.69042206 671.87438965]
[98.18742371 680.16705322]
[85.28660583 687.82623291]
[72.02004242 694.83282471]
[58.42072678 701.16943359]
[44.52245712 706.82031250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 164]
[79 163]
[80 162]
[81 161]
[84 158]
[85 157]
[86 156]
[87 155]
[88 154]
[89 153]
[90 152]
[91 151]
[92 150]
[93 149]
[94 148]
[95 147]
] def

init

% Start Annotations
79 163 0.0 0.2 colorpair
86 156 0.16 0.2 colorpair
87 155 0.48 0.2 colorpair
92 150 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
78 164 9 gmark
78 cmark
164 cmark
79 163 2 gmark
80 162 11 gmark
80 cmark
162 cmark
81 161 10 gmark
84 158 12 gmark
84 cmark
158 cmark
85 157 14 gmark
86 156 2 gmark
86 cmark
156 cmark
87 155 2 gmark
87 cmark
155 cmark
88 154 8 gmark
89 153 5 gmark
89 cmark
90 152 7 gmark
91 151 7 gmark
92 150 2 gmark
150 cmark
93 149 3 gmark
149 cmark
94 148 9 gmark
94 cmark
148 cmark
95 147 7 gmark

% End Annotations
showpage
end
%%EOF
