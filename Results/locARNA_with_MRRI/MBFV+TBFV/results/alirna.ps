%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.5.1
%%CreationDate: Tue Jan 23 16:20:06 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGACAUGUUUUUAGAAAAAAAGAUUAUC______AUGUCU___AAAA_AACCAGGAAGGCCC___GGGGGAAACCGGGUUGUCAAUAUGCUAAAACGCGGGGUA_CCCGCG_____________CA__AGCACAAAUA_AAACAGCAUAUUGACACCUGGGAA__AGACCAGGGGAUCUUCUGCUCUC__________________\
) } def
/len { sequence length } bind def

/coor [
[57.98191071 601.28680420]
[44.83462143 608.52252197]
[31.18885422 614.76751709]
[17.11913872 619.98773193]
[2.70231962 624.15454102]
[-11.98286247 627.24530029]
[-26.85620117 629.24304199]
[-41.83646393 630.13690186]
[-56.84183121 629.92199707]
[-71.79034424 628.59948730]
[-86.60037231 626.17657471]
[-101.19100952 622.66650391]
[-115.48257446 618.08850098]
[-129.39701843 612.46746826]
[-142.85832214 605.83422852]
[-155.79298401 598.22491455]
[-168.13035583 589.68109131]
[-179.80305481 580.24951172]
[-190.74732971 569.98156738]
[-200.90339661 558.93341064]
[-210.21577454 547.16540527]
[-218.63363647 534.74176025]
[-226.11097717 521.73034668]
[-232.60697937 508.20223999]
[-238.08615112 494.23135376]
[-242.51856995 479.89395142]
[-245.88002014 465.26837158]
[-248.15214539 450.43444824]
[-249.32254028 435.47326660]
[-249.38481140 420.46649170]
[-248.33862305 405.49609375]
[-246.18968201 390.64385986]
[-242.94972229 375.99087524]
[-238.63644409 361.61718750]
[-233.27340698 347.60128784]
[-226.88990784 334.01974487]
[-219.52079773 320.94674683]
[-211.20634460 308.45367432]
[-201.99192810 296.60876465]
[-191.92790222 285.47671509]
[-181.06922913 275.11831665]
[-169.47520447 265.59014893]
[-157.20916748 256.94424438]
[-144.33810425 249.22785950]
[-130.93229675 242.48309326]
[-117.06498718 236.74681091]
[-102.81190491 232.05033875]
[-88.25090027 228.41932678]
[-73.46149445 225.87359619]
[-58.52447128 224.42704773]
[-43.52140427 224.08760071]
[-28.53424072 224.85711670]
[-13.64483452 226.73135376]
[1.06549227 229.70011902]
[15.51639557 233.74716187]
[29.62895012 238.85040283]
[35.75745010 225.15946960]
[41.88595200 211.46855164]
[34.31666946 198.66839600]
[35.75304794 183.68838501]
[45.85286331 172.29333496]
[60.89974594 168.99218750]
[67.02824402 155.30125427]
[55.52800369 146.55757141]
[46.26679993 135.46983337]
[39.71091843 122.59629059]
[36.19042206 108.58509064]
[35.88256454 94.14164734]
[38.80284119 79.99316406]
[44.80422592 66.85196686]
[53.58456421 55.37967682]
[64.70178986 46.15390015]
[77.59618378 39.63912582]
[91.61855316 36.16335678]
[106.06289673 35.90158081]
[120.20199585 38.86698914]
[126.53559113 25.26972580]
[132.86918640 11.67246246]
[139.20278931 -1.92479992]
[135.52755737 -14.28933334]
[141.08395386 -25.48464966]
[152.40428162 -29.75081444]
[158.94154358 -43.25134277]
[165.47880554 -56.75186539]
[172.01606750 -70.25239563]
[178.55332947 -83.75292206]
[185.09059143 -97.25344849]
[191.62785339 -110.75397491]
[198.16511536 -124.25450134]
[204.70237732 -137.75502014]
[211.23963928 -151.25555420]
[217.77690125 -164.75607300]
[224.31416321 -178.25660706]
[211.64881897 -186.32540894]
[200.00587463 -195.81004333]
[189.54278564 -206.58222961]
[180.40103149 -218.49630737]
[172.70426941 -231.39112854]
[166.55657959 -245.09231567]
[162.04110718 -259.41458130]
[159.21891785 -274.16421509]
[158.12817383 -289.14175415]
[158.78363037 -304.14465332]
[161.17642212 -318.97000122]
[165.27418518 -333.41729736]
[171.02151489 -347.29119873]
[178.34066772 -360.40402222]
[187.13265991 -372.57849121]
[197.27861023 -383.64990234]
[208.64129639 -393.46856689]
[221.06704712 -401.90167236]
[234.38781738 -408.83517456]
[248.42346191 -414.17532349]
[262.98416138 -417.84988403]
[277.87301636 -419.80917358]
[292.88864136 -420.02667236]
[307.82800293 -418.49948120]
[322.48901367 -415.24822998]
[336.67346191 -410.31686401]
[350.18948364 -403.77209473]
[362.85427856 -395.70245361]
[374.49658203 -386.21704102]
[384.95895386 -375.44415283]
[394.09991455 -363.52944946]
[401.79580688 -350.63412476]
[407.94259644 -336.93252563]
[412.45709229 -322.60998535]
[415.27832031 -307.86013794]
[416.36804199 -292.88253784]
[415.71160889 -277.87966919]
[413.31781006 -263.05450439]
[409.21908569 -248.60745239]
[403.47085571 -234.73394775]
[396.15081787 -221.62159729]
[387.35800171 -209.44773865]
[377.21130371 -198.37699890]
[365.84799194 -188.55909729]
[353.42166138 -180.12681580]
[340.10043335 -173.19419861]
[326.06442261 -167.85498047]
[311.50347900 -164.18139648]
[296.61450195 -162.22309875]
[281.59884644 -162.00659180]
[266.65960693 -163.53479004]
[251.99879456 -166.78703308]
[237.81469727 -171.71934509]
[231.27743530 -158.21881104]
[224.74017334 -144.71829224]
[218.20291138 -131.21775818]
[211.66564941 -117.71723938]
[205.12838745 -104.21671295]
[198.59112549 -90.71618652]
[192.05386353 -77.21566010]
[185.51660156 -63.71513367]
[178.97933960 -50.21460724]
[172.44207764 -36.71408081]
[165.90481567 -23.21355247]
[168.12060547 -5.80568218]
[152.80004883 4.40879726]
[146.46646118 18.00605965]
[140.13285828 31.60332298]
[133.79925537 45.20058441]
[145.90560913 54.85533905]
[155.35667419 67.12136841]
[161.60577393 81.28917694]
[164.29144287 96.53926849]
[163.25833130 111.98953247]
[158.56622314 126.74629211]
[150.48648071 139.95599365]
[139.48649597 150.85452271]
[126.20250702 158.81152344]
[111.40290070 163.36671448]
[95.94372559 164.25660706]
[80.71917725 161.42976379]
[74.59067535 175.12068176]
[82.15203094 188.54200745]
[80.38132477 203.66543579]
[70.16575623 214.71560669]
[55.57687759 217.59704590]
[49.44837952 231.28797913]
[43.31987762 244.97889709]
[56.52700424 252.10484314]
[69.17179871 260.18670654]
[81.18518829 269.18032837]
[92.50156403 279.03665161]
[103.05912781 289.70178223]
[112.80020142 301.11752319]
[121.67158508 313.22146606]
[129.62483215 325.94754028]
[136.61651611 339.22622681]
[142.60841370 352.98501587]
[147.56784058 367.14877319]
[151.46768188 381.64007568]
[154.28663635 396.37985229]
[156.00933838 411.28753662]
[156.62634277 426.28176880]
[156.13430786 441.28060913]
[154.53590393 456.20214844]
[151.83985901 470.96487427]
[148.06091309 485.48822021]
[143.21969604 499.69277954]
[137.34265137 513.50103760]
[130.46186829 526.83752441]
[122.61494446 539.62939453]
[113.84472656 551.80688477]
[104.19911957 563.30340576]
[93.73079681 574.05615234]
[82.49694824 584.00640869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 181]
[57 180]
[58 179]
[62 175]
[63 174]
[76 162]
[77 161]
[78 160]
[79 159]
[82 157]
[83 156]
[84 155]
[85 154]
[86 153]
[87 152]
[88 151]
[89 150]
[90 149]
[91 148]
[92 147]
[93 146]
] def

init

% Start Annotations
86 153 0.16 1 colorpair
89 150 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
56 181 7 gmark
56 cmark
181 cmark
57 180 8 gmark
180 cmark
58 179 10 gmark
58 cmark
179 cmark
62 175 9 gmark
62 cmark
175 cmark
63 174 8 gmark
63 cmark
76 162 7 gmark
76 cmark
77 161 6 gmark
78 160 11 gmark
78 cmark
160 cmark
79 159 9 gmark
82 157 11 gmark
82 cmark
157 cmark
83 156 7 gmark
84 155 5 gmark
84 cmark
155 cmark
85 154 6 gmark
85 cmark
86 cmark
87 152 5 gmark
88 151 6 gmark
89 150 2 gmark
89 cmark
150 cmark
90 149 6 gmark
91 148 5 gmark
91 cmark
148 cmark
92 147 7 gmark
92 cmark
147 cmark
93 146 6 gmark

% End Annotations
showpage
end
%%EOF
