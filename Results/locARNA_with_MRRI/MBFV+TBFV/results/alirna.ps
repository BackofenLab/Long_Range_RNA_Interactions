%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Jan 25 16:59:42 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________GAAC_AGUUUUUUGGAACAGAAGA_CUGG__CAAUGUCUA__AAA_AAA_CCAGGAAGGCCCGGGGGAAACCGGGUUGUCAAU_AUGCUAAAACGCGGAGCAACCCGCG_____________A_ACCGCAAAAAAAAA_CAGCAUAUUGACACCUGGGA__AAGACU_GCAGAUCUUCUGCUUUUU___________C\
) } def
/len { sequence length } bind def

/coor [
[81.41905975 593.53869629]
[66.73703766 596.72021484]
[51.76196289 597.91625977]
[36.76108551 597.10565186]
[22.00211334 594.30279541]
[7.74843264 589.55767822]
[-5.74557924 582.95501709]
[-18.23910713 574.61267090]
[-29.50918770 564.67944336]
[-39.35469437 553.33264160]
[-47.59992218 540.77478027]
[-54.09772491 527.22998047]
[-58.73214340 512.93994141]
[-61.42047119 498.15966797]
[-62.11472702 483.15295410]
[-60.80252838 468.18762207]
[-57.50728607 453.53070068]
[-52.28781128 439.44381714]
[-45.23725510 426.17831421]
[-36.48143387 413.97097778]
[-26.17661285 403.03964233]
[-14.50669098 393.57940674]
[-1.67993224 385.75906372]
[12.07475471 379.71820068]
[26.51190186 375.56463623]
[41.37385941 373.37243652]
[56.39540100 373.18081665]
[58.20345306 358.29016113]
[60.01150131 343.39953613]
[61.81955338 328.50891113]
[63.62760162 313.61828613]
[65.43565369 298.72763062]
[67.24370575 283.83700562]
[69.05175018 268.94638062]
[70.85980225 254.05574036]
[72.66785431 239.16511536]
[74.47590637 224.27447510]
[63.61556625 217.81414795]
[55.97777176 207.68843079]
[52.72576523 195.38081360]
[54.37697983 182.71121216]
[60.72108841 171.56700134]
[70.84603882 163.62174988]
[83.26902008 160.08396912]
[75.79962921 157.48348999]
[68.71939850 153.95861816]
[62.14218140 149.56605530]
[56.17375183 144.37643433]
[50.91007614 138.47322083]
[46.43581009 131.95130920]
[42.82289505 124.91560364]
[40.12942886 117.47923279]
[38.39873123 109.76178741]
[37.65862656 101.88735962]
[37.92102432 93.98258209]
[39.18169403 86.17456818]
[41.42037201 78.58888245]
[44.60105515 71.34750366]
[48.67259598 64.56687927]
[53.56951904 58.35604095]
[59.21308136 52.81487656]
[65.51252747 48.03248215]
[72.36656189 44.08576202]
[79.66496277 41.03819275]
[87.29035950 38.93877029]
[95.12014771 37.82125854]
[103.02840424 37.70363235]
[110.88795471 38.58777618]
[118.57242584 40.45947647]
[124.72861481 26.78098106]
[130.88481140 13.10248280]
[137.04100037 -0.57601482]
[143.19718933 -14.25451279]
[130.45539856 -6.33954334]
[115.62571716 -4.08558178]
[101.10765839 -7.85733318]
[89.25035095 -17.04450417]
[81.97235870 -30.16055870]
[80.45131683 -45.08324051]
[84.93333435 -59.39797211]
[94.69319153 -70.78854370]
[108.15168762 -77.41189575]
[123.13116455 -78.19633484]
[137.20783997 -73.01492310]
[148.10404968 -62.70605469]
[154.05670166 -48.93775940]
[154.10211182 -33.93528748]
[162.43566895 -46.40732956]
[170.76921082 -58.87937546]
[179.10276794 -71.35141754]
[187.43632507 -83.82346344]
[195.76988220 -96.29550934]
[197.93638611 -105.17176056]
[204.32466125 -108.89167786]
[212.84564209 -121.23643494]
[221.36660767 -133.58119202]
[229.88757324 -145.92594910]
[238.40855408 -158.27070618]
[227.14416504 -168.20298767]
[217.13359070 -179.39784241]
[208.51736450 -191.69812012]
[201.41645813 -204.93116760]
[195.93052673 -218.91117859]
[192.13661194 -233.44192505]
[190.08795166 -248.31941223]
[189.81332397 -263.33477783]
[191.31657410 -278.27722168]
[194.57659912 -292.93698120]
[199.54763794 -307.10824585]
[206.15991211 -320.59210205]
[214.32058716 -333.19921875]
[223.91508484 -344.75265503]
[234.80874634 -355.09020996]
[246.84860229 -364.06671143]
[259.86566162 -371.55621338]
[273.67718506 -377.45352173]
[288.08926392 -381.67587280]
[302.89959717 -384.16397095]
[317.90023804 -384.88293457]
[332.88064575 -383.82260132]
[347.63046265 -380.99792480]
[361.94265747 -376.44851685]
[375.61633301 -370.23825073]
[388.45947266 -362.45431519]
[400.29183960 -353.20596313]
[410.94729614 -342.62307739]
[420.27624512 -330.85415649]
[428.14773560 -318.06448364]
[434.45126343 -304.43356323]
[439.09835815 -290.15277100]
[442.02374268 -275.42257690]
[443.18637085 -260.44979858]
[442.56991577 -245.44458008]
[440.18304443 -230.61759949]
[436.05923462 -216.17701721]
[430.25640869 -202.32553101]
[422.85601807 -189.25761414]
[413.96197510 -177.15669250]
[403.69909668 -166.19267273]
[392.21145630 -156.51947021]
[379.66036987 -148.27287292]
[366.22201538 -141.56863403]
[352.08502197 -136.50090027]
[337.44787598 -133.14080811]
[322.51605225 -131.53550720]
[307.49917603 -131.70755005]
[292.60803223 -133.65452576]
[278.05172729 -137.34909058]
[264.03454590 -142.73939514]
[250.75331116 -149.74974060]
[242.23233032 -137.40498352]
[233.71136475 -125.06022644]
[225.19039917 -112.71546936]
[216.66941833 -100.37071228]
[208.24191284 -87.96195221]
[199.90837097 -75.48990631]
[191.57481384 -63.01786423]
[183.24125671 -50.54582214]
[174.90769958 -38.07377625]
[166.57415771 -25.60173225]
[167.36212158 -19.03087234]
[164.03863525 -12.34150124]
[156.87568665 -8.09832001]
[150.71949768 5.58017731]
[144.56330872 19.25867462]
[138.40711975 32.93717194]
[132.25093079 46.61566925]
[149.58262634 62.16387939]
[160.00419617 82.98516083]
[162.06323242 106.17772675]
[155.47276306 128.50932312]
[141.15127563 146.86770630]
[121.09470367 158.69430542]
[98.09825134 162.34092712]
[112.07445526 172.99124146]
[118.69902039 189.17013550]
[116.23096466 206.38769531]
[105.43927002 219.91491699]
[89.36653900 226.08251953]
[87.55848694 240.97315979]
[85.75043488 255.86378479]
[83.94239044 270.75442505]
[82.13433838 285.64505005]
[80.32628632 300.53570557]
[78.51823425 315.42633057]
[76.71018219 330.31695557]
[74.90213776 345.20758057]
[73.09408569 360.09823608]
[71.28603363 374.98886108]
[85.82521820 378.76980591]
[99.73069000 384.45498657]
[112.75430298 391.94290161]
[124.66363525 401.09994507]
[135.24613953 411.76269531]
[144.31297302 423.74084473]
[151.70231628 436.82064819]
[157.28228760 450.76864624]
[160.95333862 465.33596802]
[162.64993286 480.26263428]
[162.34179688 495.28222656]
[160.03442383 510.12673950]
[155.76899719 524.53125000]
[149.62164307 538.23864746]
[141.70205688 551.00439453]
[132.15158081 562.60058594]
[121.14064789 572.82031250]
[108.86576843 581.48120117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 189]
[28 188]
[29 187]
[30 186]
[31 185]
[32 184]
[33 183]
[34 182]
[35 181]
[36 180]
[37 179]
[44 174]
[69 167]
[70 166]
[71 165]
[72 164]
[73 163]
[87 160]
[88 159]
[89 158]
[90 157]
[91 156]
[92 155]
[94 154]
[95 153]
[96 152]
[97 151]
[98 150]
] def

init

% Start Annotations
44 174 0.16 0.6 colorpair
90 157 0.32 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
27 189 9 gmark
27 cmark
189 cmark
28 188 13 gmark
28 cmark
188 cmark
29 187 7 gmark
29 cmark
187 cmark
30 186 3 gmark
30 cmark
186 cmark
31 185 7 gmark
31 cmark
185 cmark
32 184 6 gmark
32 cmark
184 cmark
33 183 9 gmark
33 cmark
183 cmark
34 182 12 gmark
34 cmark
182 cmark
35 181 11 gmark
35 cmark
36 180 10 gmark
36 cmark
180 cmark
37 179 7 gmark
37 cmark
179 cmark
44 174 1 gmark
174 cmark
69 167 9 gmark
69 cmark
167 cmark
70 166 13 gmark
70 cmark
71 165 8 gmark
71 cmark
72 164 4 gmark
73 163 5 gmark
87 160 11 gmark
87 cmark
160 cmark
88 159 9 gmark
88 cmark
159 cmark
89 158 3 gmark
89 cmark
158 cmark
90 157 2 gmark
90 cmark
157 cmark
91 156 8 gmark
91 cmark
156 cmark
92 155 8 gmark
92 cmark
155 cmark
94 154 9 gmark
94 cmark
154 cmark
95 153 5 gmark
95 cmark
153 cmark
96 152 3 gmark
96 cmark
152 cmark
97 151 9 gmark
97 cmark
151 cmark
98 150 7 gmark
98 cmark
150 cmark

% End Annotations
showpage
end
%%EOF
