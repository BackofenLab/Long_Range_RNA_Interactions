%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Fri Jan 26 12:26:03 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______AGUUAAAAAGAUCUUAGAGCAGUGGAUA_____AUGUCU___AAAA_AACCAGGAAAGCCC___GGGGAAAACCGGGUUGUCAAUAUGCUAAAACGCGGGGUACCCCGCG______________C_AGCACAAAAA_A_AACAGCAUAUUGACACCUGGGA__AAGACCAGGGGAUCUUCUGCUCUC__________________\
) } def
/len { sequence length } bind def

/coor [
[73.19639587 561.92596436]
[60.32692719 569.64416504]
[46.93964005 576.42456055]
[33.10275269 582.23260498]
[18.88677406 587.03881836]
[4.36414623 590.81854248]
[-10.39112473 593.55267334]
[-25.30384827 595.22711182]
[-40.29803467 595.83349609]
[-55.29727173 595.36865234]
[-70.22512817 593.83489990]
[-85.00553894 591.24017334]
[-99.56317902 587.59759521]
[-113.82386780 582.92572021]
[-127.71494293 577.24847412]
[-141.16560364 570.59466553]
[-154.10731506 562.99829102]
[-166.47412109 554.49798584]
[-178.20301819 545.13708496]
[-189.23423767 534.96331787]
[-199.51153564 524.02850342]
[-208.98258972 512.38836670]
[-217.59909058 500.10220337]
[-225.31715393 487.23269653]
[-232.09745789 473.84536743]
[-237.90542603 460.00842285]
[-242.71148682 445.79241943]
[-246.49113464 431.26974487]
[-249.22511292 416.51446533]
[-250.89949036 401.60171509]
[-251.50572205 386.60754395]
[-251.04074097 371.60830688]
[-249.50691223 356.68045044]
[-246.91203308 341.90005493]
[-243.26934814 327.34243774]
[-238.59741211 313.08178711]
[-232.92002869 299.19076538]
[-226.26612854 285.74014282]
[-218.66963196 272.79849243]
[-210.16923523 260.43176270]
[-200.80824280 248.70292664]
[-190.63438416 237.67179871]
[-179.69949341 227.39457703]
[-168.05929565 217.92361450]
[-155.77310181 209.30720520]
[-142.90351868 201.58923340]
[-129.51612854 194.80903625]
[-115.67914581 189.00117493]
[-101.46308899 184.19522095]
[-86.94040680 180.41569519]
[-72.18509674 177.68182373]
[-57.27234650 176.00756836]
[-42.27815247 175.40144348]
[-27.27891922 175.86653137]
[-12.35108376 177.40048218]
[2.42928529 179.99546814]
[16.98686981 183.63827515]
[31.24748802 188.31031799]
[45.13846970 193.98780823]
[51.78940964 180.54292297]
[58.44034576 167.09803772]
[51.36936569 154.01600647]
[53.38127899 139.10238647]
[63.91221619 128.10453796]
[79.07501221 125.38500977]
[85.72595215 111.94011688]
[81.86083984 104.15761566]
[81.95057678 95.46862793]
[85.97560120 87.76761627]
[93.05834198 82.73360443]
[101.65456390 81.46415710]
[108.89644623 68.32813263]
[98.16213989 55.31087494]
[93.26200104 39.20424652]
[94.92079926 22.48759842]
[102.85593414 7.72285700]
[115.82507324 -2.83809805]
[131.82061768 -7.59687710]
[148.38044739 -5.85045052]
[155.22988892 -19.19530678]
[162.07931519 -32.54016495]
[168.92875671 -45.88502121]
[165.72958374 -58.37962341]
[171.70863342 -69.35334778]
[183.18190002 -73.18465424]
[190.22833252 -86.42654419]
[197.27476501 -99.66844177]
[204.32121277 -112.91033173]
[211.36764526 -126.15222931]
[218.41407776 -139.39411926]
[225.46051025 -152.63601685]
[232.50694275 -165.87791443]
[239.55337524 -179.11979675]
[246.59980774 -192.36169434]
[253.64625549 -205.60359192]
[260.69268799 -218.84548950]
[248.34367371 -227.39056396]
[237.07020569 -237.31152344]
[227.02473450 -248.47419739]
[218.34313965 -260.72763062]
[211.14280701 -273.90606689]
[205.52113342 -287.83135986]
[201.55412292 -302.31512451]
[199.29544067 -317.16149902]
[198.77561951 -332.16970825]
[200.00169373 -347.13677979]
[202.95709229 -361.86029053]
[207.60183716 -376.14114380]
[213.87312317 -389.78619385]
[221.68612671 -402.61093140]
[230.93518066 -414.44186401]
[241.49522400 -425.11904907]
[253.22341919 -434.49807739]
[265.96118164 -442.45205688]
[279.53622437 -448.87347412]
[293.76498413 -453.67547607]
[308.45501709 -456.79312134]
[323.40765381 -458.18420410]
[338.42068481 -457.82998657]
[353.29104614 -455.73519897]
[367.81768799 -451.92822266]
[381.80413818 -446.46047974]
[395.06121826 -439.40597534]
[407.40966797 -430.86004639]
[418.68246460 -420.93835449]
[428.72720337 -409.77499390]
[437.40795898 -397.52099609]
[444.60742188 -384.34207153]
[450.22817993 -370.41641235]
[454.19421387 -355.93240356]
[456.45190430 -341.08587646]
[456.97073364 -326.07760620]
[455.74365234 -311.11062622]
[452.78726196 -296.38729858]
[448.14157104 -282.10675049]
[441.86938477 -268.46212769]
[434.05551147 -255.63792419]
[424.80566406 -243.80758667]
[414.24493408 -233.13111877]
[402.51608276 -223.75288391]
[389.77780151 -215.79974365]
[376.20233154 -209.37922668]
[361.97326660 -204.57818604]
[347.28302002 -201.46153259]
[332.33029175 -200.07142639]
[317.31729126 -200.42665100]
[302.44705200 -202.52243042]
[287.92065430 -206.33038330]
[273.93457031 -211.79905701]
[266.88815308 -198.55715942]
[259.84170532 -185.31526184]
[252.79527283 -172.07336426]
[245.74884033 -158.83148193]
[238.70240784 -145.58958435]
[231.65597534 -132.34768677]
[224.60954285 -119.10578918]
[217.56309509 -105.86389923]
[210.51666260 -92.62200165]
[203.47023010 -79.38011169]
[196.42379761 -66.13821411]
[197.97433472 -48.65753555]
[182.27362061 -39.03557968]
[175.42417908 -25.69072533]
[168.57473755 -12.34586811]
[161.72529602 0.99898815]
[170.93446350 10.53647900]
[176.76686096 22.46794701]
[178.64237976 35.63854980]
[176.36459351 48.76869583]
[170.14134216 60.57833862]
[160.56576538 69.91178894]
[148.55979919 75.85079956]
[135.28549194 77.80488586]
[122.03247070 75.57001495]
[114.79058838 88.70603943]
[116.49269104 108.62009430]
[99.17083740 118.59105682]
[92.51989746 132.03594971]
[99.55905914 145.73837280]
[97.20754242 160.78244019]
[86.57421112 171.43119812]
[71.88523865 173.74896240]
[65.23429871 187.19386292]
[58.58335876 200.63874817]
[71.52518463 208.23495483]
[83.89212799 216.73506165]
[95.62117004 226.09577942]
[106.65253448 236.26937866]
[116.93001556 247.20404053]
[126.40123749 258.84402466]
[135.01792908 271.13003540]
[142.73619080 283.99942017]
[149.51669312 297.38665771]
[155.32489014 311.22351074]
[160.13116455 325.43945312]
[163.91102600 339.96203613]
[166.64523315 354.71728516]
[168.31983948 369.63000488]
[168.92630005 384.62420654]
[168.46154785 399.62344360]
[166.92794800 414.55130005]
[164.33329773 429.33172607]
[160.69084167 443.88940430]
[156.01911926 458.15011597]
[150.34194946 472.04122925]
[143.68826294 485.49194336]
[136.09194946 498.43371582]
[127.59174347 510.80059814]
[118.23094177 522.52954102]
[108.05725098 533.56085205]
[97.12252045 543.83825684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 184]
[60 183]
[61 182]
[65 178]
[66 177]
[71 175]
[72 174]
[79 165]
[80 164]
[81 163]
[82 162]
[85 160]
[86 159]
[87 158]
[88 157]
[89 156]
[90 155]
[91 154]
[92 153]
[93 152]
[94 151]
[95 150]
[96 149]
] def

init

% Start Annotations
92 153 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
59 184 7 gmark
59 cmark
184 cmark
60 183 9 gmark
183 cmark
61 182 9 gmark
61 cmark
182 cmark
65 178 9 gmark
65 cmark
178 cmark
66 177 10 gmark
66 cmark
71 175 7 gmark
175 cmark
72 174 12 gmark
79 165 5 gmark
79 cmark
80 164 9 gmark
81 163 13 gmark
81 cmark
163 cmark
82 162 11 gmark
85 160 12 gmark
85 cmark
160 cmark
86 159 7 gmark
87 158 6 gmark
87 cmark
158 cmark
88 157 9 gmark
89 156 3 gmark
89 cmark
90 155 8 gmark
91 154 8 gmark
154 cmark
92 153 2 gmark
92 cmark
153 cmark
93 152 7 gmark
94 151 7 gmark
94 cmark
151 cmark
95 150 9 gmark
95 cmark
150 cmark
96 149 7 gmark

% End Annotations
showpage
end
%%EOF
