%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Feb  5 19:43:17 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGU__AGAAAAAGACAGCUUAGGAGAACAAGAGCUGGGA______AUG_____GAAGGCCAUUCUAAAAGGAAAGGGGGGCGGUCCCC__CUCGACGAGAGUCGAAAGCGA____CCCCAA_____________________AAUUGGCAACCCUCUUCAGGAUUUUUCCUCCUCCUAUACGAAACUUCCCCCUAGACAGAGGGGGGGCGGUUCUUGUUCUCCCUGAGCCACCAUCACCCAGA\
) } def
/len { sequence length } bind def

/coor [
[92.96140289 542.06103516]
[77.92877197 541.48248291]
[63.25846481 538.15130615]
[49.45014954 532.18090820]
[36.97412872 523.77478027]
[26.25533104 513.21911621]
[17.65883446 500.87347412]
[11.47743320 487.15832520]
[7.92166281 472.54083252]
[7.11263227 457.51885986]
[9.07789612 442.60400391]
[13.75051880 428.30432129]
[20.97135162 415.10681152]
[30.49445724 403.46099854]
[41.99548340 393.76351929]
[55.08270264 386.34466553]
[69.31037903 381.45712280]
[84.19391632 379.26739502]
[84.77079773 364.27850342]
[85.34768677 349.28958130]
[85.92456818 334.30068970]
[86.50145721 319.31176758]
[86.98222351 304.31948853]
[87.36686707 289.32443237]
[87.75151062 274.32934570]
[88.13615417 259.33428955]
[88.52079773 244.33921814]
[88.90544128 229.34414673]
[89.29008484 214.34907532]
[89.67472839 199.35401917]
[90.05937195 184.35894775]
[90.44400787 169.36387634]
[90.82865143 154.36880493]
[91.21329498 139.37374878]
[91.59793854 124.37867737]
[91.98258209 109.38360596]
[85.29497528 122.81029510]
[75.39456940 134.07891846]
[62.94048691 142.43930054]
[48.76184845 147.33482361]
[33.80258560 148.43959045]
[19.05860901 145.68003845]
[5.51148701 139.23989868]
[-5.93688726 129.54789734]
[-14.52434349 117.24929810]
[-19.67917824 103.16286469]
[-21.05820847 88.22638702]
[-18.56962776 73.43425751]
[-12.37911224 59.77126312]
[-2.89879179 48.14699936]
[9.24018669 39.33535004]
[23.22967720 33.92294312]
[38.13833618 32.27010727]
[52.97362900 34.48688126]
[66.74790192 40.42568207]
[78.54414368 49.69113922]
[87.57702637 61.66640854]
[93.24518585 75.55424500]
[95.17126465 90.43247986]
[99.71495819 76.13720703]
[104.25865173 61.84193802]
[101.06511688 46.34639359]
[112.29416656 36.56079865]
[116.83786011 22.26552773]
[121.38155365 7.97025394]
[125.92525482 -6.32501888]
[114.38757324 -14.80179596]
[106.04165649 -26.40809250]
[101.69153595 -40.00310898]
[101.74930573 -54.25558853]
[106.19607544 -67.77416992]
[114.58517456 -79.24323273]
[126.08692169 -87.55089569]
[139.57070923 -91.89685059]
[153.71609497 -91.86940765]
[158.44271851 -106.10524750]
[163.16934204 -120.34107971]
[167.89596558 -134.57691956]
[172.62258911 -148.81275940]
[177.34921265 -163.04858398]
[182.07583618 -177.28442383]
[168.13200378 -182.82478333]
[154.53054810 -189.15928650]
[141.31661987 -196.26686096]
[128.53411865 -204.12393188]
[116.22550964 -212.70436096]
[104.43167877 -221.97967529]
[93.19181061 -231.91905212]
[82.54324341 -242.48947144]
[72.52134705 -253.65580750]
[63.15941238 -265.38098145]
[54.48854065 -277.62606812]
[46.53753281 -290.35034180]
[39.33280563 -303.51156616]
[32.89829254 -317.06597900]
[27.25536537 -330.96862793]
[22.42277145 -345.17324829]
[18.41656303 -359.63272095]
[15.25004959 -374.29898071]
[12.93374920 -389.12329102]
[11.47535706 -404.05642700]
[10.87971687 -419.04879761]
[11.14880848 -434.05056763]
[12.28173828 -449.01193237]
[14.27474022 -463.88317871]
[17.12119675 -478.61486816]
[20.81165123 -493.15814209]
[25.33384323 -507.46463013]
[30.67275047 -521.48681641]
[36.81063843 -535.17810059]
[43.72711945 -548.49310303]
[51.39921188 -561.38745117]
[59.80143738 -573.81835938]
[68.90587616 -585.74462891]
[78.68228912 -597.12652588]
[89.09819794 -607.92626953]
[100.11900330 -618.10797119]
[111.70809937 -627.63787842]
[123.82698059 -636.48425293]
[136.43539429 -644.61773682]
[149.49143982 -652.01129150]
[162.95178223 -658.64044189]
[176.77166748 -664.48309326]
[190.90521240 -669.51977539]
[205.30545044 -673.73388672]
[219.92456055 -677.11138916]
[234.71397400 -679.64099121]
[249.62455750 -681.31439209]
[264.60678101 -682.12591553]
[279.61087036 -682.07299805]
[294.58700562 -681.15570068]
[309.48541260 -679.37719727]
[324.25662231 -676.74322510]
[338.85153198 -673.26269531]
[353.22167969 -668.94708252]
[367.31930542 -663.81072998]
[381.09762573 -657.87072754]
[394.51083374 -651.14678955]
[407.51440430 -643.66125488]
[420.06509399 -635.43896484]
[432.12124634 -626.50732422]
[443.64282227 -616.89587402]
[454.59149170 -606.63665771]
[464.93093872 -595.76367188]
[474.62677002 -584.31304932]
[483.64685059 -572.32287598]
[491.96112061 -559.83294678]
[499.54205322 -546.88476562]
[506.36437988 -533.52136230]
[512.40551758 -519.78704834]
[517.64532471 -505.72753906]
[522.06646729 -491.38949585]
[525.65417480 -476.82055664]
[528.39660645 -462.06912231]
[530.28460693 -447.18420410]
[531.31195068 -432.21520996]
[531.47515869 -417.21191406]
[530.77374268 -402.22412109]
[529.21002197 -387.30163574]
[526.78918457 -372.49404907]
[523.51922607 -357.85049438]
[519.41107178 -343.41967773]
[514.47839355 -329.24948120]
[508.73745728 -315.38702393]
[502.20745850 -301.87832642]
[494.91003418 -288.76828003]
[486.86944580 -276.10043335]
[478.11236572 -263.91687012]
[468.66793823 -252.25804138]
[458.56747437 -241.16268921]
[447.84460449 -230.66767883]
[436.53485107 -220.80787659]
[424.67587280 -211.61602783]
[412.30703735 -203.12266541]
[399.46939087 -195.35600281]
[386.20565796 -188.34184265]
[372.55981445 -182.10348511]
[358.57723999 -176.66165161]
[344.30438232 -172.03442383]
[329.78863525 -168.23718262]
[315.07824707 -165.28251648]
[300.22207642 -163.18026733]
[285.26943970 -161.93740845]
[270.27005005 -161.55805969]
[255.27371216 -162.04348755]
[240.33026123 -163.39207458]
[225.48930359 -165.59934998]
[210.80018616 -168.65797424]
[196.31166077 -172.55780029]
[191.58503723 -158.32196045]
[186.85841370 -144.08613586]
[182.13179016 -129.85029602]
[177.40516663 -115.61445618]
[172.67854309 -101.37862396]
[167.95191956 -87.14278412]
[180.42536926 -77.51846313]
[188.86013794 -64.17993164]
[192.21937561 -48.73242188]
[190.07833862 -33.04243088]
[182.67803955 -19.01222038]
[170.89823914 -8.34918118]
[156.15292358 -2.35805941]
[140.22052002 -1.78132296]
[135.67683411 12.51395035]
[131.13313293 26.80922318]
[126.58943939 41.10449600]
[130.10797119 55.57754517]
[118.55392456 66.38563538]
[114.01023102 80.68090820]
[109.46653748 94.97618103]
[106.97764587 109.76824951]
[106.59300995 124.76332092]
[106.20836639 139.75839233]
[105.82372284 154.75344849]
[105.43907928 169.74851990]
[105.05443573 184.74359131]
[104.66979218 199.73866272]
[104.28514862 214.73371887]
[103.90050507 229.72879028]
[103.51586914 244.72386169]
[103.13122559 259.71893311]
[102.74658203 274.71398926]
[102.36193848 289.70907593]
[101.97729492 304.70413208]
[104.88050842 313.34054565]
[101.49035645 319.88867188]
[100.91347504 334.87756348]
[100.33658600 349.86648560]
[99.75970459 364.85537720]
[99.18281555 379.84426880]
[113.85401917 383.17150879]
[127.66394043 389.13812256]
[140.14222717 397.54092407]
[150.86387634 408.09371948]
[159.46369934 420.43704224]
[165.64878845 434.15051270]
[169.20851135 448.76702881]
[170.02159119 463.78878784]
[168.06034851 478.70416260]
[163.39157104 493.00512695]
[156.17430115 506.20458984]
[146.65432739 517.85296631]
[135.15592957 527.55352783]
[122.07070160 534.97589111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 230]
[19 229]
[20 228]
[21 227]
[22 226]
[23 224]
[24 223]
[25 222]
[26 221]
[27 220]
[28 219]
[29 218]
[30 217]
[31 216]
[32 215]
[33 214]
[34 213]
[35 212]
[36 211]
[59 210]
[60 209]
[61 208]
[63 206]
[64 205]
[65 204]
[66 203]
[75 195]
[76 194]
[77 193]
[78 192]
[79 191]
[80 190]
[81 189]
] def

init

% Start Annotations
18 230 0.0 0.2 colorpair
23 224 0.16 0.2 colorpair
31 216 0.16 0.6 colorpair
32 215 0.32 0.2 colorpair
34 213 0.16 0.2 colorpair
36 211 0.48 0.6 colorpair
60 209 0.48 0.2 colorpair
64 205 0.32 0.6 colorpair
78 192 0.16 0.6 colorpair
79 191 0.16 0.6 colorpair
81 189 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
18 230 2 gmark
19 229 4 gmark
19 cmark
229 cmark
20 228 5 gmark
21 227 5 gmark
22 226 5 gmark
23 224 2 gmark
23 cmark
224 cmark
24 223 4 gmark
25 222 3 gmark
25 cmark
222 cmark
26 221 5 gmark
27 220 3 gmark
27 cmark
28 219 3 gmark
28 cmark
219 cmark
29 218 5 gmark
30 217 4 gmark
30 cmark
31 216 1 gmark
31 cmark
32 215 2 gmark
32 cmark
215 cmark
33 214 4 gmark
34 213 2 gmark
34 cmark
35 212 3 gmark
35 cmark
212 cmark
36 211 1 gmark
36 cmark
211 cmark
59 210 4 gmark
59 cmark
210 cmark
60 209 2 gmark
60 cmark
209 cmark
61 208 3 gmark
61 cmark
208 cmark
63 206 4 gmark
63 cmark
206 cmark
64 205 1 gmark
64 cmark
205 cmark
65 204 3 gmark
65 cmark
66 203 5 gmark
66 cmark
75 195 5 gmark
76 194 4 gmark
76 cmark
194 cmark
77 193 5 gmark
78 192 1 gmark
78 cmark
192 cmark
79 191 1 gmark
79 cmark
191 cmark
80 190 5 gmark
81 189 2 gmark
81 cmark
189 cmark

% End Annotations
showpage
end
%%EOF
