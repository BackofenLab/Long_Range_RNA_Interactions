%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Fri Feb  2 16:01:12 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____CAGCUUAGGAGAACAAGAGCUGGGA______AUGG_____AAGGCCAUUCUAAAAGGAAAGGGGGGCGGUCCCCCUCGACGAGUGUCGAAAGAGACCG_______CAA_____________C_UAUUACCU_CUACUAUACCAAAUUUCCCCCUCGGAAGAGGGGGGGCGGUUCUUGUUCUC_______________\
) } def
/len { sequence length } bind def

/coor [
[61.88852692 531.15350342]
[48.50785065 524.25836182]
[36.78926086 514.81066895]
[27.21263695 503.19717407]
[20.17012978 489.89349365]
[15.95012856 475.44439697]
[14.72543621 460.44155884]
[16.54620552 445.49932861]
[21.33787727 431.22961426]
[28.90423393 418.21673584]
[38.93544006 406.99356079]
[51.02072144 398.01965332]
[64.66519928 391.66253662]
[79.31012726 388.18246460]
[78.84593201 373.18963623]
[78.38172913 358.19683838]
[77.91752625 343.20401001]
[77.45333099 328.21121216]
[76.98912811 313.21838379]
[76.52492523 298.22555542]
[76.06072235 283.23275757]
[75.59652710 268.23992920]
[75.13232422 253.24713135]
[74.66812134 238.25430298]
[74.20392609 223.26148987]
[73.73972321 208.26867676]
[73.27552032 193.27586365]
[66.94776154 206.87583923]
[57.25249481 218.32144165]
[44.87836456 226.79971313]
[30.70429039 231.70843506]
[15.73703003 232.69895935]
[1.03968918 229.70092773]
[-12.34380245 222.92729187]
[-23.46283531 212.85916138]
[-31.52764130 200.21168518]
[-35.96538544 185.88316345]
[-36.46086884 170.89134216]
[-32.97889328 156.30108643]
[-25.76677704 143.14869690]
[-15.33678818 132.36837769]
[-2.42975307 124.72583008]
[12.03756046 120.76390076]
[27.03755951 120.76400757]
[41.50481796 124.72612762]
[54.41174698 132.36885071]
[64.84159088 143.14932251]
[72.05352020 156.30180359]
[75.53504944 170.88960266]
[78.98591614 156.29194641]
[82.43679047 141.69429016]
[70.42527008 134.23764038]
[61.30172729 123.43766785]
[55.95708084 110.34900665]
[54.91323471 96.24975586]
[58.27212143 82.51672363]
[65.70574951 70.49093628]
[76.48821259 61.34671021]
[89.56661224 55.97699356]
[103.66383362 54.90613174]
[107.34019470 40.36362839]
[111.01655579 25.82112503]
[104.91040039 16.81006050]
[104.77791595 6.14548779]
[110.42124939 -2.64463973]
[119.77159119 -6.78518724]
[123.89623260 -21.20695305]
[128.02087402 -35.62871933]
[132.14552307 -50.05048370]
[121.54344177 -63.22579193]
[120.88767242 -79.95810699]
[130.23869324 -93.64830017]
[145.74932861 -99.01502991]
[149.65028381 -113.49890137]
[153.55125427 -127.98276520]
[139.45938110 -133.15156555]
[125.87946320 -139.54560852]
[112.91780853 -147.11482239]
[100.67584229 -155.79997253]
[89.24938965 -165.53309631]
[78.72786713 -176.23802185]
[69.19363403 -187.83094788]
[60.72130585 -200.22114563]
[53.37718582 -213.31166077]
[47.21876144 -227.00003052]
[42.29422379 -241.17912292]
[38.64211655 -255.73796082]
[36.29102707 -270.56259155]
[35.25935364 -285.53701782]
[35.55517197 -300.54403687]
[37.17616272 -315.46615601]
[40.10964203 -330.18661499]
[44.33264923 -344.59024048]
[49.81213760 -358.56423950]
[56.50521851 -371.99926758]
[64.35951233 -384.79019165]
[73.31353760 -396.83691406]
[83.29722595 -408.04510498]
[94.23243713 -418.32705688]
[106.03358459 -427.60232544]
[118.60830688 -435.79830933]
[131.85818481 -442.85083008]
[145.67951965 -448.70474243]
[159.96415710 -453.31417847]
[174.60026550 -456.64309692]
[189.47332764 -458.66546631]
[204.46691895 -459.36538696]
[219.46369934 -458.73742676]
[234.34628296 -456.78649902]
[248.99821472 -453.52789307]
[263.30480957 -448.98706055]
[277.15408325 -443.19955444]
[290.43765259 -436.21072388]
[303.05157471 -428.07519531]
[314.89712524 -418.85668945]
[325.88156128 -408.62734985]
[335.91894531 -397.46719360]
[344.93069458 -385.46362305]
[352.84628296 -372.71054077]
[359.60379028 -359.30776978]
[365.15029907 -345.36022949]
[369.44238281 -330.97708130]
[372.44650269 -316.27084351]
[374.13909912 -301.35665894]
[374.50695801 -286.35125732]
[373.54718018 -271.37207031]
[371.26727295 -256.53631592]
[367.68508911 -241.96011353]
[362.82867432 -227.75753784]
[356.73602295 -214.03976440]
[349.45483398 -200.91415405]
[341.04208374 -188.48341370]
[331.56359863 -176.84486389]
[321.09359741 -166.08955383]
[309.71398926 -156.30169678]
[297.51385498 -147.55787659]
[284.58868408 -139.92652893]
[271.03961182 -133.46737671]
[256.97271729 -128.23098755]
[242.49804688 -124.25833893]
[227.72892761 -121.58052063]
[212.78092957 -120.21849060]
[197.77105713 -120.18289948]
[182.81677246 -121.47403717]
[168.03512573 -124.08180237]
[164.13415527 -109.59793091]
[160.23318481 -95.11405945]
[169.55119324 -85.54790497]
[172.95127869 -72.52178955]
[169.44137573 -59.41273117]
[159.83534241 -49.67406845]
[146.56727600 -45.92584229]
[142.44264221 -31.50407791]
[138.31799316 -17.08231163]
[134.19335938 -2.66054559]
[140.24903870 15.69899368]
[125.55905914 29.49748611]
[121.88269806 44.03998947]
[118.20633698 58.58248901]
[131.27604675 67.30918121]
[140.57205200 79.98027802]
[144.97271729 95.06691742]
[143.94706726 110.74877167]
[137.61885071 125.13370514]
[126.75161743 136.48605347]
[112.65658569 143.43606567]
[97.03443909 145.14517212]
[93.58357239 159.74282837]
[90.13269806 174.34046936]
[92.30738068 178.56614685]
[93.03263855 182.93334961]
[92.42337036 186.99121094]
[90.72337341 190.36935425]
[88.26834106 192.81166077]
[88.73253632 207.80447388]
[89.19673920 222.79728699]
[89.66094208 237.79011536]
[90.12513733 252.78292847]
[90.58934021 267.77572632]
[91.05354309 282.76855469]
[91.51773834 297.76138306]
[91.98194122 312.75418091]
[92.44614410 327.74700928]
[92.91034698 342.73980713]
[93.37454224 357.73263550]
[93.83874512 372.72543335]
[94.30294800 387.71826172]
[109.13511658 390.28567505]
[123.14673615 395.78652954]
[135.76402283 403.99560547]
[146.47032166 414.57672119]
[154.82722473 427.09658813]
[160.49249268 441.04254150]
[163.23416138 455.84350586]
[162.93994141 470.89334106]
[159.62190247 485.57583618]
[153.41589355 499.28970337]
[144.57606506 511.47341919]
[133.46440125 521.62799072]
[120.53590393 529.33764648]
[106.31999969 534.28668213]
[91.39881897 536.27246094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 187]
[15 186]
[16 185]
[17 184]
[18 183]
[19 182]
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[27 174]
[49 169]
[50 168]
[51 167]
[60 159]
[61 158]
[62 157]
[66 155]
[67 154]
[68 153]
[69 152]
[73 147]
[74 146]
[75 145]
] def

init

% Start Annotations
14 187 0.16 0.2 colorpair
16 185 0.48 0.6 colorpair
17 184 0.32 0.2 colorpair
18 183 0.0 0.2 colorpair
20 181 0.32 0.2 colorpair
23 178 0.16 0.6 colorpair
25 176 0.16 0.2 colorpair
27 174 0.32 0.2 colorpair
50 168 0.16 0.2 colorpair
61 158 0.16 0.2 colorpair
62 157 0.0 0.6 colorpair
66 155 0.0 0.6 colorpair
68 153 0.16 1 colorpair
74 146 0.32 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
14 187 2 gmark
187 cmark
15 186 4 gmark
16 185 1 gmark
16 cmark
185 cmark
17 184 2 gmark
17 cmark
184 cmark
18 183 2 gmark
19 182 4 gmark
20 181 2 gmark
20 cmark
181 cmark
21 180 3 gmark
21 cmark
180 cmark
22 179 4 gmark
23 178 1 gmark
23 cmark
178 cmark
24 177 4 gmark
24 cmark
177 cmark
25 176 2 gmark
25 cmark
176 cmark
26 175 3 gmark
175 cmark
27 174 2 gmark
27 cmark
174 cmark
49 169 5 gmark
49 cmark
169 cmark
50 168 2 gmark
50 cmark
168 cmark
51 167 3 gmark
51 cmark
60 159 3 gmark
60 cmark
159 cmark
61 158 2 gmark
61 cmark
158 cmark
62 157 1 gmark
66 155 1 gmark
67 154 4 gmark
67 cmark
154 cmark
68 cmark
153 cmark
69 152 4 gmark
73 147 3 gmark
147 cmark
74 146 2 gmark
74 cmark
146 cmark
75 145 4 gmark
75 cmark
145 cmark

% End Annotations
showpage
end
%%EOF
