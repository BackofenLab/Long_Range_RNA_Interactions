%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Tue Feb  6 17:11:57 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGU__AGAAAAAGACAGCUUAGGAGAACAAGAGCUGGGA______AUG_____GAAGGCCAUUCUAAAAGGAAAGGGGGGCGGUCCCC__CUCGACGAGAGUCGAAAGCGA____CCCCAA_____________________CUCUCUUCAGGAUUUUUCCUCCUCCUAUACGAAACUUCCCCCUAGACAGAGGGGGGGCGGUUCUUGUUCUCCCUGAGCCACCAUCACCCAGAC\
) } def
/len { sequence length } bind def

/coor [
[90.66433716 547.10253906]
[75.72463226 545.35748291]
[61.33666992 540.97271729]
[47.96295929 534.08917236]
[36.03340530 524.92803955]
[25.93149567 513.78393555]
[17.98196793 501.01504517]
[12.44036388 487.03182983]
[9.48482418 472.28378296]
[9.21035767 457.24502563]
[11.62578583 442.39895630]
[16.65346336 428.22283936]
[24.13177109 415.17239380]
[33.82031250 403.66708374]
[45.40764236 394.07681274]
[58.52127457 386.70980835]
[72.73966217 381.80294800]
[87.60573578 379.51394653]
[88.00335693 364.51922607]
[88.40098572 349.52447510]
[88.79860687 334.52975464]
[89.19622803 319.53503418]
[89.49446106 304.53799438]
[89.69329071 289.53930664]
[89.89212036 274.54061890]
[90.09095001 259.54196167]
[90.28977966 244.54327393]
[90.48860931 229.54458618]
[90.68743896 214.54589844]
[90.88626862 199.54722595]
[91.08509827 184.54853821]
[91.28392792 169.54985046]
[91.48274994 154.55117798]
[91.68157959 139.55249023]
[91.88040924 124.55381012]
[92.07923889 109.55513000]
[85.47914886 123.02504730]
[75.65338898 134.35882568]
[63.25561142 142.80247498]
[49.11058426 147.79428101]
[34.15929794 149.00218201]
[19.39638138 146.34580994]
[5.80393600 140.00187683]
[-5.71380472 130.39242554]
[-14.39062691 118.15670776]
[-19.64930534 104.10870361]
[-21.14000893 89.18296051]
[-18.76357079 74.37240601]
[-12.67807961 60.66230774]
[-3.28837252 48.96472549]
[8.78090191 40.05784225]
[22.72683907 34.53417969]
[37.62168884 32.76120377]
[52.47457504 34.85685730]
[66.29741669 40.68172836]
[78.17064667 49.84832001]
[87.30439758 61.74682999]
[93.09106445 75.58570862]
[95.14565277 90.44064331]
[99.64833832 76.13240051]
[104.15101624 61.82415390]
[100.91306305 46.33783340]
[112.11399841 36.52008057]
[116.61668396 22.21183586]
[121.11936951 7.90359306]
[125.62205505 -6.40465021]
[114.05835724 -14.84996700]
[105.67859650 -26.43480873]
[101.29039001 -40.02009201]
[101.30966187 -54.27506638]
[105.72131348 -67.80766296]
[114.08192444 -79.30044556]
[125.56433868 -87.63887024]
[139.03944397 -92.01934052]
[153.18722534 -92.02665710]
[157.87918091 -106.27396393]
[162.57112122 -120.52126312]
[167.26307678 -134.76856995]
[171.95503235 -149.01586914]
[176.64697266 -163.26316833]
[181.33892822 -177.51046753]
[167.40966797 -183.08946228]
[153.85820007 -189.53208923]
[140.73800659 -196.81289673]
[128.10089111 -204.90315247]
[115.99668884 -213.77095032]
[104.47318268 -223.38128662]
[93.57586670 -233.69622803]
[83.34773254 -244.67504883]
[73.82914734 -256.27444458]
[65.05768585 -268.44863892]
[57.06795502 -281.14956665]
[49.89149094 -294.32711792]
[43.55661774 -307.92929077]
[38.08833694 -321.90237427]
[33.50822449 -336.19125366]
[29.83435822 -350.73953247]
[27.08123779 -365.48977661]
[25.25972939 -380.38378906]
[24.37702179 -395.36279297]
[24.43659973 -410.36764526]
[25.43822289 -425.33917236]
[27.37794495 -440.21823120]
[30.24810600 -454.94616699]
[34.03738022 -469.46481323]
[38.73081207 -483.71685791]
[44.30988312 -497.64608765]
[50.75256729 -511.19750977]
[58.03344345 -524.31768799]
[66.12377930 -536.95477295]
[74.99163818 -549.05889893]
[84.60202789 -560.58233643]
[94.91702271 -571.47961426]
[105.89590454 -581.70770264]
[117.49535370 -591.22619629]
[129.66958618 -599.99761963]
[142.37055969 -607.98730469]
[155.54815674 -615.16369629]
[169.15034485 -621.49847412]
[183.12347412 -626.96667480]
[197.41236877 -631.54675293]
[211.96066284 -635.22052002]
[226.71092224 -637.97357178]
[241.60494995 -639.79498291]
[256.58395386 -640.67761230]
[271.58880615 -640.61798096]
[286.56033325 -639.61627197]
[301.43939209 -637.67645264]
[316.16729736 -634.80621338]
[330.68591309 -631.01690674]
[344.93795776 -626.32336426]
[358.86715698 -620.74426270]
[372.41854858 -614.30145264]
[385.53866577 -607.02050781]
[398.17568970 -598.93011475]
[410.27981567 -590.06219482]
[421.80319214 -580.45178223]
[432.70040894 -570.13671875]
[442.92843628 -559.15777588]
[452.44689941 -547.55828857]
[461.21823120 -535.38397217]
[469.20782471 -522.68298340]
[476.38415527 -509.50534058]
[482.71890259 -495.90310669]
[488.18704224 -481.92996216]
[492.76699829 -467.64105225]
[496.44070435 -453.09274292]
[499.19366455 -438.34246826]
[501.01501465 -423.44842529]
[501.89758301 -408.46942139]
[501.83782959 -393.46456909]
[500.83605957 -378.49304199]
[498.89617920 -363.61398315]
[496.02587891 -348.88610840]
[492.23645020 -334.36749268]
[487.54287720 -320.11550903]
[481.96365356 -306.18634033]
[475.52081299 -292.63494873]
[468.23980713 -279.51489258]
[460.14935303 -266.87789917]
[451.28134155 -254.77381897]
[441.67083740 -243.25047302]
[431.35574341 -232.35331726]
[420.37673950 -222.12535095]
[408.77719116 -212.60694885]
[396.60287476 -203.83567810]
[383.90182495 -195.84614563]
[370.72415161 -188.66989136]
[357.12188721 -182.33523560]
[343.14871216 -176.86717224]
[328.85977173 -172.28727722]
[314.31143188 -168.61364746]
[299.56112671 -165.86074829]
[284.66711426 -164.03947449]
[269.68807983 -163.15701294]
[254.68322754 -163.21681213]
[239.71173096 -164.21867371]
[224.83268738 -166.15863037]
[210.10481262 -169.02902222]
[195.58622742 -172.81852722]
[190.89427185 -158.57122803]
[186.20233154 -144.32391357]
[181.51037598 -130.07661438]
[176.81843567 -115.82931519]
[172.12648010 -101.58201599]
[167.43453979 -87.33470917]
[179.92994690 -77.74246979]
[188.39710999 -64.42705536]
[191.79557800 -48.99035645]
[189.69602966 -33.29695511]
[182.33435059 -19.24890327]
[170.58535767 -8.55519104]
[155.85879517 -2.52384758]
[139.93029785 -1.90196526]
[135.42761230 12.40627766]
[130.92492676 26.71452141]
[126.42224121 41.02276611]
[129.98226929 55.48566818]
[118.45926666 66.32684326]
[113.95658112 80.63508606]
[109.45389557 94.94332886]
[107.07792664 109.75395966]
[106.87909698 124.75263977]
[106.68026733 139.75132751]
[106.48143768 154.75000000]
[106.28260803 169.74868774]
[106.08377838 184.74736023]
[105.88494873 199.74604797]
[105.68611908 214.74473572]
[105.48728943 229.74340820]
[105.28845978 244.74209595]
[105.08963013 259.74078369]
[104.89080048 274.73947144]
[104.69197083 289.73812866]
[104.49314117 304.73681641]
[107.50426483 313.34133911]
[104.19095612 319.93264771]
[103.79333496 334.92736816]
[103.39571381 349.92211914]
[102.99808502 364.91683960]
[102.60046387 379.91156006]
[117.32433319 382.98522949]
[131.26268005 388.63873291]
[143.96745300 396.69036865]
[155.03022766 406.88128662]
[164.09539795 418.88388062]
[170.87155151 432.31234741]
[175.14086914 446.73498535]
[176.76608276 461.68820190]
[175.69499207 476.69128418]
[171.96199036 491.26196289]
[165.68708801 504.93182373]
[157.07200623 517.26147461]
[146.39369202 527.85455322]
[133.99537659 536.37054443]
[120.27565002 542.53564453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 221]
[19 220]
[20 219]
[21 218]
[22 217]
[23 215]
[24 214]
[25 213]
[26 212]
[27 211]
[28 210]
[29 209]
[30 208]
[31 207]
[32 206]
[33 205]
[34 204]
[35 203]
[36 202]
[59 201]
[60 200]
[61 199]
[63 197]
[64 196]
[65 195]
[66 194]
[75 186]
[76 185]
[77 184]
[78 183]
[79 182]
[80 181]
[81 180]
] def

init

% Start Annotations
18 221 0.0 0.2 colorpair
23 215 0.16 0.2 colorpair
31 207 0.16 0.6 colorpair
32 206 0.32 0.2 colorpair
34 204 0.16 0.2 colorpair
36 202 0.48 0.6 colorpair
60 200 0.48 0.2 colorpair
64 196 0.32 0.6 colorpair
78 183 0.16 0.6 colorpair
79 182 0.16 0.6 colorpair
81 180 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
18 221 2 gmark
19 220 4 gmark
19 cmark
220 cmark
20 219 5 gmark
21 218 5 gmark
22 217 5 gmark
23 215 2 gmark
23 cmark
215 cmark
24 214 4 gmark
25 213 3 gmark
25 cmark
213 cmark
26 212 5 gmark
27 211 3 gmark
27 cmark
28 210 3 gmark
28 cmark
210 cmark
29 209 5 gmark
30 208 4 gmark
30 cmark
31 207 1 gmark
31 cmark
32 206 2 gmark
32 cmark
206 cmark
33 205 4 gmark
34 204 2 gmark
34 cmark
35 203 3 gmark
35 cmark
203 cmark
36 202 1 gmark
36 cmark
202 cmark
59 201 4 gmark
59 cmark
201 cmark
60 200 2 gmark
60 cmark
200 cmark
61 199 3 gmark
61 cmark
199 cmark
63 197 4 gmark
63 cmark
197 cmark
64 196 1 gmark
64 cmark
196 cmark
65 195 3 gmark
65 cmark
66 194 5 gmark
66 cmark
75 186 5 gmark
76 185 4 gmark
76 cmark
185 cmark
77 184 5 gmark
78 183 1 gmark
78 cmark
183 cmark
79 182 1 gmark
79 cmark
182 cmark
80 181 5 gmark
81 180 2 gmark
81 cmark
180 cmark

% End Annotations
showpage
end
%%EOF
