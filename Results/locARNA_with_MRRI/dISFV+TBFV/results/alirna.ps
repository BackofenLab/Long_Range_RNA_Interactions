%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Jan 25 16:57:15 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGACAGCUUA_GGAGAACAAGAG_UGGCGAUGGUCAGGAAGACC_UCCUAAAAGGAAAGGGGGGCGGUCCCCCUCGACGAGAGACGAAAGAGACCGCAA_____________C_UAUUACCUC_UCCUAUACAAAAUUUCCCCCUGGAA___ACAGGGGGGGCGGUUCUUGUUCUC_______________\
) } def
/len { sequence length } bind def

/coor [
[80.49003601 466.32418823]
[68.85462952 475.80151367]
[56.55846024 484.40420532]
[43.66712952 492.08639526]
[30.24942589 498.80709839]
[16.37693596 504.53042603]
[2.12367487 509.22583008]
[-12.43430710 512.86828613]
[-27.21933556 515.43835449]
[-42.15252686 516.92236328]
[-57.15420532 517.31231689]
[-72.14432526 516.60620117]
[-87.04291534 514.80773926]
[-101.77047729 511.92651367]
[-116.24843597 507.97796631]
[-130.39953613 502.98309326]
[-144.14830017 496.96859741]
[-157.42134094 489.96655273]
[-170.14784241 482.01428223]
[-182.25991821 473.15426636]
[-193.69294739 463.43377686]
[-204.38592529 452.90463257]
[-214.28178406 441.62304688]
[-223.32772827 429.64916992]
[-231.47550964 417.04696655]
[-238.68165588 403.88360596]
[-244.90769958 390.22933960]
[-250.12043762 376.15704346]
[-254.29203796 361.74176025]
[-257.40026855 347.06042480]
[-259.42852783 332.19137573]
[-260.36599731 317.21395874]
[-260.20770264 302.20803833]
[-258.95443726 287.25372314]
[-256.61291504 272.43078613]
[-253.19563293 257.81829834]
[-248.72082520 243.49424744]
[-243.21235657 229.53504944]
[-236.69961548 216.01518250]
[-229.21736145 203.00679016]
[-220.80551147 190.57926941]
[-211.50895691 178.79893494]
[-201.37727356 167.72863770]
[-190.46453857 157.42744446]
[-178.82897949 147.95030212]
[-166.53266907 139.34779358]
[-153.64120483 131.66581726]
[-140.22338867 124.94535828]
[-126.35080719 119.22225952]
[-112.09747314 114.52707672]
[-97.53942871 110.88484955]
[-82.75435638 108.31501007]
[-67.82114410 106.83127594]
[-52.81946182 106.44155884]
[-37.82934952 107.14793396]
[-22.93078995 108.94664764]
[-8.20327568 111.82808685]
[6.27461720 115.77689362]
[20.42564201 120.77198029]
[34.17429352 126.78670502]
[47.44721985 133.78898621]
[60.17359924 141.74143982]
[69.02963257 129.63481140]
[77.88567352 117.52817535]
[86.74170685 105.42153931]
[88.43901062 91.54310608]
[101.15165710 85.72242737]
[110.00769043 73.61579132]
[111.91049957 57.90942764]
[125.66955566 52.20524979]
[134.52558899 40.09861374]
[143.38162231 27.99197960]
[152.23767090 15.88534260]
[161.09370422 3.77870703]
[169.94973755 -8.32792854]
[178.80577087 -20.43456459]
[187.66180420 -32.54120255]
[176.28121948 -42.32467270]
[165.70332336 -52.97089767]
[155.99333191 -64.41424561]
[147.21110535 -76.58415222]
[139.41081238 -89.40560150]
[132.64051819 -102.79953003]
[126.94199371 -116.68335724]
[122.35034180 -130.97149658]
[118.89389038 -145.57585144]
[116.59394836 -160.40637207]
[115.46469116 -175.37162781]
[115.51308441 -190.37934875]
[116.73882294 -205.33700562]
[119.13436127 -220.15238953]
[122.68492126 -234.73414612]
[127.36861420 -248.99237061]
[133.15657043 -262.83917236]
[140.01309204 -276.18914795]
[147.89590454 -288.96002197]
[156.75642395 -301.07305908]
[166.54000854 -312.45355225]
[177.18635559 -323.03134155]
[188.62979126 -332.74121094]
[200.79978943 -341.52331543]
[213.62132263 -349.32345581]
[227.01531982 -356.09362793]
[240.89920044 -361.79202271]
[255.18739319 -366.38351440]
[269.79177856 -369.83981323]
[284.62231445 -372.13961792]
[299.58758545 -373.26870728]
[314.59530640 -373.22015381]
[329.55294800 -371.99426270]
[344.36831665 -369.59857178]
[358.95004272 -366.04788208]
[373.20822144 -361.36404419]
[387.05496216 -355.57592773]
[400.40487671 -348.71926880]
[413.17565918 -340.83633423]
[425.28860474 -331.97567749]
[436.66897583 -322.19198608]
[447.24667358 -311.54553223]
[456.95642090 -300.10198975]
[465.73840332 -287.93191528]
[473.53842163 -275.11032104]
[480.30844116 -261.71624756]
[486.00668335 -247.83229065]
[490.59805298 -233.54406738]
[494.05419922 -218.93963623]
[496.35385132 -204.10906982]
[497.48278809 -189.14379883]
[497.43408203 -174.13607788]
[496.20803833 -159.17843628]
[493.81219482 -144.36309814]
[490.26135254 -129.78141785]
[485.57736206 -115.52328491]
[479.78912354 -101.67661285]
[472.93234253 -88.32675934]
[465.04925537 -75.55604553]
[456.18847656 -63.44320679]
[446.40466309 -52.06291962]
[435.75811768 -41.48534393]
[424.31448364 -31.77570534]
[412.14428711 -22.99386024]
[399.32260132 -15.19395351]
[385.92846680 -8.42407703]
[372.04446411 -2.72596812]
[357.75619507 1.86524141]
[343.15173340 5.32124472]
[328.32113647 7.62073469]
[313.35586548 8.74953365]
[298.34814453 8.70068169]
[283.39050293 7.47448063]
[268.57519531 5.07849026]
[253.99356079 1.52748311]
[239.73547363 -3.15664768]
[225.88885498 -8.94502258]
[212.53907776 -15.80195332]
[199.76844788 -23.68516541]
[190.91241455 -11.57852936]
[182.05636597 0.52810663]
[173.20033264 12.63474274]
[164.34429932 24.74137878]
[155.48826599 36.84801483]
[146.63223267 48.95465088]
[137.77619934 61.06128693]
[136.50682068 75.90170288]
[122.11432648 82.47182465]
[113.25829315 94.57846069]
[111.56098938 108.45689392]
[98.84834290 114.27757263]
[89.99230957 126.38420868]
[81.13626862 138.49084473]
[72.28023529 150.59747314]
[83.71342468 160.31781006]
[94.40656281 170.84677124]
[104.30261230 182.12820435]
[113.34876251 194.10189819]
[121.49674988 206.70399475]
[128.70310974 219.86723328]
[134.92936707 233.52139282]
[140.14233398 247.59361267]
[144.31417847 262.00881958]
[147.42265320 276.69009399]
[149.45115662 291.55911255]
[150.38887024 306.53652954]
[150.23080444 321.54244995]
[148.97779846 336.49676514]
[146.63652039 351.31976318]
[143.21948242 365.93231201]
[138.74490356 380.25640869]
[133.23666382 394.21569824]
[126.72415161 407.73568726]
[119.24211121 420.74420166]
[110.83046722 433.17184448]
[101.53409576 444.95233154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 171]
[63 170]
[64 169]
[65 168]
[67 166]
[68 165]
[70 163]
[71 162]
[72 161]
[73 160]
[74 159]
[75 158]
[76 157]
[77 156]
] def

init

% Start Annotations
63 170 0.32 0.2 colorpair
65 168 0.32 0.2 colorpair
68 165 0.16 0.6 colorpair
74 159 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
62 171 5 gmark
63 170 2 gmark
63 cmark
170 cmark
64 169 3 gmark
169 cmark
65 168 2 gmark
65 cmark
168 cmark
67 166 4 gmark
67 cmark
166 cmark
68 165 1 gmark
165 cmark
70 163 3 gmark
70 cmark
163 cmark
71 162 5 gmark
72 161 3 gmark
72 cmark
73 160 3 gmark
73 cmark
160 cmark
74 159 1 gmark
74 cmark
75 158 3 gmark
75 cmark
158 cmark
76 157 5 gmark
76 cmark
157 cmark
77 156 4 gmark
77 cmark
156 cmark

% End Annotations
showpage
end
%%EOF
