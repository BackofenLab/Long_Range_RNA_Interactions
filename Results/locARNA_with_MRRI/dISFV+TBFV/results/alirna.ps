%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Tue Feb  6 12:14:34 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGU__AGAAAAAGACAGCUUAGGAGAACAAGAGCUGGGA______AUG_____GAAGGCCAUUCUAAAAGGAAAGGGGGGCGGUCCCC__CUCGACGAGAGUCGAAAGCGA____CCCCAA____________________UCUCUUCAGGAAUUUUCCUCCUCCUAUACCAA_ACUUCCCCCUAGACAGAGGGGGGGCGGUUCUUGUUCUCCCUGAGCCACCAUCACCCAGAC\
) } def
/len { sequence length } bind def

/coor [
[90.62333679 547.11157227]
[75.68383026 545.36486816]
[61.29636383 540.97845459]
[47.92342377 534.09338379]
[35.99489975 524.93096924]
[25.89424133 513.78570557]
[17.94614792 501.01593018]
[12.40611553 487.03207397]
[9.45223331 472.28372192]
[9.17945576 457.24490356]
[11.59655190 442.39913940]
[16.62582207 428.22357178]
[24.10559654 415.17395020]
[33.79542923 403.66973877]
[45.38383484 394.08074951]
[58.49829483 386.71524048]
[72.71723175 381.80996704]
[87.58356476 379.52264404]
[87.98287201 364.52795410]
[88.38217926 349.53326416]
[88.78148651 334.53860474]
[89.18079376 319.54391479]
[89.48029327 304.54690552]
[89.67996216 289.54821777]
[89.87963867 274.54956055]
[90.07930756 259.55087280]
[90.27897644 244.55221558]
[90.47865295 229.55354309]
[90.67832184 214.55487061]
[90.87799072 199.55619812]
[91.07766724 184.55752563]
[91.27733612 169.55885315]
[91.47700500 154.56018066]
[91.67668152 139.56152344]
[91.87635040 124.56284332]
[92.07602692 109.56417084]
[85.46490479 123.02868652]
[75.63002014 134.35453796]
[63.22556305 142.78837585]
[49.07665253 147.76916504]
[34.12444305 148.96562195]
[19.36353111 146.29814148]
[5.77577591 139.94418335]
[-5.73499060 130.32637024]
[-14.40309620 118.08447266]
[-19.65195656 104.03280640]
[-21.13242912 89.10604095]
[-18.74603271 74.29708862]
[-12.65151024 60.59100342]
[-3.25425339 48.89948654]
[8.82065105 40.00023270]
[22.77000427 34.48520660]
[37.66592407 32.72124863]
[52.51756668 34.82570267]
[66.33702850 40.65857697]
[78.20507050 49.83188629]
[87.33225250 61.73543930]
[93.11145782 75.57743073]
[95.15823364 90.43365479]
[99.67939758 76.13124084]
[104.20056152 61.82882690]
[100.98261261 46.33833313]
[112.19622803 36.53506088]
[116.71739197 22.23264503]
[121.23855591 7.93023014]
[125.75972748 -6.37218475]
[114.20671844 -14.83264828]
[105.84185791 -26.42863464]
[101.47131348 -40.01993942]
[101.50931549 -54.27518463]
[105.93891144 -67.80223846]
[114.31494141 -79.28417969]
[125.80870819 -87.60747528]
[139.28996277 -91.96999359]
[153.43804932 -91.95828247]
[158.14920044 -106.19924927]
[162.86035156 -120.44021606]
[167.57150269 -134.68118286]
[172.28265381 -148.92213440]
[176.99380493 -163.16310120]
[181.70495605 -177.40406799]
[167.78668213 -183.01071167]
[154.25204468 -189.48881531]
[141.15550232 -196.81228638]
[128.54983521 -204.95166016]
[116.48576355 -213.87416077]
[105.01188660 -223.54383850]
[94.17440796 -233.92176819]
[84.01695251 -244.96617126]
[74.58043671 -256.63256836]
[65.90283966 -268.87396240]
[58.01912308 -281.64108276]
[50.96102142 -294.88250732]
[44.75695419 -308.54495239]
[39.43190765 -322.57336426]
[35.00732040 -336.91128540]
[31.50101280 -351.50094604]
[28.92710114 -366.28363037]
[27.29594994 -381.19976807]
[26.61412621 -396.18936157]
[26.88437843 -411.19201660]
[28.10561562 -426.14730835]
[30.27292061 -440.99505615]
[33.37756729 -455.67544556]
[37.40705490 -470.12936401]
[42.34515762 -484.29861450]
[48.17198944 -498.12612915]
[54.86408997 -511.55627441]
[62.39450836 -524.53491211]
[70.73292542 -537.00982666]
[79.84577179 -548.93072510]
[89.69633484 -560.24969482]
[100.24497223 -570.92114258]
[111.44918823 -580.90197754]
[123.26387787 -590.15216064]
[135.64146423 -598.63439941]
[148.53210449 -606.31445312]
[161.88389587 -613.16149902]
[175.64308167 -619.14794922]
[189.75424194 -624.24969482]
[204.16056824 -628.44616699]
[218.80404663 -631.72045898]
[233.62571716 -634.05944824]
[248.56588745 -635.45361328]
[263.56439209 -635.89746094]
[278.56088257 -635.38916016]
[293.49490356 -633.93072510]
[308.30636597 -631.52801514]
[322.93563843 -628.19073486]
[337.32379150 -623.93237305]
[351.41287231 -618.77001953]
[365.14617920 -612.72442627]
[378.46841431 -605.82000732]
[391.32589722 -598.08459473]
[403.66690063 -589.54919434]
[415.44168091 -580.24829102]
[426.60287476 -570.21936035]
[437.10552979 -559.50268555]
[446.90731812 -548.14141846]
[455.96881104 -536.18145752]
[464.25350952 -523.67077637]
[471.72802734 -510.65988159]
[478.36230469 -497.20108032]
[484.12963867 -483.34863281]
[489.00674438 -469.15826416]
[492.97402954 -454.68716431]
[496.01550293 -439.99356079]
[498.11895752 -425.13662720]
[499.27584839 -410.17620850]
[499.48159790 -395.17254639]
[498.73529053 -380.18603516]
[497.04000854 -365.27700806]
[494.40255737 -350.50555420]
[490.83352661 -335.93109131]
[486.34732056 -321.61236572]
[480.96200562 -307.60696411]
[474.69921875 -293.97134399]
[467.58425903 -280.76037598]
[459.64569092 -268.02728271]
[450.91552734 -255.82331848]
[441.42892456 -244.19761658]
[431.22409058 -233.19700623]
[420.34207153 -222.86576843]
[408.82672119 -213.24552917]
[396.72439575 -204.37500000]
[384.08380127 -196.28991699]
[370.95590210 -189.02282715]
[357.39352417 -182.60299683]
[343.45126343 -177.05625916]
[329.18530273 -172.40498352]
[314.65304565 -168.66786194]
[299.91302490 -165.85997009]
[285.02459717 -163.99261475]
[270.04769897 -163.07328796]
[255.04264832 -163.10571289]
[240.06985474 -164.08975220]
[225.18963623 -166.02145386]
[210.46188354 -168.89303589]
[195.94592285 -172.69291687]
[191.23477173 -158.45195007]
[186.52362061 -144.21099854]
[181.81246948 -129.97003174]
[177.10131836 -115.72906494]
[172.39016724 -101.48809814]
[167.67901611 -87.24713135]
[180.16130066 -77.63828278]
[188.61050415 -64.31179047]
[191.98837280 -48.87085724]
[189.86810303 -33.18052673]
[182.48806763 -19.14243126]
[170.72528076 -8.46430302]
[155.99114990 -2.45225382]
[140.06213379 -1.85101902]
[135.54096985 12.45139503]
[131.01980591 26.75381088]
[126.49864197 41.05622482]
[130.03997803 55.52371216]
[118.50297546 66.34999084]
[113.98181152 80.65240479]
[109.46064758 94.95481873]
[107.07469177 109.76384735]
[106.87502289 124.76251984]
[106.67535400 139.76118469]
[106.47567749 154.75985718]
[106.27600861 169.75852966]
[106.07633972 184.75720215]
[105.87666321 199.75587463]
[105.67699432 214.75454712]
[105.47731781 229.75321960]
[105.27764893 244.75189209]
[105.07798004 259.75054932]
[104.87830353 274.74923706]
[104.67863464 289.74789429]
[104.47896576 304.74658203]
[107.48975372 313.35186768]
[104.17548370 319.94320679]
[103.77616882 334.93789673]
[103.37686157 349.93258667]
[102.97755432 364.92727661]
[102.57824707 379.92196655]
[117.30177307 382.99725342]
[131.23948669 388.65234375]
[143.94335938 396.70538330]
[155.00498962 406.89755249]
[164.06881714 418.90115356]
[170.84346008 432.33038330]
[175.11114502 446.75350952]
[176.73468018 461.70690918]
[175.66189575 476.70986938]
[171.92726135 491.28012085]
[165.65083313 504.94927979]
[157.03436279 517.27795410]
[146.35485840 527.86981201]
[133.95558167 536.38439941]
[120.23516083 542.54797363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 220]
[19 219]
[20 218]
[21 217]
[22 216]
[23 214]
[24 213]
[25 212]
[26 211]
[27 210]
[28 209]
[29 208]
[30 207]
[31 206]
[32 205]
[33 204]
[34 203]
[35 202]
[36 201]
[59 200]
[60 199]
[61 198]
[63 196]
[64 195]
[65 194]
[66 193]
[75 185]
[76 184]
[77 183]
[78 182]
[79 181]
[80 180]
[81 179]
] def

init

% Start Annotations
18 220 0.0 0.2 colorpair
23 214 0.16 0.2 colorpair
31 206 0.16 0.6 colorpair
32 205 0.32 0.2 colorpair
34 203 0.16 0.2 colorpair
36 201 0.48 0.6 colorpair
60 199 0.48 0.2 colorpair
64 195 0.32 0.6 colorpair
78 182 0.16 0.6 colorpair
79 181 0.16 0.6 colorpair
81 179 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
18 220 2 gmark
19 219 4 gmark
19 cmark
219 cmark
20 218 5 gmark
21 217 5 gmark
22 216 5 gmark
23 214 2 gmark
23 cmark
214 cmark
24 213 4 gmark
25 212 3 gmark
25 cmark
212 cmark
26 211 5 gmark
27 210 3 gmark
27 cmark
28 209 3 gmark
28 cmark
209 cmark
29 208 5 gmark
30 207 4 gmark
30 cmark
31 206 1 gmark
31 cmark
32 205 2 gmark
32 cmark
205 cmark
33 204 4 gmark
34 203 2 gmark
34 cmark
35 202 3 gmark
35 cmark
202 cmark
36 201 1 gmark
36 cmark
201 cmark
59 200 4 gmark
59 cmark
200 cmark
60 199 2 gmark
60 cmark
199 cmark
61 198 3 gmark
61 cmark
198 cmark
63 196 4 gmark
63 cmark
196 cmark
64 195 1 gmark
64 cmark
195 cmark
65 194 3 gmark
65 cmark
66 193 5 gmark
66 cmark
75 185 5 gmark
76 184 4 gmark
76 cmark
184 cmark
77 183 5 gmark
78 182 1 gmark
78 cmark
182 cmark
79 181 1 gmark
79 cmark
181 cmark
80 180 5 gmark
81 179 2 gmark
81 cmark
179 cmark

% End Annotations
showpage
end
%%EOF
