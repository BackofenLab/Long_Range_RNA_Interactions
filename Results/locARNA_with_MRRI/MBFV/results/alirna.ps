%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Fri Jan 26 12:45:39 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_GCAAGUUGUUUUUAGAGAGGAGGAUUAUC_____AUGUCU___AAAAAACCAGGAAGGCCC___GGAAGAAACCGGGCUGUCAAUAUGCUAAAACGCGGAGCAACCCGCG_____________CA__AGCACAAA_A_AAACAGCAUAUUGACACCUGGGAA__AGACCAGGGGAUCUUCUGCUUUC__________________\
) } def
/len { sequence length } bind def

/coor [
[79.54636383 555.83618164]
[66.20719910 562.71252441]
[52.38618088 568.56036377]
[38.16248703 573.34613037]
[23.61758041 577.04248047]
[8.83477879 579.62823486]
[-6.10124397 581.08862305]
[-21.10493469 581.41516113]
[-36.09035110 580.60607910]
[-50.97166061 578.66595459]
[-65.66362000 575.60595703]
[-80.08207703 571.44354248]
[-94.14443970 566.20263672]
[-107.77016449 559.91320801]
[-120.88119507 552.61126709]
[-133.40243530 544.33868408]
[-145.26217651 535.14276123]
[-156.39247131 525.07629395]
[-166.72956848 514.19689941]
[-176.21424866 502.56683350]
[-184.79220581 490.25277710]
[-192.41427612 477.32522583]
[-199.03683472 463.85827637]
[-204.62193298 449.92901611]
[-209.13755798 435.61724854]
[-212.55787659 421.00497437]
[-214.86328125 406.17584229]
[-216.04057312 391.21487427]
[-216.08300781 376.20767212]
[-214.99034119 361.24026489]
[-212.76882935 346.39834595]
[-209.43118286 331.76696777]
[-204.99655151 317.42990112]
[-199.49032593 303.46929932]
[-192.94403076 289.96508789]
[-185.39517212 276.99465942]
[-176.88697815 264.63229370]
[-167.46821594 252.94879150]
[-157.19281006 242.01107788]
[-146.11961365 231.88182068]
[-134.31207275 222.61903381]
[-121.83780670 214.27577209]
[-108.76827240 206.89981079]
[-95.17833710 200.53341675]
[-81.14582825 195.21305847]
[-66.75114441 190.96920776]
[-52.07672119 187.82615662]
[-37.20661926 185.80192566]
[-22.22601700 184.90811157]
[-7.22071981 185.14982605]
[7.72332191 186.52568054]
[22.52050972 189.02780151]
[37.08608627 192.64186096]
[51.33661652 197.34715271]
[57.10314560 183.49987793]
[62.86967850 169.65260315]
[54.96657181 157.05581665]
[56.00872040 142.04322815]
[65.80554199 130.38664246]
[80.76045227 126.69114685]
[86.52698517 112.84387207]
[82.16284180 105.32192993]
[81.69189453 96.63840485]
[85.21692657 88.68859100]
[91.96856689 83.20764160]
[100.47316742 81.39184570]
[106.86397552 67.82138062]
[95.32425690 55.51714325]
[89.40724945 39.75929642]
[89.99388885 22.97417641]
[96.96599579 7.73473310]
[109.22874451 -3.63386583]
[124.88249207 -9.40899181]
[141.51702881 -8.73153782]
[147.49304199 -22.48970795]
[153.46905518 -36.24787521]
[159.44506836 -50.00604630]
[165.42108154 -63.76421738]
[171.39710999 -77.52238464]
[171.94622803 -86.64351654]
[177.56962585 -91.44291687]
[183.75375366 -105.10881042]
[189.93788147 -118.77470398]
[196.12200928 -132.44059753]
[202.30612183 -146.10649109]
[208.49024963 -159.77238464]
[214.67437744 -173.43826294]
[220.85850525 -187.10415649]
[227.04263306 -200.77005005]
[233.22674561 -214.43594360]
[239.41087341 -228.10183716]
[226.54006958 -235.83869934]
[214.65452576 -245.01748657]
[203.91494751 -255.51406860]
[194.46659851 -267.18649292]
[186.43725586 -279.87686157]
[179.93550110 -293.41363525]
[175.04927063 -307.61367798]
[171.84463501 -322.28497314]
[170.36494446 -337.22909546]
[170.63018799 -352.24395752]
[172.63681030 -367.12649536]
[176.35765076 -381.67544556]
[181.74240112 -395.69403076]
[188.71823120 -408.99270630]
[197.19079590 -421.39157104]
[207.04553223 -432.72299194]
[218.14915466 -442.83367920]
[230.35150146 -451.58691406]
[243.48753357 -458.86434937]
[257.37963867 -464.56753540]
[271.83990479 -468.61932373]
[286.67279053 -470.96496582]
[301.67770386 -471.57272339]
[316.65170288 -470.43435669]
[331.39227295 -467.56530762]
[345.70010376 -463.00430298]
[359.38168335 -456.81307983]
[372.25195312 -449.07537842]
[384.13690186 -439.89578247]
[394.87576294 -429.39849854]
[404.32333374 -417.72543335]
[412.35183716 -405.03451538]
[418.85269165 -391.49731445]
[423.73797607 -377.29696655]
[426.94161987 -362.62545776]
[428.42031860 -347.68121338]
[428.15408325 -332.66638184]
[426.14645386 -317.78396606]
[422.42465210 -303.23526001]
[417.03897095 -289.21704102]
[410.06225586 -275.91885376]
[401.58883667 -263.52053833]
[391.73336792 -252.18978882]
[380.62905884 -242.07983398]
[368.42614746 -233.32739258]
[355.28961182 -226.05084229]
[341.39712524 -220.34860229]
[326.93658447 -216.29776001]
[312.10354614 -213.95310974]
[297.09860229 -213.34635925]
[282.12469482 -214.48571777]
[267.38427734 -217.35577393]
[253.07676697 -221.91770935]
[246.89263916 -208.25181580]
[240.70851135 -194.58592224]
[234.52439880 -180.92004395]
[228.34027100 -167.25415039]
[222.15614319 -153.58825684]
[215.97201538 -139.92236328]
[209.78788757 -126.25646973]
[203.60377502 -112.59057617]
[197.41964722 -98.92468262]
[191.23551941 -85.25879669]
[185.15527344 -71.54637146]
[179.17926025 -57.78820038]
[173.20324707 -44.03002930]
[167.22721863 -30.27186012]
[161.25120544 -16.51369095]
[155.27519226 -2.75552130]
[165.08203125 6.17232323]
[171.67123413 17.70781708]
[174.38911438 30.73487282]
[172.95733643 43.98809814]
[167.50129700 56.17570114]
[158.53938293 66.10540009]
[146.93367004 72.80108643]
[133.80700684 75.59871674]
[120.43444824 74.21218872]
[114.04364014 87.78265381]
[117.01635742 107.54524994]
[100.37425995 118.61040497]
[94.60773468 132.45768738]
[102.51924896 145.67562866]
[101.14665222 160.84036255]
[91.22505188 172.15522766]
[76.71695709 175.41912842]
[70.95042419 189.26640320]
[65.18389130 203.11367798]
[78.56198120 209.91400146]
[91.38744354 217.70660400]
[103.58683014 226.44688416]
[115.09025574 236.08474731]
[125.83184052 246.56501770]
[135.75003052 257.82763672]
[144.78805542 269.80810547]
[152.89410400 282.43780518]
[160.02177429 295.64437866]
[166.13021851 309.35220337]
[171.18446350 323.48272705]
[175.15554810 337.95504761]
[178.02072144 352.68624878]
[179.76359558 367.59194946]
[180.37417603 382.58676147]
[179.84895325 397.58480835]
[178.19093323 412.50018311]
[175.40963745 427.24743652]
[171.52098083 441.74212646]
[166.54724121 455.90121460]
[160.51690674 469.64355469]
[153.46452332 482.89050293]
[145.43048096 495.56613159]
[136.46080017 507.59783936]
[126.60686493 518.91674805]
[115.92510223 529.45794678]
[104.47671509 539.16113281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 179]
[55 178]
[56 177]
[60 173]
[61 172]
[66 170]
[67 169]
[74 160]
[75 159]
[76 158]
[77 157]
[78 156]
[79 155]
[81 154]
[82 153]
[83 152]
[84 151]
[85 150]
[86 149]
[87 148]
[88 147]
[89 146]
[90 145]
[91 144]
] def

init

% Start Annotations
54 179 0.32 0.6 colorpair
66 170 0.16 0.6 colorpair
75 159 0.0 0.6 colorpair
82 153 0.0 1 colorpair
83 152 0.16 1 colorpair
84 151 0.0 1 colorpair
85 150 0.0 1 colorpair
86 149 0.0 1 colorpair
87 148 0.0 1 colorpair
88 147 0.0 1 colorpair
89 146 0.0 1 colorpair
90 145 0.16 0.6 colorpair
91 144 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
54 179 1 gmark
54 cmark
179 cmark
55 178 6 gmark
178 cmark
56 177 10 gmark
56 cmark
177 cmark
60 173 9 gmark
60 cmark
173 cmark
61 172 5 gmark
66 170 1 gmark
170 cmark
67 169 9 gmark
74 160 6 gmark
74 cmark
75 159 1 gmark
76 158 5 gmark
76 cmark
158 cmark
77 157 3 gmark
78 156 9 gmark
79 155 10 gmark
79 cmark
155 cmark
81 154 7 gmark
83 cmark
90 145 1 gmark
90 cmark
145 cmark
91 144 1 gmark

% End Annotations
showpage
end
%%EOF
