%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.5.1
%%CreationDate: Tue Jan 16 16:53:08 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______UUUGAAC__UUUUUUAGCAGAGAUUAUU__CAAUGUCU___AAAAAACCAGGAAGGCCC___GGAAGAAACCGGGCUGUCAAUAUGCUAAAACGCGGAGCAACCCGCG_____________CACCCC_CAAAAAAAAACAGCAUAUUGACACCUGGGA__AAGACCAGGGGAUCUUCUGC_UCUG_________________\
) } def
/len { sequence length } bind def

/coor [
[74.92178345 559.63403320]
[61.85321045 567.01068115]
[48.28103638 573.41369629]
[34.27767563 578.80889893]
[19.91784668 583.16754150]
[5.27816391 586.46630859]
[-9.56326199 588.68768311]
[-24.52724648 589.81976318]
[-39.53394699 589.85656738]
[-54.50329590 588.79779053]
[-69.35542297 586.64910889]
[-84.01109314 583.42205811]
[-98.39209747 579.13385010]
[-112.42172241 573.80731201]
[-126.02509308 567.47082520]
[-139.12965393 560.15832520]
[-151.66546631 551.90875244]
[-163.56564331 542.76605225]
[-174.76670837 532.77917480]
[-185.20889282 522.00122070]
[-194.83647156 510.48986816]
[-203.59808350 498.30639648]
[-211.44697571 485.51589966]
[-218.34129333 472.18655396]
[-224.24423218 458.38955688]
[-229.12429810 444.19845581]
[-232.95544434 429.68896484]
[-235.71725464 414.93856812]
[-237.39497375 400.02587891]
[-237.97966003 385.03054810]
[-237.46820068 370.03250122]
[-235.86329651 355.11184692]
[-233.17353821 340.34811401]
[-229.41326904 325.82009888]
[-224.60253906 311.60534668]
[-218.76702881 297.77966309]
[-211.93788147 284.41683960]
[-204.15151978 271.58816528]
[-195.44949341 259.36209106]
[-185.87821960 247.80383301]
[-175.48878479 236.97508240]
[-164.33660889 226.93359375]
[-152.48121643 217.73295593]
[-139.98582458 209.42225647]
[-126.91712952 202.04583740]
[-113.34484863 195.64305115]
[-99.34140015 190.24806213]
[-84.98149872 185.88966370]
[-70.34175873 182.59109497]
[-55.50030136 180.36997986]
[-40.53629684 179.23814392]
[-25.52959633 179.20162964]
[-10.56026459 180.26063538]
[4.29182911 182.40953064]
[18.94744301 185.63681030]
[33.32838058 189.92529297]
[47.35791397 195.25207520]
[53.69150925 181.65481567]
[60.02510834 168.05755615]
[52.64907837 155.14506531]
[54.31045914 140.18833923]
[64.58041382 128.94639587]
[79.67521667 125.87178802]
[86.00881195 112.27452087]
[81.96032715 104.58121490]
[81.84752655 95.88844299]
[85.69500732 88.09267426]
[92.66338348 82.89469910]
[101.23236847 81.42855835]
[108.17248535 68.13063049]
[97.14469147 55.36372375]
[91.87726593 39.37556458]
[93.15129852 22.62721062]
[100.74321747 7.68534088]
[113.46342468 -3.17109013]
[129.34257507 -8.29843044]
[145.93650818 -6.93713617]
[152.47377014 -20.43766212]
[159.01103210 -33.93819046]
[165.54829407 -47.43871307]
[172.08555603 -60.93923950]
[178.62281799 -74.43976593]
[179.54660034 -83.52896881]
[185.36114502 -88.09296417]
[192.10060120 -101.49370575]
[198.84004211 -114.89444733]
[205.57949829 -128.29518127]
[212.31893921 -141.69592285]
[219.05839539 -155.09666443]
[225.79783630 -168.49740601]
[232.53729248 -181.89814758]
[239.27674866 -195.29888916]
[246.01618958 -208.69963074]
[252.75564575 -222.10035706]
[240.23059082 -230.38647461]
[228.77349854 -240.09582520]
[218.54521179 -251.09211731]
[209.68931580 -263.22097778]
[202.33013916 -276.31216431]
[196.57098389 -290.18185425]
[192.49269104 -304.63534546]
[190.15254211 -319.46978760]
[189.58335876 -334.47686768]
[190.79315186 -349.44592285]
[193.76493835 -364.16680908]
[198.45697021 -378.43289185]
[204.80342102 -392.04388428]
[212.71516418 -404.80871582]
[222.08114624 -416.54815674]
[232.76988220 -427.09744263]
[244.63131714 -436.30847168]
[257.49893188 -444.05191040]
[271.19207764 -450.21905518]
[285.51855469 -454.72335815]
[300.27719116 -457.50155640]
[315.26086426 -458.51467896]
[330.25915527 -457.74850464]
[345.06158447 -455.21374512]
[359.46029663 -450.94601440]
[373.25317383 -445.00521851]
[386.24655151 -437.47476196]
[398.25808716 -428.46035767]
[409.11914062 -418.08853149]
[418.67718506 -406.50494385]
[426.79809570 -393.87216187]
[433.36785889 -380.36755371]
[438.29421997 -366.18066406]
[441.50805664 -351.51071167]
[442.96423340 -336.56362915]
[442.64230347 -321.54919434]
[440.54678345 -306.67825317]
[436.70712280 -292.15951538]
[431.17718506 -278.19686890]
[424.03460693 -264.98626709]
[415.37966919 -252.71318054]
[405.33389282 -241.54991150]
[394.03826904 -231.65316772]
[381.65139771 -223.16191101]
[368.34713745 -216.19531250]
[354.31231689 -210.85118103]
[339.74389648 -207.20454407]
[324.84643555 -205.30659485]
[309.82907104 -205.18397522]
[294.90261841 -206.83840942]
[280.27661133 -210.24667358]
[266.15637207 -215.36091614]
[259.41693115 -201.96017456]
[252.67747498 -188.55943298]
[245.93803406 -175.15869141]
[239.19857788 -161.75794983]
[232.45913696 -148.35722351]
[225.71968079 -134.95648193]
[218.98023987 -121.55574036]
[212.24078369 -108.15499878]
[205.50134277 -94.75425720]
[198.76188660 -81.35351562]
[192.12335205 -67.90250397]
[185.58609009 -54.40198135]
[179.04882812 -40.90145493]
[172.51156616 -27.40092659]
[165.97430420 -13.90040112]
[159.43704224 -0.39987442]
[168.86703491 8.92277813]
[174.97561646 20.71796227]
[177.15576172 33.84404373]
[175.18139648 47.02568054]
[169.23080444 58.97775650]
[159.87063599 68.53064728]
[148.00195312 74.74468231]
[134.77345276 77.00258636]
[121.47040558 75.07073975]
[114.53029633 88.36866760]
[116.69027710 108.23722839]
[99.60607147 118.60812378]
[93.27247620 132.20538330]
[100.63124847 145.73884583]
[98.63341522 160.83395386]
[88.25290680 171.72930908]
[73.62236786 174.39114380]
[67.28877258 187.98841858]
[60.95517349 201.58567810]
[74.05985260 208.89799500]
[86.59579468 217.14738464]
[98.49613190 226.28984070]
[109.69735718 236.27656555]
[120.13970947 247.05430603]
[129.76748657 258.56555176]
[138.52929688 270.74884033]
[146.37840271 283.53921509]
[153.27293396 296.86843872]
[159.17610168 310.66537476]
[164.05639648 324.85638428]
[167.88778687 339.36578369]
[170.64984131 354.11614990]
[172.32780457 369.02880859]
[172.91273499 384.02413940]
[172.40151978 399.02218628]
[170.79685974 413.94290161]
[168.10734558 428.70666504]
[164.34730530 443.23471069]
[159.53681946 457.44955444]
[153.70153809 471.27532959]
[146.87260437 484.63827515]
[139.08645630 497.46707153]
[130.38462830 509.69329834]
[120.81355286 521.25170898]
[110.42429352 532.08062744]
[99.27228546 542.12231445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 181]
[58 180]
[59 179]
[63 175]
[64 174]
[69 172]
[70 171]
[77 162]
[78 161]
[79 160]
[80 159]
[81 158]
[82 157]
[84 156]
[85 155]
[86 154]
[87 153]
[88 152]
[89 151]
[90 150]
[91 149]
[92 148]
[93 147]
[94 146]
] def

init

% Start Annotations
57 181 0.32 0.6 colorpair
69 172 0.16 0.2 colorpair
78 161 0.0 0.6 colorpair
85 155 0.0 0.6 colorpair
86 154 0.16 0.6 colorpair
87 153 0.0 0.6 colorpair
88 152 0.0 0.6 colorpair
89 151 0.16 1 colorpair
90 150 0.0 1 colorpair
91 149 0.0 0.6 colorpair
92 148 0.0 0.6 colorpair
93 147 0.16 0.6 colorpair
94 146 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
57 181 1 gmark
57 cmark
181 cmark
58 180 7 gmark
180 cmark
59 179 9 gmark
59 cmark
179 cmark
63 175 9 gmark
63 cmark
175 cmark
64 174 7 gmark
69 172 2 gmark
172 cmark
70 171 9 gmark
77 162 6 gmark
77 cmark
78 161 1 gmark
79 160 5 gmark
79 cmark
160 cmark
80 159 3 gmark
81 158 9 gmark
82 157 10 gmark
82 cmark
157 cmark
84 156 7 gmark
85 155 1 gmark
86 154 1 gmark
86 cmark
87 153 1 gmark
88 152 1 gmark
151 cmark
91 149 1 gmark
92 148 1 gmark
93 147 1 gmark
93 cmark
147 cmark

% End Annotations
showpage
end
%%EOF
