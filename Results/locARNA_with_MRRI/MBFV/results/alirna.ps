%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Feb  5 19:43:35 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___U____UAACACAGUUUGAACAGUUUUUUAGCAGAAUUU_UCU___AAUGUCU___AAAAAACCAGGAAGACCC___GGAAGAAACCGGGCUGUCAAUAUGCUAAAACGCGGAGCAUCCCGCG________________________UAGAGGUUAGAGGAGACCCCCCGGCA_________AAC_CCAAAAAAAAACAGCAUAUUGACACCUGGGAA__AGACCAGGGGAUCUUCUGCUCU_CUCCAACACC\
AGCCAC___\
) } def
/len { sequence length } bind def

/coor [
[79.72467804 647.52478027]
[67.05890656 655.56848145]
[53.95458221 662.87603760]
[40.45445251 669.42352295]
[26.60254669 675.18969727]
[12.44405174 680.15557861]
[-1.97485149 684.30511475]
[-16.60713196 687.62475586]
[-31.40506172 690.10357666]
[-46.32037354 691.73358154]
[-61.30441284 692.50946045]
[-76.30831146 692.42864990]
[-91.28311920 691.49139404]
[-106.18000031 689.70074463]
[-120.95036316 687.06256104]
[-135.54602051 683.58551025]
[-149.91938782 679.28088379]
[-164.02354431 674.16265869]
[-177.81251526 668.24761963]
[-191.24131775 661.55505371]
[-204.26614380 654.10668945]
[-216.84451294 645.92700195]
[-228.93539429 637.04248047]
[-240.49934387 627.48223877]
[-251.49865723 617.27740479]
[-261.89743042 606.46130371]
[-271.66177368 595.06915283]
[-280.75985718 583.13812256]
[-289.16192627 570.70721436]
[-296.84066772 557.81683350]
[-303.77096558 544.50915527]
[-309.93023682 530.82757568]
[-315.29840088 516.81658936]
[-319.85791016 502.52206421]
[-323.59396362 487.99053955]
[-326.49432373 473.26940918]
[-328.54953003 458.40673828]
[-329.75289917 443.45095825]
[-330.10049438 428.45086670]
[-329.59118652 413.45538330]
[-328.22662354 398.51345825]
[-326.01126099 383.67379761]
[-322.95233154 368.98480225]
[-319.05984497 354.49441528]
[-314.34643555 340.24984741]
[-308.82751465 326.29760742]
[-302.52105713 312.68319702]
[-295.44766235 299.45101929]
[-287.63040161 286.64422607]
[-279.09475708 274.30462646]
[-269.86859131 262.47241211]
[-259.98196411 251.18621826]
[-249.46716309 240.48283386]
[-238.35845947 230.39720154]
[-226.69209290 220.96220398]
[-214.50611877 212.20860291]
[-201.84028625 204.16496277]
[-188.73590088 196.85752869]
[-175.23571777 190.31011963]
[-161.38377380 184.54411316]
[-147.22523499 179.57829285]
[-132.80630493 175.42886353]
[-118.17399597 172.10937500]
[-103.37604523 169.63064575]
[-88.46072388 168.00074768]
[-73.47667694 167.22500610]
[-58.47278214 167.30595398]
[-43.49797821 168.24333191]
[-28.60110855 170.03407288]
[-13.83076859 172.67234802]
[0.76486725 176.14953613]
[15.13818932 180.45431519]
[29.24231529 185.57261658]
[43.03123856 191.48776245]
[49.72199631 178.06265259]
[45.59324265 170.26730347]
[45.49411392 161.30940247]
[49.57228470 153.17922974]
[57.03338623 147.74063110]
[66.29275513 146.30419922]
[73.45664978 133.12548828]
[62.76046753 120.37313843]
[57.78979874 104.48845673]
[59.30886841 87.91368866]
[67.08412170 73.19715881]
[79.92012787 62.60152435]
[95.84337616 57.75583267]
[112.40570068 59.40509796]
[119.25513458 46.06024170]
[126.10457611 32.71538544]
[132.95401001 19.37053108]
[139.80345154 6.02567387]
[146.65289307 -7.31918240]
[147.77975464 -16.34967613]
[153.66345215 -20.78092384]
[160.67060852 -34.04364395]
[167.67776489 -47.30636215]
[174.68492126 -60.56908417]
[181.69207764 -73.83180237]
[188.69923401 -87.09452057]
[195.70639038 -100.35724640]
[202.71354675 -113.61996460]
[209.72070312 -126.88268280]
[216.72787476 -140.14540100]
[223.73503113 -153.40812683]
[210.94909668 -161.26170349]
[198.69833374 -169.92645264]
[187.03413391 -179.36602783]
[176.00543213 -189.54081726]
[165.65846252 -200.40817261]
[156.03663635 -211.92248535]
[147.18032837 -224.03547668]
[139.12664795 -236.69633484]
[131.90940857 -249.85194397]
[125.55886078 -263.44714355]
[120.10165405 -277.42489624]
[115.56066895 -291.72659302]
[111.95496368 -306.29223633]
[109.29964447 -321.06072998]
[107.60586548 -335.97012329]
[106.88072205 -350.95788574]
[107.12726593 -365.96115112]
[108.34444427 -380.91699219]
[110.52716827 -395.76269531]
[113.66627502 -410.43597412]
[117.74860382 -424.87527466]
[122.75702667 -439.02005005]
[128.67053223 -452.81094360]
[135.46434021 -466.19015503]
[143.10992432 -479.10156250]
[151.57522583 -491.49096680]
[160.82473755 -503.30642700]
[170.81967163 -514.49841309]
[181.51811218 -525.01989746]
[192.87516785 -534.82690430]
[204.84320068 -543.87811279]
[217.37203979 -552.13568115]
[230.40910339 -559.56494141]
[243.89971924 -566.13470459]
[257.78732300 -571.81744385]
[272.01361084 -576.58935547]
[286.51898193 -580.43035889]
[301.24255371 -583.32440186]
[316.12258911 -585.25933838]
[331.09664917 -586.22698975]
[346.10192871 -586.22332764]
[361.07553101 -585.24841309]
[375.95462036 -583.30627441]
[390.67675781 -580.40509033]
[405.18026733 -576.55706787]
[419.40426636 -571.77825928]
[433.28909302 -566.08874512]
[446.77651978 -559.51245117]
[459.80996704 -552.07684326]
[472.33480835 -543.81323242]
[484.29843140 -534.75616455]
[495.65072632 -524.94372559]
[506.34405518 -514.41699219]
[516.33355713 -503.22015381]
[525.57733154 -491.40020752]
[534.03662109 -479.00668335]
[541.67596436 -466.09158325]
[548.46325684 -452.70907593]
[554.37005615 -438.91531372]
[559.37164307 -424.76809692]
[563.44696045 -410.32681274]
[566.57891846 -395.65203857]
[568.75445557 -380.80526733]
[569.96435547 -365.84884644]
[570.20361328 -350.84545898]
[569.47125244 -335.85803223]
[567.77020264 -320.94946289]
[565.10772705 -306.18228149]
[561.49493408 -291.61837769]
[556.94702148 -277.31890869]
[551.48303223 -263.34378052]
[545.12591553 -249.75167847]
[537.90228271 -236.59956360]
[529.84246826 -223.94261169]
[520.98022461 -211.83392334]
[511.35284424 -200.32427979]
[501.00061035 -189.46195984]
[489.96694946 -179.29251099]
[478.29818726 -169.85861206]
[466.04321289 -161.19979858]
[453.25347900 -153.35243225]
[439.98260498 -146.34938049]
[426.28622437 -140.22006226]
[412.22183228 -134.99014282]
[397.84841919 -130.68159485]
[383.22625732 -127.31247711]
[368.41665649 -124.89691162]
[353.48178101 -123.44503784]
[338.48422241 -122.96295166]
[323.48690796 -123.45265961]
[308.55276489 -124.91212463]
[293.74441528 -127.33521271]
[279.12393188 -130.71176147]
[264.75271606 -135.02761841]
[250.69099426 -140.26467896]
[236.99774170 -146.40097046]
[229.99058533 -133.13824463]
[222.98342896 -119.87552643]
[215.97627258 -106.61280823]
[208.96911621 -93.35008240]
[201.96195984 -80.08736420]
[194.95480347 -66.82464600]
[187.94764709 -53.56192398]
[180.94049072 -40.29920578]
[173.93331909 -27.03648567]
[166.92616272 -13.77376556]
[159.99774170 -0.46974382]
[153.14831543 12.87511253]
[146.29887390 26.21996880]
[139.44943237 39.56482697]
[132.59999084 52.90968323]
[125.75055695 66.25453949]
[134.87150574 75.79618073]
[140.62046814 87.67827606]
[142.44151306 100.75186157]
[140.15855408 113.75274658]
[133.99234009 125.42375946]
[124.53915405 134.63635254]
[112.71307373 140.49969482]
[99.65766907 142.44679260]
[86.63536835 140.28938293]
[79.47147369 153.46809387]
[81.27033234 174.84274292]
[63.14711380 184.75340271]
[56.45635605 198.17852783]
[69.48123932 205.62673950]
[82.05966949 213.80636597]
[94.15061951 222.69076538]
[105.71465302 232.25091553]
[116.71404266 242.45567322]
[127.11291504 253.27171326]
[136.87734985 264.66378784]
[145.97549438 276.59472656]
[154.37768555 289.02557373]
[162.05650330 301.91586304]
[168.98690796 315.22348022]
[175.14628601 328.90505981]
[180.51455688 342.91595459]
[185.07420349 357.21047974]
[188.81036377 371.74197388]
[191.71083069 386.46307373]
[193.76615906 401.32574463]
[194.96965027 416.28152466]
[195.31735229 431.28158569]
[194.80815125 446.27706909]
[193.44371033 461.21902466]
[191.22848511 476.05868530]
[188.16967773 490.74771118]
[184.27728271 505.23812866]
[179.56398010 519.48272705]
[174.04516602 533.43499756]
[167.73883057 547.04949951]
[160.66555786 560.28167725]
[152.84838867 573.08856201]
[144.31285095 585.42822266]
[135.08676147 597.26049805]
[125.20023346 608.54681396]
[114.68550110 619.25024414]
[103.57687378 629.33599854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 230]
[75 229]
[80 227]
[81 226]
[88 217]
[89 216]
[90 215]
[91 214]
[92 213]
[93 212]
[95 211]
[96 210]
[97 209]
[98 208]
[99 207]
[100 206]
[101 205]
[102 204]
[103 203]
[104 202]
[105 201]
] def

init

% Start Annotations
96 210 0.0 0.6 colorpair
97 209 0.16 1 colorpair
98 208 0.0 1 colorpair
99 207 0.0 0.6 colorpair
100 206 0.0 0.6 colorpair
101 205 0.0 0.6 colorpair
102 204 0.0 0.6 colorpair
103 203 0.0 1 colorpair
104 202 0.16 1 colorpair
105 201 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
74 230 9 gmark
74 cmark
230 cmark
75 229 5 gmark
80 227 3 gmark
227 cmark
81 226 9 gmark
81 cmark
226 cmark
88 217 6 gmark
88 cmark
89 216 3 gmark
90 215 5 gmark
90 cmark
215 cmark
91 214 3 gmark
92 213 10 gmark
93 212 11 gmark
93 cmark
212 cmark
95 211 8 gmark
96 210 1 gmark
97 cmark
99 207 1 gmark
100 206 1 gmark
101 205 1 gmark
102 204 1 gmark
104 cmark
202 cmark

% End Annotations
showpage
end
%%EOF
