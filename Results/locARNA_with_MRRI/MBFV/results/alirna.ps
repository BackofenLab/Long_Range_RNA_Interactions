%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Feb 15 17:39:22 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________UAACACAGUCUGAACAGUUUUUUAGAAA_GAGGAUUUCU____CAAUGUCUA____AAAAACCAGGAAGACCCGGGGGAAACCGGGCUGUCAAUAUGCUAAAACGCGGAGCAUCCCGCG____________________AGACCACACGCCACCCAACACCAAA_AAAAAACAGCAUA_UUGACACCUGGGA__AAGACCAGGAGAUCCUC_UGGUCU_UUGCAACACCAGCCACCAGGCACAGAGC\
GCC___GAAAAUUGUGGCUGGUGGUGGAAAAAAACACAGGAUCU\
) } def
/len { sequence length } bind def

/coor [
[115.83793640 708.38372803]
[106.29422760 696.80578613]
[97.44644928 684.68774414]
[89.32510376 672.07128906]
[81.95818329 659.00000000]
[75.37109375 645.51885986]
[69.58653259 631.67437744]
[64.62443542 617.51434326]
[60.50192261 603.08740234]
[57.23319626 588.44342041]
[54.82952499 573.63287354]
[53.29919815 558.70678711]
[52.64748764 543.71661377]
[52.87664032 528.71398926]
[53.98586655 513.75067139]
[55.97134399 498.87829590]
[58.82622910 484.14804077]
[62.54067612 469.61074829]
[67.10188293 455.31649780]
[72.49413300 441.31454468]
[78.69882202 427.65319824]
[85.69457245 414.37954712]
[93.45727539 401.53933716]
[101.96015167 389.17684937]
[111.17390442 377.33465576]
[121.06676483 366.05361938]
[131.60462952 355.37261963]
[142.75119019 345.32846069]
[154.46798706 335.95581055]
[166.71466064 327.28692627]
[179.44898987 319.35171509]
[192.62705994 312.17752075]
[186.24037170 298.60513306]
[179.85368347 285.03271484]
[163.78479004 279.99697876]
[156.20143127 264.58352661]
[162.25119019 248.14503479]
[155.72271729 234.64024353]
[149.19424438 221.13546753]
[142.66578674 207.63067627]
[136.13731384 194.12590027]
[129.60885620 180.62112427]
[123.08038330 167.11633301]
[116.55191803 153.61155701]
[110.02345276 140.10678101]
[103.49498749 126.60199738]
[96.41654968 139.82681274]
[81.68347931 142.64402771]
[70.22519684 132.96374512]
[70.54179382 117.96708679]
[82.39840698 108.77900696]
[96.99910736 112.21520996]
[97.02471924 127.21518707]
[94.07793427 141.92289734]
[88.27559662 155.75520325]
[79.84773254 168.16371155]
[69.12849426 178.65646362]
[56.54286194 186.81745911]
[42.58981323 192.32313538]
[27.82254601 194.95521545]
[12.82653332 194.60932922]
[-1.80367696 191.29919434]
[-15.48804474 185.15606689]
[-27.68402672 176.42347717]
[-37.90809250 165.44766235]
[-45.75488663 152.66377258]
[-50.91331100 138.57865906]
[-53.17884827 123.75073242]
[-52.46168137 108.76788330]
[-48.79023743 94.22414398]
[-42.31008148 80.69611359]
[-33.27813339 68.72013855]
[-22.05247498 58.77103806]
[-9.07817459 51.24325562]
[5.13038063 46.43524551]
[20.00986481 44.53762817]
[34.97035217 45.62564468]
[49.41871262 49.65615082]
[62.78210449 56.46935272]
[74.53071594 65.79512787]
[84.19875336 77.26374054]
[91.40357971 90.42208862]
[89.83565521 75.50426483]
[73.55022430 70.93814850]
[60.30960083 60.47376633]
[52.13990784 45.74864578]
[50.27731323 29.04947853]
[54.98105621 12.95701790]
[65.49780273 -0.05276314]
[80.18212891 -7.98961258]
[78.30212402 -22.87133217]
[76.42212677 -37.75305176]
[74.54212952 -52.63477325]
[72.66213226 -67.51649475]
[70.78213501 -82.39821625]
[66.61992645 -90.47378540]
[68.96121216 -97.44551849]
[67.23715210 -112.34610748]
[65.51309204 -127.24669647]
[63.78903580 -142.14729309]
[62.06497955 -157.04788208]
[60.26292801 -171.93923950]
[58.38293076 -186.82096863]
[56.50292969 -201.70268250]
[54.62293243 -216.58441162]
[52.74293518 -231.46612549]
[50.86293411 -246.34783936]
[48.98293686 -261.22955322]
[33.98533630 -260.63507080]
[18.99214935 -261.33203125]
[4.11438131 -263.31533813]
[-10.53781605 -266.57028198]
[-24.85596085 -271.07272339]
[-38.73404312 -276.78939819]
[-52.06931686 -283.67794800]
[-64.76304626 -291.68734741]
[-76.72125244 -300.75833130]
[-87.85540009 -310.82373047]
[-98.08304596 -321.80902100]
[-107.32848358 -333.63287354]
[-115.52324677 -346.20773315]
[-122.60667419 -359.44052124]
[-128.52630615 -373.23324585]
[-133.23832703 -387.48379517]
[-136.70785522 -402.08666992]
[-138.90919495 -416.93374634]
[-139.82604980 -431.91510010]
[-139.45162964 -446.91979980]
[-137.78869629 -461.83676147]
[-134.84959412 -476.55557251]
[-130.65605164 -490.96722412]
[-125.23912811 -504.96502686]
[-118.63892365 -518.44531250]
[-110.90431976 -531.30834961]
[-102.09256744 -543.45886230]
[-92.26891327 -554.80682373]
[-81.50608826 -565.26837158]
[-69.88377380 -574.76586914]
[-57.48802567 -583.22918701]
[-44.41061401 -590.59545898]
[-30.74836540 -596.81036377]
[-16.60242844 -601.82769775]
[-2.07753873 -605.61041260]
[12.71876621 -608.13049316]
[27.67693710 -609.36926270]
[42.68622589 -609.31762695]
[57.63550949 -607.97583008]
[72.41410065 -605.35388184]
[86.91259766 -601.47119141]
[101.02363586 -596.35650635]
[114.64275360 -590.04772949]
[127.66912079 -582.59149170]
[140.00627136 -574.04302979]
[151.56289673 -564.46569824]
[162.25341797 -553.93029785]
[171.99867249 -542.51489258]
[180.72651672 -530.30401611]
[188.37234497 -517.38800049]
[194.87953186 -503.86254883]
[200.19992065 -489.82775879]
[204.29409790 -475.38757324]
[207.13175964 -460.64886475]
[208.69189453 -445.72079468]
[208.96296692 -430.71386719]
[207.94294739 -415.73919678]
[205.63938904 -400.90762329]
[202.06936646 -386.32901001]
[197.25929260 -372.11123657]
[191.24479675 -358.35961914]
[184.07040405 -345.17593384]
[175.78921509 -332.65780640]
[166.46255493 -320.89791870]
[156.15948486 -309.98333740]
[144.95626831 -299.99487305]
[132.93586731 -291.00646973]
[120.18727875 -283.08468628]
[106.80487061 -276.28817749]
[92.88774109 -270.66723633]
[78.53892517 -266.26348877]
[63.86465836 -263.10955811]
[65.74465942 -248.22784424]
[67.62465668 -233.34613037]
[69.50465393 -218.46440125]
[71.38465118 -203.58268738]
[73.26464844 -188.70095825]
[75.14464569 -173.81924438]
[79.08134460 -167.60722351]
[76.96556854 -158.77194214]
[78.68962860 -143.87135315]
[80.41368866 -128.97076416]
[82.13774109 -114.07016754]
[83.86180115 -99.16957092]
[85.66385651 -84.27821350]
[87.54385376 -69.39649200]
[89.42385101 -54.51477432]
[91.30384827 -39.63305283]
[93.18384552 -24.75133133]
[95.06384277 -9.86961079]
[108.00192261 -7.21142626]
[119.51770020 -0.69625670]
[128.49076843 9.05804920]
[134.04316711 21.11772919]
[135.62533569 34.32248688]
[133.07041931 47.39712143]
[126.61177063 59.07468414]
[116.86170959 68.21923065]
[104.75348663 73.93633270]
[106.32141113 88.85416412]
[112.26793671 96.73088074]
[110.82704926 106.40248108]
[116.99976349 120.07352448]
[123.52823639 133.57830811]
[130.05670166 147.08308411]
[136.58515930 160.58787537]
[143.11363220 174.09265137]
[149.64210510 187.59742737]
[156.17056274 201.10221863]
[162.69903564 214.60699463]
[169.22749329 228.11178589]
[175.75596619 241.61656189]
[188.87411499 244.54067993]
[197.79423523 254.33265686]
[199.43685913 267.28036499]
[193.42608643 278.64602661]
[199.81277466 292.21844482]
[206.19946289 305.79083252]
[220.12728882 300.20996094]
[234.35862732 295.45608521]
[248.84443665 291.54562378]
[263.53479004 288.49203491]
[278.37899780 286.30584717]
[293.32595825 284.99459839]
[308.32409668 284.56283569]
[323.32171631 285.01199341]
[338.26712036 286.34057617]
[353.10879517 288.54397583]
[367.79559326 291.61459351]
[382.27685547 295.54187012]
[396.50268555 300.31222534]
[410.42401123 305.90927124]
[423.99288940 312.31365967]
[437.16250610 319.50335693]
[449.88748169 327.45355225]
[462.12393188 336.13684082]
[473.82971191 345.52328491]
[484.96444702 355.58053589]
[495.48971558 366.27392578]
[505.36929321 377.56658936]
[514.56909180 389.41961670]
[523.05743408 401.79211426]
[530.80499268 414.64144897]
[537.78515625 427.92333984]
[543.97375488 441.59197998]
[549.34954834 455.60025024]
[553.89392090 469.89987183]
[557.59124756 484.44152832]
[560.42877197 499.17510986]
[562.39678955 514.04986572]
[563.48840332 529.01446533]
[563.69989014 544.01727295]
[563.03051758 559.00671387]
[561.48266602 573.93103027]
[559.06152344 588.73870850]
[555.77557373 603.37884521]
[551.63610840 617.80090332]
[546.65734863 631.95513916]
[540.85650635 645.79278564]
[534.25354004 659.26611328]
[526.87121582 672.32873535]
[518.73504639 684.93560791]
[509.87301636 697.04327393]
[500.31570435 708.60992432]
[490.09600830 719.59576416]
[479.24920654 729.96289062]
[467.81268311 739.67559814]
[455.82586670 748.70037842]
[443.33004761 757.00610352]
[430.36834717 764.56414795]
[416.98538208 771.34851074]
[403.22735596 777.33575439]
[389.14166260 782.50518799]
[374.77685547 786.83911133]
[360.18246460 790.32257080]
[345.40878296 792.94342041]
[330.50677490 794.69274902]
[315.52777100 795.56451416]
[300.52340698 795.55572510]
[285.54544067 794.66632080]
[270.64547729 792.89941406]
[255.87490845 790.26116943]
[241.28462219 786.76055908]
[226.92492676 782.40979004]
[212.84532166 777.22369385]
[199.09434509 771.22027588]
[185.71939087 764.42022705]
[172.76658630 756.84686279]
[160.28054810 748.52648926]
[148.30435181 739.48760986]
[136.87927246 729.76147461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 226]
[33 225]
[34 224]
[37 220]
[38 219]
[39 218]
[40 217]
[41 216]
[42 215]
[43 214]
[44 213]
[45 212]
[46 211]
[52 210]
[82 208]
[83 207]
[90 198]
[91 197]
[92 196]
[93 195]
[94 194]
[95 193]
[97 192]
[98 191]
[99 190]
[100 189]
[101 188]
[102 186]
[103 185]
[104 184]
[105 183]
[106 182]
[107 181]
[108 180]
] def

init

% Start Annotations
33 225 0.32 0.2 colorpair
82 208 0.16 0.2 colorpair
91 197 0.0 0.2 colorpair
93 195 0.16 0.2 colorpair
98 191 0.16 0.6 colorpair
99 190 0.32 1 colorpair
100 189 0.16 1 colorpair
101 188 0.16 0.6 colorpair
102 186 0.16 1 colorpair
103 185 0.0 0.6 colorpair
104 184 0.0 1 colorpair
105 183 0.16 1 colorpair
106 182 0.16 1 colorpair
107 181 0.32 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
32 226 5 gmark
32 cmark
226 cmark
33 225 2 gmark
33 cmark
225 cmark
34 224 4 gmark
34 cmark
224 cmark
37 220 16 gmark
37 cmark
220 cmark
38 219 5 gmark
38 cmark
219 cmark
39 218 6 gmark
39 cmark
218 cmark
40 217 5 gmark
40 cmark
217 cmark
41 216 9 gmark
41 cmark
216 cmark
42 215 8 gmark
42 cmark
215 cmark
43 214 10 gmark
43 cmark
214 cmark
44 213 9 gmark
44 cmark
45 212 12 gmark
45 cmark
212 cmark
46 211 8 gmark
46 cmark
52 210 10 gmark
52 cmark
82 208 2 gmark
208 cmark
83 207 7 gmark
90 198 8 gmark
90 cmark
198 cmark
91 197 2 gmark
92 196 4 gmark
92 cmark
196 cmark
93 195 2 gmark
93 cmark
195 cmark
94 194 11 gmark
94 cmark
194 cmark
95 193 8 gmark
95 cmark
193 cmark
97 192 8 gmark
98 191 1 gmark
98 cmark
191 cmark
99 cmark
190 cmark
100 cmark
189 cmark
101 188 1 gmark
101 cmark
188 cmark
102 cmark
186 cmark
103 185 1 gmark
105 cmark
183 cmark
106 cmark
182 cmark
107 cmark
181 cmark
108 180 12 gmark
108 cmark
180 cmark

% End Annotations
showpage
end
%%EOF
