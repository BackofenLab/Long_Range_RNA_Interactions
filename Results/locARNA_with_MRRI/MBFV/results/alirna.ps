%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Sun Jan 28 18:36:34 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______UUUUAAAUAGUUU_UUAGCAAGU_UCUUUU_CAAUGUCU___AAAAAACCAGGAAGGCCC___GGUAGAAACCGGGCUGUCAAUAUGCUAAAACGCGGAGUACCCCGCG______________AACCGCAAAAA_AAAACAGCAUAUUGACAC_CUGGGA__AAGACCAGGGGAUCUUCUGC_UCUG_________________\
) } def
/len { sequence length } bind def

/coor [
[38.97973633 627.32397461]
[26.01914024 634.88842773]
[12.54649544 641.49792480]
[-1.36795831 647.11804199]
[-15.65167713 651.71948242]
[-30.23019218 655.27825928]
[-45.02749634 657.77575684]
[-59.96644211 659.19897461]
[-74.96914673 659.54058838]
[-89.95738220 658.79870605]
[-104.85301971 656.97723389]
[-119.57839203 654.08569336]
[-134.05673218 650.13909912]
[-148.21255493 645.15808105]
[-161.97204590 639.16857910]
[-175.26348877 632.20184326]
[-188.01756287 624.29418945]
[-200.16780090 615.48681641]
[-211.65083313 605.82568359]
[-222.40681458 595.36114502]
[-232.37963867 584.14770508]
[-241.51733398 572.24389648]
[-249.77226257 559.71179199]
[-257.10137939 546.61669922]
[-263.46646118 533.02685547]
[-268.83432007 519.01318359]
[-273.17700195 504.64868164]
[-276.47186279 490.00823975]
[-278.70169067 475.16824341]
[-279.85488892 460.20602417]
[-279.92541504 445.19961548]
[-278.91293335 430.22720337]
[-276.82272339 415.36691284]
[-273.66564941 400.69616699]
[-269.45822144 386.29147339]
[-264.22232056 372.22793579]
[-257.98529053 358.57885742]
[-250.77960205 345.41543579]
[-242.64286804 332.80624390]
[-233.61747742 320.81707764]
[-223.75050354 309.51043701]
[-213.09338379 298.94522095]
[-201.70169067 289.17654419]
[-189.63478088 280.25534058]
[-176.95561218 272.22814941]
[-163.73025513 265.13674927]
[-150.02767944 259.01815796]
[-135.91931152 253.90428162]
[-121.47871399 249.82176208]
[-106.78118134 246.79190063]
[-91.90332031 244.83047485]
[-76.92272186 243.94770813]
[-61.91746902 244.14823914]
[-46.96580124 245.43098450]
[-32.14567184 247.78927612]
[-17.53434563 251.21080017]
[-3.20799971 255.67774963]
[10.75867462 261.16680908]
[17.23817062 247.63845825]
[23.71766663 234.11010742]
[16.48096275 221.11903381]
[18.30313873 206.18103027]
[28.69342613 195.05020142]
[43.82042694 192.13815308]
[50.29992294 178.60981750]
[46.02504349 170.82788086]
[45.80714035 161.81414795]
[49.82152939 153.58743286]
[57.28147888 148.04838562]
[66.58924866 146.54089355]
[73.66635132 133.31536865]
[62.89849091 120.66041565]
[57.81082916 104.84237671]
[59.18228149 88.28297424]
[66.80287933 73.51744080]
[79.50592041 62.80635071]
[95.34658051 57.78956604]
[111.89967346 59.23515320]
[118.57987213 45.80477905]
[125.26006317 32.37440109]
[131.94026184 18.94402695]
[138.52027893 5.46429205]
[144.99978638 -8.06405354]
[145.88438416 -17.15555000]
[151.67778015 -21.74448586]
[158.35797119 -35.17486191]
[165.03816223 -48.60523987]
[171.71836853 -62.03561401]
[178.39855957 -75.46598816]
[185.07875061 -88.89636993]
[191.75894165 -102.32674408]
[198.43914795 -115.75711823]
[205.11933899 -129.18750000]
[211.79953003 -142.61787415]
[218.47972107 -156.04824829]
[205.91819763 -164.27894592]
[194.41833496 -173.93760681]
[184.14158630 -184.88861084]
[175.23220825 -196.97824097]
[167.81526184 -210.03678894]
[161.99490356 -223.88090515]
[157.85282898 -238.31626892]
[155.44717407 -253.14019775]
[154.81170654 -268.14462280]
[155.95538330 -283.11886597]
[158.86210632 -297.85275269]
[163.49108887 -312.13943481]
[169.77735901 -325.77832031]
[177.63264465 -338.57794189]
[186.94668579 -350.35867310]
[197.58871460 -360.95504761]
[209.40934753 -370.21835327]
[222.24264526 -378.01855469]
[235.90841675 -384.24615479]
[250.21485901 -388.81369019]
[264.96109009 -391.65704346]
[279.94012451 -392.73632812]
[294.94168091 -392.03640747]
[309.75512695 -389.56704712]
[324.17254639 -385.36294556]
[337.99154663 -379.48312378]
[351.01806641 -372.01013184]
[363.06930542 -363.04888916]
[373.97604370 -352.72512817]
[383.58517456 -341.18386841]
[391.76181030 -328.58709717]
[398.39114380 -315.11160278]
[403.38012695 -300.94665527]
[406.65872192 -286.29101562]
[408.18090820 -271.35049438]
[407.92529297 -256.33480835]
[405.89547729 -241.45474243]
[402.11996460 -226.91920471]
[396.65173340 -212.93225098]
[389.56759644 -199.69023132]
[380.96694946 -187.37904358]
[370.97058105 -176.17150879]
[359.71878052 -166.22499084]
[347.36953735 -157.67909241]
[334.09619141 -150.65379333]
[320.08508301 -145.24772644]
[305.53292847 -141.53678894]
[290.64401245 -139.57305908]
[275.62731934 -139.38410950]
[260.69369507 -140.97259521]
[246.05278015 -144.31622314]
[231.91009521 -149.36805725]
[225.22990417 -135.93768311]
[218.54971313 -122.50730133]
[211.86952209 -109.07692719]
[205.18931580 -95.64654541]
[198.50912476 -82.21617126]
[191.82893372 -68.78579712]
[185.14874268 -55.35541916]
[178.46855164 -41.92504501]
[171.78834534 -28.49466896]
[165.10815430 -15.06429195]
[158.52812195 -1.58455765]
[152.04862976 11.94378757]
[151.99438477 19.33424377]
[145.37063599 25.62422180]
[138.69044495 39.05459595]
[132.01023865 52.48497391]
[125.33004761 65.91535187]
[134.59255981 75.36811829]
[140.49534607 87.21321106]
[142.46510315 100.30019379]
[140.31051636 113.35802460]
[134.24085999 125.11847687]
[124.84564209 134.43934631]
[113.03733063 140.41537476]
[99.96279907 142.46614075]
[86.89187622 140.39247131]
[79.81477356 153.61799622]
[81.80738831 174.95440674]
[63.82826996 185.08930969]
[57.34877396 198.61764526]
[64.56153870 212.22949219]
[62.40144730 227.30223083]
[51.90433502 238.08529663]
[37.24601364 240.58959961]
[30.76651573 254.11795044]
[24.28701973 267.64630127]
[37.31839371 275.08813477]
[49.77880478 283.45089722]
[61.60329437 292.69100952]
[72.73021698 302.76022339]
[83.10154724 313.60610962]
[92.66323090 325.17208862]
[101.36540985 337.39788818]
[109.16271210 350.21972656]
[116.01448822 363.57080078]
[121.88500977 377.38146973]
[126.74368286 391.57974243]
[130.56517029 406.09161377]
[133.32954407 420.84136963]
[135.02239990 435.75219727]
[135.63490295 450.74627686]
[135.16386414 465.74545288]
[133.61174011 480.67156982]
[130.98661804 495.44677734]
[127.30219269 509.99401855]
[122.57766724 524.23748779]
[116.83767700 538.10296631]
[110.11214447 551.51806641]
[102.43613434 564.41290283]
[93.84967041 576.72021484]
[84.39752197 588.37585449]
[74.12895203 599.31909180]
[63.09751129 609.49285889]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 183]
[59 182]
[60 181]
[64 177]
[65 176]
[70 174]
[71 173]
[78 164]
[79 163]
[80 162]
[81 161]
[82 159]
[83 158]
[85 157]
[86 156]
[87 155]
[88 154]
[89 153]
[90 152]
[91 151]
[92 150]
[93 149]
[94 148]
[95 147]
] def

init

% Start Annotations
58 183 0.32 0.6 colorpair
70 174 0.16 1 colorpair
79 163 0.0 0.6 colorpair
86 156 0.0 0.2 colorpair
87 155 0.16 0.2 colorpair
88 154 0.0 0.2 colorpair
89 153 0.0 0.6 colorpair
90 152 0.0 0.6 colorpair
91 151 0.0 0.6 colorpair
92 150 0.16 1 colorpair
93 149 0.0 0.2 colorpair
95 147 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
58 183 1 gmark
58 cmark
183 cmark
59 182 6 gmark
182 cmark
60 181 10 gmark
60 cmark
181 cmark
64 177 9 gmark
64 cmark
177 cmark
65 176 5 gmark
174 cmark
71 173 10 gmark
78 164 7 gmark
78 cmark
79 163 1 gmark
80 162 6 gmark
80 cmark
162 cmark
81 161 4 gmark
82 159 9 gmark
83 158 10 gmark
83 cmark
158 cmark
85 157 8 gmark
86 156 2 gmark
87 155 2 gmark
87 cmark
88 154 2 gmark
89 153 1 gmark
90 152 1 gmark
91 151 1 gmark
150 cmark
93 149 2 gmark
94 148 3 gmark
94 cmark
148 cmark
95 147 2 gmark

% End Annotations
showpage
end
%%EOF
