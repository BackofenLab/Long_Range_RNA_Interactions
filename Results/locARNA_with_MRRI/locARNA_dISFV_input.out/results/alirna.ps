%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.3
%%CreationDate: Fri Feb  2 15:22:12 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UAAU_AGAGUAAACUAGAAAAAGAAUUAUCAAUG_________GUGACUAAACCAAGAAAGCCCG__GAAAACCG_GCCGUCGAUAUAGUGA_ACGUGCAUUACC___CG__________CUCAUAAGAUAUAGAACAGCAUAUUGACACCUGGGAA_AGACCGGAGAUAC_CUCUGGUUU_\
) def
/coor [
[-5.03693438 520.87573242]
[-18.84792137 515.02282715]
[-31.74986649 507.37167358]
[-43.50996399 498.06039429]
[-53.91601562 487.25695801]
[-62.78024673 475.15631104]
[-69.94271851 461.97683716]
[-75.27417755 447.95629883]
[-78.67843628 433.34768677]
[-80.09405518 418.41464233]
[-79.49550629 403.42660522]
[-76.89356995 388.65399170]
[-72.33521271 374.36337280]
[-65.90267181 360.81265259]
[-57.71203232 348.24627686]
[-47.91107941 336.89105225]
[-36.67666245 326.95184326]
[-24.21149826 318.60800171]
[-10.74050999 312.01010132]
[3.49322867 307.27716064]
[18.23288155 304.49459839]
[33.21248627 303.71264648]
[48.16174698 304.94537354]
[62.81091309 308.17056274]
[76.89566040 313.33001709]
[90.16183472 320.33062744]
[102.37006378 329.04608154]
[113.30005646 339.31912231]
[122.74902344 350.95648193]
[120.95080566 336.06463623]
[119.15258789 321.17282104]
[117.35437012 306.28100586]
[115.55615234 291.38919067]
[113.75793457 276.49734497]
[97.16613770 277.01007080]
[80.59925842 275.96649170]
[64.20295715 273.37579346]
[48.12137985 269.26077271]
[32.49592972 263.65756226]
[17.46398544 256.61547852]
[3.15770769 248.19638062]
[-10.29712009 238.47433472]
[-22.78220177 227.53480530]
[-34.18776703 215.47398376]
[-44.41353607 202.39788818]
[-53.36960220 188.42150879]
[-60.97722626 173.66770935]
[-67.16951752 158.26620483]
[-71.89202881 142.35243225]
[-75.10324860 126.06627655]
[-76.77493286 109.55094910]
[-76.89239502 92.95165253]
[-75.45458984 76.41432190]
[-72.47416687 60.08436203]
[-67.97733307 44.10534668]
[-62.00362015 28.61776161]
[-54.60555267 13.75777817]
[-45.84817123 -0.34395242]
[-35.80847168 -13.56344604]
[-24.57472992 -25.78447533]
[-34.66896439 -36.87980652]
[-44.76319885 -47.97513962]
[-54.85743713 -59.07047272]
[-65.04653931 -70.07875061]
[-75.32975006 -80.99916840]
[-90.70413971 -78.89971924]
[-104.36035919 -86.26771545]
[-111.04730988 -100.27001190]
[-108.19371796 -115.52244568]
[-96.89685822 -126.16013336]
[-81.50059509 -128.09268188]
[-67.92510986 -120.57698059]
[-61.39045334 -106.50296021]
[-64.40933228 -91.28238678]
[-54.12611771 -80.36196899]
[-47.23440170 -77.64097595]
[-43.76210403 -69.16471100]
[-33.66786575 -58.06937790]
[-23.57363129 -46.97404480]
[-13.47939682 -35.87871170]
[-4.03273916 -43.24031067]
[5.89003134 -49.94636154]
[16.24350357 -55.96617126]
[26.98029137 -61.27219009]
[38.05126190 -65.84013367]
[49.40574265 -69.64910126]
[60.99177170 -72.68165588]
[72.75632477 -74.92392731]
[84.64556122 -76.36563873]
[96.60507202 -77.00020599]
[108.58011627 -76.82471466]
[120.51589203 -75.83997345]
[132.35777283 -74.05048370]
[144.05157471 -71.46444702]
[155.54376221 -68.09368896]
[166.78175354 -63.95363617]
[172.90632629 -77.64632416]
[178.91313171 -91.39107513]
[184.91993713 -105.13582611]
[176.95344543 -118.45178223]
[178.36886597 -133.90415955]
[188.62194824 -145.55122375]
[203.77015686 -148.91442871]
[217.98872375 -142.70056152]
[225.81028748 -129.29896545]
[224.22732544 -113.86284637]
[213.84849548 -102.32769775]
[198.66468811 -99.12902069]
[192.65788269 -85.38426971]
[186.65107727 -71.63951111]
[186.85403442 -64.23287201]
[180.42137146 -57.71176529]
[193.30728149 -50.44715881]
[205.54171753 -42.13212967]
[217.03926086 -32.82472229]
[227.71963501 -22.58993340]
[237.50827026 -11.49921322]
[246.33680725 0.36999726]
[254.14361572 12.93482876]
[260.87417603 26.10755157]
[266.48153687 39.79619598]
[270.92648315 53.90518570]
[274.17803955 68.33601379]
[276.21347046 82.98791504]
[277.01855469 97.75859833]
[276.58770752 112.54492950]
[274.92391968 127.24367523]
[272.03881836 141.75219727]
[267.95251465 155.96920776]
[262.69354248 169.79544067]
[256.29867554 183.13436890]
[248.81250000 195.89283752]
[240.28732300 207.98178101]
[230.78265381 219.31678772]
[220.36485291 229.81872559]
[209.10665894 239.41426086]
[197.08666992 248.03639221]
[184.38882446 255.62493896]
[171.10177612 262.12692261]
[157.31829834 267.49688721]
[143.13461304 271.69741821]
[128.64974976 274.69912720]
[130.44796753 289.59097290]
[132.24618530 304.48278809]
[134.04440308 319.37460327]
[135.84262085 334.26641846]
[137.64083862 349.15826416]
[144.80387878 362.33743286]
[160.35722351 365.23641968]
[165.17378235 379.33074951]
[176.69200134 388.93963623]
[185.30943298 392.04507446]
[188.32360840 398.81369019]
[199.67517090 408.61889648]
[215.08255005 405.94558716]
[228.57762146 413.84606934]
[233.78840637 428.58993530]
[228.25453186 443.21560669]
[214.58894348 450.81729126]
[199.24409485 447.80569458]
[189.46536255 435.60281372]
[189.86996460 419.97045898]
[178.51840210 410.16525269]
[167.08309937 400.45785522]
[155.56489563 390.84893799]
[140.83540344 388.63726807]
[135.19499207 373.85565186]
[139.82321167 388.12377930]
[142.49740601 402.88348389]
[143.16928101 417.86840820]
[141.82675171 432.80822754]
[138.49401855 447.43328857]
[133.23121643 461.47976685]
[126.13333130 474.69412231]
[117.32841492 486.83801270]
[106.97534943 497.69223022]
[95.26095581 507.06094360]
[82.39659882 514.77508545]
[68.61441803 520.69555664]
[54.16308975 524.71539307]
[39.30338669 526.76214600]
[24.30343056 526.79882812]
] def
/pairs [
[29 147]
[30 146]
[31 145]
[32 144]
[33 143]
[34 142]
[60 80]
[61 79]
[62 78]
[63 77]
[64 75]
[65 74]
[96 112]
[97 110]
[98 109]
[99 108]
[148 167]
[150 165]
[151 164]
[153 163]
[154 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
29 147 2 gmark
31 145 2 gmark
31 cmark
145 cmark
60 80 2 gmark
60 cmark
80 cmark
61 79 1 gmark
79 cmark
62 78 2 gmark
62 cmark
78 cmark
63 77 1 gmark
64 75 1 gmark
65 74 2 gmark
96 112 2 gmark
96 cmark
112 cmark
97 110 2 gmark
97 cmark
98 109 2 gmark
99 108 2 gmark
99 cmark
108 cmark
151 cmark
164 cmark
153 cmark
163 cmark

% End Annotations
% show it
showpage
end
%%EOF
