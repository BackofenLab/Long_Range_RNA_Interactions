%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Jan 25 16:56:52 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________GAAUAAGUUUUUUGAAACAAAGGA_UUUGG___AAUGACUA__AAGA_AACCAGGAA__GACCCGGG__GAAAACCGGGUUGUCAAU_AUGCUAAAACGCGGAGCAACC_________________CACCCCAAAACCAAA_CACCAUAUUGACACCUGGGA__GAGACGAGGAGAUCCUCUGCUUCU__________A___\
) } def
/len { sequence length } bind def

/coor [
[-54.50695038 764.59246826]
[-69.05573273 768.25415039]
[-83.75319672 771.26409912]
[-98.57014465 773.61627197]
[-113.47717285 775.30609131]
[-128.44467163 776.33020020]
[-143.44294739 776.68652344]
[-158.44219971 776.37438965]
[-173.41265869 775.39434814]
[-188.32458496 773.74841309]
[-203.14840698 771.43981934]
[-217.85466003 768.47320557]
[-232.41416931 764.85437012]
[-246.79800415 760.59057617]
[-260.97763062 755.69024658]
[-274.92489624 750.16308594]
[-288.61209106 744.02014160]
[-302.01202393 737.27362061]
[-315.09814453 729.93682861]
[-327.84445190 722.02435303]
[-340.22561646 713.55194092]
[-352.21704102 704.53637695]
[-363.79498291 694.99560547]
[-374.93643188 684.94854736]
[-385.61923218 674.41516113]
[-395.82217407 663.41632080]
[-405.52505493 651.97387695]
[-414.70858765 640.11053467]
[-423.35452271 627.84991455]
[-431.44567871 615.21630859]
[-438.96603394 602.23486328]
[-445.90063477 588.93121338]
[-452.23571777 575.33190918]
[-457.95870972 561.46386719]
[-463.05822754 547.35467529]
[-467.52416992 533.03228760]
[-471.34765625 518.52514648]
[-474.52111816 503.86215210]
[-477.03820801 489.07232666]
[-478.89398193 474.18502808]
[-480.08471680 459.22985840]
[-480.60806274 444.23651123]
[-480.46301270 429.23471069]
[-479.64978027 414.25427246]
[-478.17004395 399.32492065]
[-476.02673340 384.47631836]
[-473.22406006 369.73791504]
[-469.76763916 355.13900757]
[-465.66430664 340.70855713]
[-460.92221069 326.47525024]
[-455.55078125 312.46728516]
[-449.56066895 298.71252441]
[-442.96377563 285.23825073]
[-435.77319336 272.07122803]
[-428.00320435 259.23760986]
[-419.66921997 246.76283264]
[-410.78781128 234.67170715]
[-401.37658691 222.98822021]
[-391.45422363 211.73558044]
[-381.04046631 200.93611145]
[-370.15594482 190.61126709]
[-358.82229614 180.78155518]
[-347.06201172 171.46646118]
[-334.89846802 162.68450928]
[-322.35577393 154.45312500]
[-309.45883179 146.78865051]
[-296.23327637 139.70629883]
[-282.70535278 133.22013855]
[-268.90191650 127.34304047]
[-254.85038757 122.08667755]
[-240.57865906 117.46148682]
[-226.11503601 113.47664642]
[-211.48828125 110.14006805]
[-196.72740173 107.45838928]
[-181.86170959 105.43691254]
[-166.92073059 104.07967377]
[-151.93412781 103.38935089]
[-136.93164062 103.36732483]
[-121.94306946 104.01362610]
[-106.99816895 105.32698822]
[-92.12660980 107.30479431]
[-77.35791779 109.94311523]
[-62.72141647 113.23671722]
[-48.24616623 117.17906189]
[-33.96090317 121.76232147]
[-19.89399147 126.97739410]
[-6.07335997 132.81393433]
[7.47355270 139.26033020]
[20.71984863 146.30381775]
[33.63923264 153.93038940]
[46.20604706 162.12489319]
[54.95074081 149.93759155]
[63.69543076 137.75028992]
[72.44012451 125.56298828]
[81.18481445 113.37568665]
[89.92951202 101.18838501]
[91.69627380 93.32452393]
[98.89517975 88.88657379]
[107.81950378 76.83018494]
[116.74383545 64.77380371]
[125.66815948 52.71741867]
[114.71614075 42.44270706]
[105.03102112 30.96598816]
[96.74378967 18.44247818]
[89.96651459 5.04154348]
[84.79085541 -9.05558586]
[81.28680420 -23.65826225]
[79.50175476 -38.56900024]
[79.45983887 -53.58615112]
[81.16162109 -68.50662231]
[84.58410645 -83.12863159]
[89.68098450 -97.25443268]
[96.38334656 -110.69299316]
[104.60054016 -123.26256561]
[114.22144318 -134.79316711]
[125.11593628 -145.12886047]
[137.13668823 -154.12986755]
[150.12112427 -161.67445374]
[163.89366150 -167.66058350]
[178.26803589 -172.00732422]
[193.04983521 -174.65586853]
[208.03916931 -175.57038879]
[223.03332520 -174.73855591]
[237.82951355 -172.17158508]
[252.22763062 -167.90420532]
[266.03295898 -161.99412537]
[279.05883789 -154.52127075]
[291.12905884 -145.58670044]
[302.08038330 -135.31124878]
[311.76473999 -123.83389282]
[320.05111694 -111.30982971]
[326.82751465 -97.90843964]
[332.00222778 -83.81096649]
[335.50531006 -69.20805359]
[337.28936768 -54.29719925]
[337.33026123 -39.28004837]
[335.62750244 -24.35969162]
[332.20404053 -9.73791027]
[327.10620117 4.38755226]
[320.40295410 17.82566452]
[312.18490601 30.39469337]
[302.56326294 41.92465591]
[291.66806030 52.25962067]
[279.64672852 61.25982285]
[266.66177368 68.80354309]
[252.88883972 74.78875732]
[238.51417542 79.13452911]
[223.73219299 81.78208160]
[208.74279785 82.69561768]
[193.74870300 81.86277008]
[178.95269775 79.29481506]
[164.55485535 75.02647400]
[150.74990845 69.11547089]
[137.72454834 61.64174652]
[128.80021667 73.69812775]
[119.87589264 85.75451660]
[110.95156097 97.81089783]
[102.11681366 109.93307495]
[93.37211609 122.12037659]
[84.62742615 134.30767822]
[75.88273621 146.49497986]
[67.13804626 158.68228149]
[58.39335251 170.86958313]
[70.18100739 180.15000916]
[81.54354095 189.94631958]
[92.45840454 200.23907471]
[102.90392303 211.00782776]
[112.85935974 222.23121643]
[122.30493927 233.88693237]
[131.22192383 245.95185852]
[139.59259033 258.40203857]
[147.40034485 271.21273804]
[154.62966919 284.35852051]
[161.26620483 297.81332397]
[167.29678345 311.55038452]
[172.70942688 325.54248047]
[177.49340820 339.76177979]
[181.63920593 354.18008423]
[185.13859558 368.76873779]
[187.98463440 383.49880981]
[190.17167664 398.34103394]
[191.69535828 413.26596069]
[192.55267334 428.24395752]
[192.74191284 443.24526978]
[192.26271057 458.24011230]
[191.11599731 473.19869995]
[189.30407715 488.09140015]
[186.83052063 502.88858032]
[183.70025635 517.56085205]
[179.91949463 532.07916260]
[175.49574280 546.41461182]
[170.43778992 560.53875732]
[164.75564575 574.42358398]
[158.46063232 588.04150391]
[151.56523132 601.36553955]
[144.08312988 614.36907959]
[136.02919006 627.02648926]
[127.41940308 639.31250000]
[118.27085114 651.20275879]
[108.60171509 662.67370605]
[98.43116760 673.70257568]
[87.77942657 684.26739502]
[76.66762543 694.34722900]
[65.11783600 703.92199707]
[53.15297699 712.97283936]
[40.79681015 721.48168945]
[28.07386971 729.43164062]
[15.00941277 736.80688477]
[1.62937891 743.59289551]
[-12.03966808 749.77612305]
[-25.97058868 755.34429932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[91 163]
[92 162]
[93 161]
[94 160]
[95 159]
[96 158]
[98 157]
[99 156]
[100 155]
[101 154]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
91 163 16 gmark
91 cmark
163 cmark
92 162 23 gmark
92 cmark
162 cmark
93 161 17 gmark
93 cmark
161 cmark
94 160 10 gmark
94 cmark
160 cmark
95 159 17 gmark
95 cmark
159 cmark
96 158 16 gmark
96 cmark
158 cmark
98 157 19 gmark
98 cmark
157 cmark
99 156 12 gmark
99 cmark
156 cmark
100 155 14 gmark
100 cmark
155 cmark
101 154 13 gmark
101 cmark
154 cmark

% End Annotations
showpage
end
%%EOF
