%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Feb  5 19:43:03 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___U____UAACACAGUGUGUAAAAUUUCAUAGGAGAGUAU_UGU___AAUG______AA_AAAAAACCAGGAAGGCACGGGGCAAACCGGGCUGUCAAUAUGCUAAAACGCGGAGCGACCCGCG____________________________GGUUAGAGGAGACCCCCCCCC_________CAACAGAAAAAAAAAACAGC__AUAUUGACACCUGGGAA__AGACCAGAGG_____AUUUUCUGCUCU_CCG\
CAACACCAGCCAC__A__\
) } def
/len { sequence length } bind def

/coor [
[51.50127029 800.31024170]
[37.09073257 804.48242188]
[22.51298904 808.02648926]
[7.79540443 810.93572998]
[-7.03438854 813.20465088]
[-21.94854927 814.82904053]
[-36.91907883 815.80590820]
[-51.91786575 816.13330078]
[-66.91676331 815.81066895]
[-81.88759613 814.83856201]
[-96.80226898 813.21887207]
[-111.63278198 810.95465088]
[-126.35128784 808.05010986]
[-140.93016052 804.51068115]
[-155.34202576 800.34301758]
[-169.55981445 795.55499268]
[-183.55685425 790.15557861]
[-197.30685425 784.15490723]
[-210.78399658 777.56420898]
[-223.96299744 770.39587402]
[-236.81910706 762.66333008]
[-249.32817078 754.38122559]
[-261.46673584 745.56494141]
[-273.21197510 736.23114014]
[-284.54190063 726.39733887]
[-295.43518066 716.08190918]
[-305.87136841 705.30432129]
[-315.83090210 694.08477783]
[-325.29504395 682.44427490]
[-334.24609375 670.40478516]
[-342.66717529 657.98883057]
[-350.54251099 645.21972656]
[-357.85729980 632.12145996]
[-364.59783936 618.71862793]
[-370.75146484 605.03637695]
[-376.30661011 591.10040283]
[-381.25283813 576.93682861]
[-385.58087158 562.57232666]
[-389.28262329 548.03387451]
[-392.35107422 533.34863281]
[-394.78051758 518.54431152]
[-396.56634521 503.64859009]
[-397.70526123 488.68951416]
[-398.19509888 473.69515991]
[-398.03494263 458.69366455]
[-397.22506714 443.71316528]
[-395.76702881 428.78182983]
[-393.66354370 413.92767334]
[-390.91857910 399.17855835]
[-387.53729248 384.56219482]
[-383.52600098 370.10604858]
[-378.89224243 355.83721924]
[-373.64471436 341.78253174]
[-367.79330444 327.96835327]
[-361.34896851 314.42059326]
[-354.32382202 301.16473389]
[-346.73101807 288.22564697]
[-338.58483887 275.62759399]
[-329.90057373 263.39425659]
[-320.69454956 251.54858398]
[-310.98400879 240.11283875]
[-300.78720093 229.10847473]
[-290.12326050 218.55615234]
[-279.01223755 208.47569275]
[-267.47494507 198.88600159]
[-255.53309631 189.80509949]
[-243.20906067 181.25003052]
[-230.52601624 173.23684692]
[-217.50775146 165.78059387]
[-204.17869568 158.89529419]
[-190.56390381 152.59384155]
[-176.68891907 146.88809204]
[-162.57978821 141.78874207]
[-148.26301575 137.30535889]
[-133.76545715 133.44638062]
[-119.11434174 130.21903992]
[-104.33717346 127.62939453]
[-89.46170044 125.68231201]
[-74.51583862 124.38144684]
[-59.52766418 123.72923279]
[-44.52529907 123.72690582]
[-29.53691864 124.37446594]
[-14.59066010 125.67069244]
[0.28541875 127.61316681]
[15.06338787 130.19822693]
[29.71550369 133.42102051]
[44.21425629 137.27549744]
[58.53242874 141.75442505]
[72.64314270 146.84939575]
[70.32313538 132.13658142]
[82.72445679 122.31224060]
[88.42496490 108.43765259]
[86.75074005 94.55641937]
[97.70044708 85.86184692]
[103.40094757 71.98725128]
[109.10145569 58.11266327]
[114.80195618 44.23807526]
[120.50246429 30.36348534]
[126.20296478 16.48889351]
[131.90347290 2.61430454]
[137.60397339 -11.26028538]
[143.30448914 -25.13487625]
[148.84553528 -39.07391357]
[154.22640991 -53.07556152]
[159.60726929 -67.07721710]
[145.97840881 -73.35518646]
[132.78450012 -80.50218964]
[120.08088684 -88.48825073]
[107.92086029 -97.27986908]
[96.35540771 -106.84016418]
[85.43305206 -117.12904358]
[75.19960022 -128.10334778]
[65.69798279 -139.71705627]
[56.96804428 -151.92144775]
[49.04640198 -164.66532898]
[41.96628952 -177.89524841]
[35.75739670 -191.55572510]
[30.44577026 -205.58944702]
[26.05368614 -219.93757629]
[22.59956741 -234.53990173]
[20.09790230 -249.33518982]
[18.55918503 -264.26138306]
[17.98986626 -279.25588989]
[18.39233589 -294.25576782]
[19.76490593 -309.19815063]
[22.10181808 -324.02035522]
[25.39327240 -338.66021729]
[29.62546349 -353.05630493]
[34.78063583 -367.14825439]
[40.83717346 -380.87695312]
[47.76966476 -394.18484497]
[55.54903793 -407.01605225]
[64.14266205 -419.31680298]
[73.51449585 -431.03549194]
[83.62522125 -442.12298584]
[94.43243408 -452.53271484]
[105.89081573 -462.22109985]
[117.95228577 -471.14746094]
[130.56626892 -479.27435303]
[143.67985535 -486.56768799]
[157.23803711 -492.99688721]
[171.18394470 -498.53500366]
[185.45907593 -503.15875244]
[200.00358582 -506.84881592]
[214.75643921 -509.58963013]
[229.65576172 -511.36978149]
[244.63908386 -512.18176270]
[259.64352417 -512.02215576]
[274.60617065 -510.89163208]
[289.46426392 -508.79495239]
[304.15548706 -505.74090576]
[318.61819458 -501.74230957]
[332.79174805 -496.81591797]
[346.61669922 -490.98242188]
[360.03503418 -484.26623535]
[372.99050903 -476.69558716]
[385.42874146 -468.30221558]
[397.29760742 -459.12130737]
[408.54730225 -449.19137573]
[419.13064575 -438.55407715]
[429.00320435 -427.25402832]
[438.12365723 -415.33865356]
[446.45367432 -402.85787964]
[453.95831299 -389.86407471]
[460.60617065 -376.41174316]
[466.36929321 -362.55731201]
[471.22351074 -348.35888672]
[475.14852905 -333.87600708]
[478.12780762 -319.16946411]
[480.14889526 -304.30090332]
[481.20327759 -289.33270264]
[481.28659058 -274.32763672]
[480.39843750 -259.34863281]
[478.54254150 -244.45855713]
[475.72671509 -229.71983337]
[471.96273804 -215.19427490]
[467.26644897 -200.94284058]
[461.65750122 -187.02528381]
[455.15942383 -173.49996948]
[447.79946899 -160.42364502]
[439.60852051 -147.85116577]
[430.62094116 -135.83523560]
[420.87442017 -124.42628479]
[410.40985107 -113.67214966]
[399.27108765 -103.61794281]
[387.50488281 -94.30583191]
[375.16058350 -85.77487946]
[362.28997803 -78.06085968]
[348.94702148 -71.19613647]
[335.18768311 -65.20950317]
[321.06970215 -60.12606430]
[306.65228271 -55.96714401]
[291.99588013 -52.75018692]
[277.16198730 -50.48868561]
[262.21279907 -49.19212723]
[247.21104431 -48.86595154]
[232.21965027 -49.51152039]
[217.30146790 -51.12612915]
[202.51908875 -53.70300674]
[187.93452454 -57.23134613]
[173.60893250 -61.69634247]
[168.22805786 -47.69469070]
[162.84718323 -33.69304276]
[163.91836548 -29.07360840]
[162.12515259 -23.73034286]
[157.17907715 -19.43437004]
[151.47856140 -5.55978107]
[145.77806091 8.31480885]
[140.07756042 22.18939972]
[134.37705994 36.06398773]
[128.67654419 49.93857956]
[122.97604370 63.81316757]
[117.27554321 77.68775940]
[111.57503510 91.56234741]
[113.24925995 105.44358063]
[102.29955292 114.13815308]
[96.59905243 128.01274109]
[98.51131439 143.71795654]
[86.51773071 152.54991150]
[100.13452148 158.84703064]
[113.46575165 165.72811890]
[126.48638153 173.18023682]
[139.17198181 181.18939209]
[151.49871826 189.74055481]
[163.44345093 198.81767273]
[174.98377991 208.40370178]
[186.09800720 218.48063660]
[196.76527405 229.02958679]
[206.96557617 240.03071594]
[216.67973328 251.46337891]
[225.88954163 263.30612183]
[234.57768250 275.53671265]
[242.72784424 288.13217163]
[250.32473755 301.06884766]
[257.35409546 314.32247925]
[263.80273438 327.86819458]
[269.65853882 341.68051147]
[274.91049194 355.73355103]
[279.54879761 370.00091553]
[283.56466675 384.45578003]
[286.95059204 399.07107544]
[289.70025635 413.81930542]
[291.80844116 428.67279053]
[293.27120972 443.60366821]
[294.08581543 458.58389282]
[294.25076294 473.58535767]
[293.76568604 488.57989502]
[292.63150024 503.53930664]
[290.85037231 518.43554688]
[288.42562866 533.24066162]
[285.36184692 547.92687988]
[281.66470337 562.46655273]
[277.34121704 576.83239746]
[272.39947510 590.99749756]
[266.84875488 604.93524170]
[260.69949341 618.61944580]
[253.96321106 632.02441406]
[246.65255737 645.12500000]
[238.78126526 657.89660645]
[230.36412048 670.31524658]
[221.41691589 682.35760498]
[211.95643616 694.00109863]
[202.00047302 705.22381592]
[191.56768799 716.00469971]
[180.67768860 726.32354736]
[169.35090637 736.16094971]
[157.60861206 745.49853516]
[145.47285461 754.31860352]
[132.96640015 762.60473633]
[120.11274719 770.34130859]
[106.93602753 777.51379395]
[93.46096802 784.10876465]
[79.71286774 790.11383057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[89 219]
[91 217]
[92 216]
[94 214]
[95 213]
[96 212]
[97 211]
[98 210]
[99 209]
[100 208]
[101 207]
[102 206]
[103 203]
[104 202]
[105 201]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
89 219 22 gmark
91 217 11 gmark
91 cmark
217 cmark
92 216 21 gmark
92 cmark
216 cmark
94 214 19 gmark
94 cmark
214 cmark
95 213 21 gmark
95 cmark
213 cmark
96 212 5 gmark
96 cmark
212 cmark
97 211 9 gmark
97 cmark
211 cmark
98 210 7 gmark
98 cmark
210 cmark
99 209 13 gmark
99 cmark
209 cmark
100 208 15 gmark
100 cmark
208 cmark
101 207 10 gmark
101 cmark
207 cmark
102 206 20 gmark
102 cmark
206 cmark
103 203 14 gmark
103 cmark
203 cmark
104 202 15 gmark
104 cmark
202 cmark
105 201 16 gmark
105 cmark
201 cmark

% End Annotations
showpage
end
%%EOF
