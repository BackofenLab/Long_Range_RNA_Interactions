%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.5.1
%%CreationDate: Thu Jan 18 18:27:28 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______UGUGAA__AGUUAUAUGGAGAGUGU_UGU__CAAUGACU___AAAAAACCAGGAAGA_CC___GGAGGAAGCCGGGCUGUCAAUAUGCUGAAACGCGCCGCAACCCGCG______________CACCGCACACACAAAACAGCAUAUUGACACCUGGGAA_AAGACCGGAGGAUCUUCUGCUCU_________________C_\
) } def
/len { sequence length } bind def

/coor [
[24.02676773 689.99560547]
[9.49048805 693.70935059]
[-5.21402788 696.68811035]
[-20.04963493 698.92419434]
[-34.97885513 700.41210938]
[-49.96398163 701.14801025]
[-64.96715546 701.13006592]
[-79.95046997 700.35833740]
[-94.87609100 698.83471680]
[-109.70630646 696.56311035]
[-124.40365601 693.54925537]
[-138.93101501 689.80072021]
[-153.25167847 685.32702637]
[-167.32948303 680.13940430]
[-181.12884521 674.25103760]
[-194.61492920 667.67675781]
[-207.75366211 660.43322754]
[-220.51184082 652.53863525]
[-232.85725403 644.01300049]
[-244.75871277 634.87786865]
[-256.18615723 625.15631104]
[-267.11068726 614.87280273]
[-277.50476074 604.05346680]
[-287.34207153 592.72546387]
[-296.59780884 580.91754150]
[-305.24856567 568.65948486]
[-313.27249146 555.98229980]
[-320.64932251 542.91790771]
[-327.36041260 529.49938965]
[-333.38885498 515.76062012]
[-338.71936035 501.73632812]
[-343.33850098 487.46191406]
[-347.23458862 472.97341919]
[-350.39779663 458.30749512]
[-352.82012939 443.50115967]
[-354.49548340 428.59179688]
[-355.41958618 413.61712646]
[-355.59014893 398.61489868]
[-355.00668335 383.62307739]
[-353.67071533 368.67947388]
[-351.58563232 353.82189941]
[-348.75665283 339.08782959]
[-345.19091797 324.51452637]
[-340.89749146 310.13879395]
[-335.88717651 295.99694824]
[-330.17263794 282.12469482]
[-323.76831055 268.55706787]
[-316.69036865 255.32836914]
[-308.95672607 242.47201538]
[-300.58688354 230.02046204]
[-291.60198975 218.00517273]
[-282.02471924 206.45651245]
[-271.87930298 195.40362549]
[-261.19137573 184.87446594]
[-249.98789978 174.89559937]
[-238.29719543 165.49226379]
[-226.14878845 156.68818665]
[-213.57336426 148.50561523]
[-200.60270691 140.96522522]
[-187.26956177 134.08607483]
[-173.60762024 127.88552094]
[-159.65139771 122.37923431]
[-145.43614197 117.58112335]
[-130.99775696 113.50331116]
[-116.37271881 110.15609741]
[-101.59797668 107.54793549]
[-86.71085358 105.68541718]
[-71.74894714 104.57324982]
[-56.75006104 104.21423340]
[-41.75207901 104.60928345]
[-26.79289055 105.75740051]
[-11.91028309 107.65567780]
[2.85814929 110.29933167]
[17.47509956 113.68167114]
[31.90364456 117.79416656]
[46.10733414 122.62641144]
[60.05029297 128.16621399]
[73.69729614 134.39958191]
[80.60693359 121.08579254]
[72.67281342 108.59804535]
[72.02728271 93.81706238]
[78.84252167 80.68517303]
[91.30078888 72.70484924]
[106.07927704 72.00457001]
[112.98891449 58.69078445]
[119.89855194 45.37699890]
[126.80818939 32.06321335]
[133.71781921 18.74942589]
[140.62745667 5.43563843]
[147.53709412 -7.87814808]
[154.44673157 -21.19193459]
[161.35636902 -34.50572205]
[168.26600647 -47.81950760]
[175.17564392 -61.13329697]
[182.08528137 -74.44708252]
[169.66682434 -82.89208984]
[158.33436584 -92.74662018]
[148.24700928 -103.87234497]
[139.54635620 -116.11306000]
[132.35456848 -129.29692078]
[126.77258301 -143.23887634]
[122.87878418 -157.74316406]
[120.72781372 -172.60620117]
[120.34988403 -187.61930847]
[121.75029755 -202.57174683]
[124.90938568 -217.25358582]
[129.78280640 -231.45872498]
[136.30215454 -244.98776245]
[144.37588501 -257.65072632]
[153.89067078 -269.26989746]
[164.71295166 -279.68215942]
[176.69076538 -288.74130249]
[189.65599060 -296.32015991]
[203.42662048 -302.31237793]
[217.80931091 -306.63378906]
[232.60215759 -309.22372437]
[247.59750366 -310.04586792]
[262.58483887 -309.08862305]
[277.35375977 -306.36547852]
[291.69692993 -301.91464233]
[305.41299438 -295.79861450]
[318.30938721 -288.10321045]
[330.20510864 -278.93652344]
[340.93310547 -268.42718506]
[350.34280396 -256.72274780]
[358.30209351 -243.98751831]
[364.69927979 -230.40029907]
[369.44448853 -216.15180969]
[372.47116089 -201.44209290]
[373.73678589 -186.47766113]
[373.22357178 -171.46855164]
[370.93878174 -156.62551880]
[366.91442871 -142.15689087]
[361.20703125 -128.26580811]
[353.89672852 -115.14728546]
[345.08615112 -102.98546600]
[334.89892578 -91.95109558]
[323.47814941 -82.19908142]
[310.98410034 -73.86631775]
[297.59216309 -67.06978607]
[283.49038696 -61.90490723]
[268.87670898 -58.44418335]
[253.95626831 -56.73619080]
[238.93856812 -56.80491638]
[224.03439331 -58.64938736]
[209.45300293 -62.24371719]
[195.39907837 -67.53744507]
[188.48944092 -54.22365952]
[181.57980347 -40.90987015]
[174.67016602 -27.59608459]
[167.76052856 -14.28229809]
[160.85089111 -0.96851152]
[153.94125366 12.34527493]
[147.03161621 25.65906143]
[140.12197876 38.97285080]
[133.21234131 52.28663635]
[126.30270386 65.60042572]
[119.39306641 78.91420746]
[127.32718658 91.40195465]
[127.97271729 106.18293762]
[121.15747833 119.31482697]
[108.69921112 127.29515076]
[93.92072296 127.99542999]
[87.01108551 141.30921936]
[99.96366882 148.88059998]
[112.51947784 157.09323120]
[124.64678955 165.92633057]
[136.31497192 175.35762024]
[147.49455261 185.36325073]
[158.15727234 195.91795349]
[168.27621460 206.99505615]
[177.82582092 218.56660461]
[186.78195190 230.60334778]
[195.12199402 243.07487488]
[202.82487488 255.94970703]
[209.87113953 269.19528198]
[216.24299622 282.77819824]
[221.92433167 296.66406250]
[226.90080261 310.81787109]
[231.15985107 325.20385742]
[234.69068909 339.78564453]
[237.48442078 354.52642822]
[239.53398132 369.38894653]
[240.83419800 384.33569336]
[241.38177490 399.32885742]
[241.17535400 414.33062744]
[240.21542358 429.30307007]
[238.50442505 444.20837402]
[236.04667664 459.00888062]
[232.84840393 473.66720581]
[228.91766357 488.14633179]
[224.26438904 502.40963745]
[218.90034485 516.42114258]
[212.83908081 530.14544678]
[206.09588623 543.54791260]
[198.68782043 556.59460449]
[190.63359070 569.25256348]
[181.95355225 581.48992920]
[172.66960144 593.27563477]
[162.80522156 604.58001709]
[152.38529968 615.37451172]
[141.43618774 625.63183594]
[129.98553467 635.32604980]
[118.06226349 644.43273926]
[105.69649506 652.92877197]
[92.91946411 660.79278564]
[79.76344299 668.00494385]
[66.26167297 674.54693604]
[52.44826126 680.40228271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 164]
[79 163]
[84 158]
[85 157]
[86 156]
[87 155]
[88 154]
[89 153]
[90 152]
[91 151]
[92 150]
[93 149]
[94 148]
[95 147]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
78 164 23 gmark
78 cmark
164 cmark
79 163 8 gmark
79 cmark
163 cmark
84 158 21 gmark
84 cmark
158 cmark
85 157 24 gmark
157 cmark
86 156 8 gmark
86 cmark
156 cmark
87 155 12 gmark
87 cmark
155 cmark
88 154 17 gmark
88 cmark
154 cmark
89 153 9 gmark
89 cmark
153 cmark
90 152 15 gmark
90 cmark
152 cmark
91 151 15 gmark
91 cmark
151 cmark
92 150 9 gmark
92 cmark
150 cmark
93 149 10 gmark
93 cmark
149 cmark
94 148 19 gmark
94 cmark
148 cmark
95 147 19 gmark
95 cmark
147 cmark

% End Annotations
showpage
end
%%EOF
