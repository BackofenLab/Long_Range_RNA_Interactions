%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.5.1
%%CreationDate: Fri Jan 19 13:17:37 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______UUUGAAUAGUUUAAUAACAGAUGGUA______AUGACUAA_AAGAAACCAGGAAAA_CC___GGCAAAAGCCGGGCUGUCAAUAUGCUAAAGCGCAAAGCGACCCGCG______________ACGCG_ACACACAAAACAGCAUAUUGACACCUGGGA__AAGACCAGGAGAUCCUCUUC_CU________________U__\
) } def
/len { sequence length } bind def

/coor [
[12.21349430 725.66937256]
[-2.43788552 728.89886475]
[-17.23104858 731.39984131]
[-32.12979507 733.16613770]
[-47.09766006 734.19348145]
[-62.09801865 734.47937012]
[-77.09416199 734.02313232]
[-92.04939270 732.82574463]
[-106.92710876 730.89031982]
[-121.69090271 728.22143555]
[-136.30464172 724.82568359]
[-150.73257446 720.71142578]
[-164.93939209 715.88867188]
[-178.89031982 710.36926270]
[-192.55122375 704.16662598]
[-205.88865662 697.29602051]
[-218.86999512 689.77423096]
[-231.46348572 681.61968994]
[-243.63827515 672.85229492]
[-255.36459351 663.49359131]
[-266.61373901 653.56640625]
[-277.35818481 643.09503174]
[-287.57162476 632.10510254]
[-297.22909546 620.62359619]
[-306.30694580 608.67846680]
[-314.78292847 596.29907227]
[-322.63635254 583.51562500]
[-329.84796143 570.35943604]
[-336.40014648 556.86273193]
[-342.27682495 543.05847168]
[-347.46365356 528.98052979]
[-351.94793701 514.66326904]
[-355.71868896 500.14175415]
[-358.76666260 485.45153809]
[-361.08444214 470.62857056]
[-362.66632080 455.70913696]
[-363.50842285 440.72970581]
[-363.60873413 425.72695923]
[-362.96697998 410.73760986]
[-361.58471680 395.79830933]
[-359.46533203 380.94567871]
[-356.61404419 366.21603394]
[-353.03781128 351.64541626]
[-348.74536133 337.26950073]
[-343.74722290 323.12341309]
[-338.05563354 309.24185181]
[-331.68450928 295.65872192]
[-324.64941406 282.40728760]
[-316.96762085 269.51998901]
[-308.65789795 257.02835083]
[-299.74060059 244.96295166]
[-290.23751831 233.35330200]
[-280.17190552 222.22782898]
[-269.56845093 211.61373901]
[-258.45303345 201.53701782]
[-246.85289001 192.02233887]
[-234.79641724 183.09297180]
[-222.31307983 174.77075195]
[-209.43347168 167.07608032]
[-196.18908691 160.02777100]
[-182.61235046 153.64306641]
[-168.73646545 147.93759155]
[-154.59539795 142.92530823]
[-140.22377014 138.61849976]
[-125.65673065 135.02767944]
[-110.92993927 132.16165161]
[-96.07943726 130.02743530]
[-81.14154816 128.63024902]
[-66.15284729 127.97348785]
[-51.15000916 128.05879211]
[-36.16974640 128.88594055]
[-21.24871445 130.45289612]
[-6.42343521 132.75584412]
[8.26981544 135.78913879]
[22.79507828 139.54536438]
[37.11680984 144.01531982]
[51.19996262 149.18806458]
[65.01007080 155.05094910]
[71.54733276 141.55043030]
[78.08459473 128.04989624]
[84.62185669 114.54936981]
[79.06646729 103.15576935]
[81.01608276 90.63077545]
[89.77172089 81.46479034]
[102.19435883 78.94396973]
[108.93380737 65.54322815]
[115.67325592 52.14249039]
[122.41270447 38.74175262]
[129.15216064 25.34101295]
[135.89160156 11.94027233]
[142.63105774 -1.46046734]
[149.37049866 -14.86120701]
[156.10995483 -28.26194572]
[162.84939575 -41.66268539]
[150.32435608 -49.94878769]
[138.86726379 -59.65813828]
[128.63897705 -70.65443420]
[119.78308105 -82.78330231]
[112.42389679 -95.87447357]
[106.66474152 -109.74417114]
[102.58645630 -124.19767761]
[100.24629974 -139.03210449]
[99.67712402 -154.03918457]
[100.88691711 -169.00823975]
[103.85869598 -183.72914124]
[108.55073547 -197.99522400]
[114.89717865 -211.60621643]
[122.80892944 -224.37103271]
[132.17491150 -236.11048889]
[142.86364746 -246.65975952]
[154.72506714 -255.87077332]
[167.59268188 -263.61422729]
[181.28584290 -269.78137207]
[195.61230469 -274.28567505]
[210.37097168 -277.06390381]
[225.35461426 -278.07699585]
[240.35293579 -277.31082153]
[255.15533447 -274.77606201]
[269.55404663 -270.50833130]
[283.34692383 -264.56753540]
[296.34033203 -257.03707886]
[308.35186768 -248.02265930]
[319.21289062 -237.65086365]
[328.77096558 -226.06726074]
[336.89187622 -213.43447876]
[343.46160889 -199.92987061]
[348.38800049 -185.74299622]
[351.60183716 -171.07304382]
[353.05798340 -156.12593079]
[352.73605347 -141.11152649]
[350.64056396 -126.24057007]
[346.80087280 -111.72184753]
[341.27093506 -97.75917816]
[334.12835693 -84.54857635]
[325.47341919 -72.27549744]
[315.42764282 -61.11222839]
[304.13201904 -51.21549606]
[291.74514771 -42.72422791]
[278.44091797 -35.75762939]
[264.40606689 -30.41349983]
[249.83766174 -26.76686668]
[234.94020081 -24.86891747]
[219.92283630 -24.74629974]
[204.99638367 -26.40073586]
[190.37037659 -29.80899620]
[176.25013733 -34.92323685]
[169.51069641 -21.52249718]
[162.77124023 -8.12175751]
[156.03179932 5.27898216]
[149.29234314 18.67972183]
[142.55290222 32.08045959]
[135.81344604 45.48120117]
[129.07400513 58.88193893]
[122.33454895 72.28267670]
[115.59510040 85.68341827]
[121.13436890 101.22888947]
[113.83069611 116.02758789]
[98.12238312 121.08663177]
[91.58512115 134.58715820]
[85.04785919 148.08769226]
[78.51059723 161.58821106]
[91.67404938 168.78654480]
[104.46541595 176.62704468]
[116.85338593 185.09053040]
[128.80764771 194.15629578]
[140.29895020 203.80215454]
[151.29916382 214.00450134]
[161.78137207 224.73835754]
[171.71992493 235.97747803]
[181.09049988 247.69433594]
[189.87016296 259.86026001]
[198.03742981 272.44549561]
[205.57232666 285.41925049]
[212.45639038 298.74975586]
[218.67279053 312.40435791]
[224.20631409 326.34970093]
[229.04342651 340.55163574]
[233.17225647 354.97540283]
[236.58274841 369.58572388]
[239.26652527 384.34683228]
[241.21701050 399.22256470]
[242.42945862 414.17657471]
[242.90089417 429.17227173]
[242.63015747 444.17288208]
[241.61791992 459.14178467]
[239.86663818 474.04232788]
[237.38061523 488.83798218]
[234.16593933 503.49264526]
[230.23046875 517.97033691]
[225.58383179 532.23571777]
[220.23739624 546.25390625]
[214.20425415 559.99047852]
[207.49917603 573.41186523]
[200.13856506 586.48529053]
[192.14041138 599.17864990]
[183.52432251 611.46099854]
[174.31137085 623.30218506]
[164.52409363 634.67327881]
[154.18644714 645.54644775]
[143.32374573 655.89508057]
[131.96253967 665.69384766]
[120.13065338 674.91876221]
[107.85704041 683.54724121]
[95.17173004 691.55816650]
[82.10577393 698.93200684]
[68.69113922 705.65063477]
[54.96065521 711.69763184]
[40.94792175 717.05822754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 161]
[79 160]
[80 159]
[81 158]
[85 155]
[86 154]
[87 153]
[88 152]
[89 151]
[90 150]
[91 149]
[92 148]
[93 147]
[94 146]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
78 161 10 gmark
78 cmark
161 cmark
79 160 19 gmark
79 cmark
160 cmark
80 159 18 gmark
80 cmark
159 cmark
81 158 18 gmark
81 cmark
158 cmark
85 155 20 gmark
86 154 19 gmark
86 cmark
154 cmark
87 153 18 gmark
87 cmark
153 cmark
88 152 14 gmark
88 cmark
152 cmark
89 151 8 gmark
89 cmark
151 cmark
90 150 14 gmark
90 cmark
150 cmark
91 149 12 gmark
91 cmark
149 cmark
92 148 17 gmark
92 cmark
148 cmark
93 147 19 gmark
93 cmark
147 cmark
94 146 19 gmark
94 cmark
146 cmark

% End Annotations
showpage
end
%%EOF
