%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.5.1
%%CreationDate: Tue Jan 23 16:19:05 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__AGAUAUGUU__UAGAAAAGAAGAUUAUC______AUGACUA__AAAAAACCAGGAAAACCC___GGAGGAAACCGGGCUGUCAAUAUGCUAAAACGCGGGGCAAC______________________CGAACACACA_AAACAGCAUAUUGACAC_CUGGGAA_AAGACCGGAGGAUCUUCUGCUCU___________________\
) } def
/len { sequence length } bind def

/coor [
[155.07872009 427.23513794]
[140.23556519 429.38973999]
[125.31021881 430.87139893]
[110.33316803 431.67712402]
[95.33499908 431.80526733]
[80.34635925 431.25552368]
[65.39788055 430.02908325]
[50.52008438 428.12838745]
[35.74337387 425.55734253]
[21.09793472 422.32119751]
[6.61368895 418.42657471]
[-7.67977428 413.88143921]
[-21.75325394 408.69506836]
[-35.57799911 402.87802124]
[-49.12576675 396.44223022]
[-62.36887741 389.40084839]
[-75.28028107 381.76818848]
[-87.83359528 373.55993652]
[-100.00318146 364.79278564]
[-111.76416779 355.48471069]
[-123.09252930 345.65466309]
[-133.96513367 335.32278442]
[-144.35975647 324.51013184]
[-154.25517273 313.23883057]
[-163.63114929 301.53189087]
[-172.46855164 289.41323853]
[-180.74932861 276.90765381]
[-188.45652771 264.04061890]
[-195.57444763 250.83847046]
[-202.08851624 237.32815552]
[-207.98544312 223.53730774]
[-213.25315857 209.49406433]
[-217.88093567 195.22714233]
[-221.85928345 180.76567078]
[-225.18009949 166.13920593]
[-227.83659363 151.37762451]
[-229.82334900 136.51107788]
[-231.13627625 121.56993103]
[-231.77272034 106.58472443]
[-231.73136902 91.58606720]
[-231.01231384 76.60460663]
[-229.61701965 61.67093277]
[-227.54833984 46.81556320]
[-224.81048584 32.06884766]
[-221.40907288 17.46091080]
[-217.35104370 3.02159715]
[-212.64468384 -11.21959591]
[-207.29960632 -25.23357391]
[-201.32673645 -38.99170685]
[-194.73826599 -52.46588898]
[-187.54766846 -65.62859344]
[-179.76963806 -78.45292664]
[-171.42004395 -90.91268921]
[-162.51596069 -102.98242950]
[-153.07556152 -114.63748932]
[-143.11816406 -125.85405731]
[-132.66407776 -136.60922241]
[-121.73467255 -146.88101196]
[-110.35227966 -156.64842224]
[-98.54014587 -165.89152527]
[-86.32241058 -174.59143066]
[-73.72402191 -182.73036194]
[-60.77073669 -190.29168701]
[-47.48899841 -197.25996399]
[-33.90595245 -203.62097168]
[-20.04934502 -209.36167908]
[-5.94748306 -214.47039795]
[8.37082386 -218.93666077]
[22.87632370 -222.75134277]
[37.53938293 -225.90667725]
[52.33004379 -228.39620972]
[67.21809387 -230.21484375]
[82.17311096 -231.35887146]
[97.16455078 -231.82594299]
[112.16178131 -231.61511230]
[127.13417053 -230.72682190]
[142.05111694 -229.16287231]
[156.88217163 -226.92646790]
[171.59700012 -224.02217102]
[186.16557312 -220.45590210]
[200.55810547 -216.23498535]
[214.74522400 -211.36799622]
[228.69790649 -205.86491394]
[234.82640076 -219.55584717]
[240.95491028 -233.24676514]
[247.08340454 -246.93769836]
[253.21191406 -260.62863159]
[259.34042358 -274.31954956]
[265.46890259 -288.01046753]
[271.59741211 -301.70138550]
[277.72592163 -315.39233398]
[283.85440063 -329.08325195]
[270.95227051 -336.76770020]
[259.02947998 -345.89810181]
[248.24731445 -356.35092163]
[238.75157166 -367.98480225]
[230.67070007 -380.64245605]
[224.11395264 -394.15264893]
[219.17001343 -408.33270264]
[215.90574646 -422.99084473]
[214.36528015 -437.92883301]
[214.56947327 -452.94464111]
[216.51556396 -467.83523560]
[220.17720032 -482.39920044]
[225.50489807 -496.43957520]
[232.42658997 -509.76647949]
[240.84867859 -522.19970703]
[250.65725708 -533.57110596]
[261.71966553 -543.72686768]
[273.88632202 -552.52966309]
[286.99264526 -559.86041260]
[300.86145020 -565.62005615]
[315.30511475 -569.73065186]
[330.12832642 -572.13659668]
[345.13064575 -572.80535889]
[360.10916138 -571.72790527]
[374.86126709 -568.91876221]
[389.18753052 -564.41601562]
[402.89416504 -558.28045654]
[415.79580688 -550.59515381]
[427.71798706 -541.46398926]
[438.49945068 -531.01043701]
[447.99441528 -519.37591553]
[456.07443237 -506.71774292]
[462.63027954 -493.20709229]
[467.57327271 -479.02670288]
[470.83657837 -464.36834717]
[472.37603760 -449.43026733]
[472.17083740 -434.41445923]
[470.22375488 -419.52398682]
[466.56115723 -404.96029663]
[461.23251343 -390.92025757]
[454.30993652 -377.59381104]
[445.88702393 -365.16116333]
[436.07769775 -353.79040527]
[425.01458740 -343.63540649]
[412.84735107 -334.83340454]
[399.74053955 -327.50350952]
[385.87136841 -321.74481201]
[371.42742920 -317.63519287]
[356.60403442 -315.23022461]
[341.60168457 -314.56246948]
[326.62322998 -315.64093018]
[311.87130737 -318.45101929]
[297.54534912 -322.95474243]
[291.41683960 -309.26382446]
[285.28833008 -295.57290649]
[279.15985107 -281.88195801]
[273.03134155 -268.19104004]
[266.90283203 -254.50012207]
[260.77432251 -240.80918884]
[254.64582825 -227.11827087]
[248.51733398 -213.42733765]
[242.38882446 -199.73641968]
[255.78767395 -192.99606323]
[268.86825562 -185.65715027]
[281.60385132 -177.73464966]
[293.96844482 -169.24475098]
[305.93676758 -160.20480347]
[317.48437500 -150.63327026]
[328.58767700 -140.54971313]
[339.22399902 -129.97473145]
[349.37158203 -118.92992401]
[359.00970459 -107.43785095]
[368.11871338 -95.52199554]
[376.67996216 -83.20670319]
[384.67596436 -70.51712799]
[392.09039307 -57.47919464]
[398.90811157 -44.11954117]
[405.11514282 -30.46546364]
[410.69888306 -16.54485130]
[415.64785767 -2.38614440]
[419.95199585 11.98173141]
[423.60247803 26.52942276]
[426.59188843 41.22721100]
[428.91406250 56.04506683]
[430.56430054 70.95272064]
[431.53921509 85.91971588]
[431.83679199 100.91548157]
[431.45645142 115.90937042]
[430.39898682 130.87075806]
[428.66653442 145.76907349]
[426.26263428 160.57389832]
[423.19216919 175.25497437]
[419.46148682 189.78230286]
[415.07812500 204.12620544]
[410.05111694 218.25738525]
[404.39065552 232.14698792]
[398.10836792 245.76660156]
[391.21704102 259.08843994]
[383.73077393 272.08526611]
[375.66488647 284.73052979]
[367.03582764 296.99838257]
[357.86120605 308.86380005]
[348.15982056 320.30252075]
[337.95144653 331.29116821]
[327.25695801 341.80731201]
[316.09817505 351.82946777]
[304.49792480 361.33712769]
[292.47991943 370.31088257]
[280.06866455 378.73242188]
[267.28955078 386.58453369]
[254.16867065 393.85116577]
[240.73283386 400.51748657]
[227.00949097 406.56985474]
[213.02667236 411.99594116]
[198.81295776 416.78460693]
[184.39735413 420.92611694]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 154]
[84 153]
[85 152]
[86 151]
[87 150]
[88 149]
[89 148]
[90 147]
[91 146]
[92 145]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
83 154 15 gmark
83 cmark
154 cmark
84 153 19 gmark
84 cmark
153 cmark
85 152 19 gmark
85 cmark
152 cmark
86 151 9 gmark
86 cmark
151 cmark
87 150 12 gmark
87 cmark
150 cmark
88 149 16 gmark
88 cmark
149 cmark
89 148 5 gmark
89 cmark
148 cmark
90 147 16 gmark
90 cmark
147 cmark
91 146 17 gmark
91 cmark
146 cmark
92 145 20 gmark

% End Annotations
showpage
end
%%EOF
