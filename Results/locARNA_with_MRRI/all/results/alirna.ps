%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Sun Jan 28 18:36:04 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________UUAAGAGUUUUAUAGCAAGGAUGUGU__CAAUGACU___AAG___AAACCAGGAAGGCCGGGUGGAAGCCGGGCUGUCAAUAUGCUGAAACGCGCAGCAACCCGCG______________ACCCGCAAACACAAAACAGCAUAUUGACACCUGGGAA_AAGACCGGAGGAUCUUCUGCUU____________________\
) } def
/len { sequence length } bind def

/coor [
[165.70561218 425.26800537]
[150.94050598 427.90481567]
[136.07131958 429.87173462]
[121.12844086 431.16473389]
[106.14240265 431.78118896]
[91.14381409 431.71984863]
[76.16332245 430.98083496]
[61.23152161 429.56561279]
[46.37892532 427.47714233]
[31.63587189 424.71963501]
[17.03248405 421.29873657]
[2.59859300 417.22146606]
[-11.63631248 412.49612427]
[-25.64315224 407.13238525]
[-39.39331055 401.14117432]
[-52.85869598 394.53472900]
[-66.01180267 387.32659912]
[-78.82575226 379.53146362]
[-91.27437592 371.16528320]
[-103.33223724 362.24511719]
[-114.97470093 352.78918457]
[-126.17798615 342.81683350]
[-136.91920471 332.34841919]
[-147.17640686 321.40533447]
[-156.92863464 310.00991821]
[-166.15599060 298.18548584]
[-174.83959961 285.95614624]
[-182.96171570 273.34692383]
[-190.50576782 260.38357544]
[-197.45634460 247.09255981]
[-203.79922485 233.50105286]
[-209.52145386 219.63679504]
[-214.61135864 205.52813721]
[-219.05853271 191.20388794]
[-222.85388184 176.69331360]
[-225.98966980 162.02606201]
[-228.45947266 147.23210144]
[-230.25825500 132.34164429]
[-231.38233948 117.38510895]
[-231.82942200 102.39305878]
[-231.59860229 87.39611816]
[-230.69035339 72.42493439]
[-229.10652161 57.51007843]
[-226.85034180 42.68202972]
[-223.92642212 27.97107506]
[-220.34074402 13.40727329]
[-216.10063171 -0.97962517]
[-211.21475220 -15.16022778]
[-205.69306946 -29.10556602]
[-199.54687500 -42.78714752]
[-192.78871155 -56.17702484]
[-185.43241882 -69.24784088]
[-177.49299622 -81.97289276]
[-168.98666382 -94.32618713]
[-159.93081665 -106.28248596]
[-150.34394836 -117.81735992]
[-140.24563599 -128.90724182]
[-129.65652466 -139.52949524]
[-118.59823608 -149.66238403]
[-107.09336090 -159.28523254]
[-95.16540527 -168.37838745]
[-82.83874512 -176.92324829]
[-70.13854980 -184.90238953]
[-57.09077454 -192.29946899]
[-43.72207260 -199.09941101]
[-30.05975342 -205.28831482]
[-16.13173103 -210.85353088]
[-1.96645832 -215.78369141]
[12.40712643 -220.06871033]
[26.95965767 -223.69985962]
[41.66140747 -226.66972351]
[56.48233795 -228.97219849]
[71.39217377 -230.60261536]
[86.36045074 -231.55761719]
[101.35659027 -231.83528137]
[116.34996796 -231.43502808]
[131.30993652 -230.35766602]
[146.20594788 -228.60539246]
[161.00755310 -226.18180847]
[175.68452454 -223.09185791]
[190.20687866 -219.34184265]
[204.54495239 -214.93943787]
[218.66943359 -209.89363098]
[232.55149841 -204.21472168]
[246.16275024 -197.91432190]
[253.07238770 -211.22810364]
[259.98202515 -224.54190063]
[266.89166260 -237.85568237]
[273.80130005 -251.16946411]
[280.71093750 -264.48324585]
[287.62057495 -277.79705811]
[294.53021240 -291.11083984]
[301.43984985 -304.42462158]
[308.34948730 -317.73840332]
[315.25912476 -331.05218506]
[302.84066772 -339.49719238]
[291.50820923 -349.35174561]
[281.42083740 -360.47744751]
[272.72021484 -372.71817017]
[265.52841187 -385.90203857]
[259.94641113 -399.84399414]
[256.05261230 -414.34826660]
[253.90165710 -429.21130371]
[253.52372742 -444.22442627]
[254.92413330 -459.17684937]
[258.08322144 -473.85870361]
[262.95663452 -488.06384277]
[269.47598267 -501.59286499]
[277.54971313 -514.25585938]
[287.06451416 -525.87500000]
[297.88677979 -536.28729248]
[309.86462402 -545.34643555]
[322.82983398 -552.92529297]
[336.60046387 -558.91748047]
[350.98315430 -563.23889160]
[365.77600098 -565.82885742]
[380.77133179 -566.65093994]
[395.75866699 -565.69372559]
[410.52758789 -562.97058105]
[424.87075806 -558.51977539]
[438.58682251 -552.40374756]
[451.48321533 -544.70831299]
[463.37893677 -535.54162598]
[474.10693359 -525.03228760]
[483.51663208 -513.32781982]
[491.47595215 -500.59262085]
[497.87310791 -487.00540161]
[502.61834717 -472.75692749]
[505.64498901 -458.04721069]
[506.91061401 -443.08276367]
[506.39743042 -428.07366943]
[504.11260986 -413.23062134]
[500.08825684 -398.76199341]
[494.38088989 -384.87091064]
[487.07058716 -371.75238037]
[478.25997925 -359.59057617]
[468.07278442 -348.55621338]
[456.65197754 -338.80419922]
[444.15792847 -330.47143555]
[430.76602173 -323.67489624]
[416.66421509 -318.51000977]
[402.05053711 -315.04928589]
[387.13012695 -313.34130859]
[372.11239624 -313.41003418]
[357.20822144 -315.25448608]
[342.62683105 -318.84881592]
[328.57290649 -324.14254761]
[321.66326904 -310.82876587]
[314.75363159 -297.51498413]
[307.84399414 -284.20120239]
[300.93435669 -270.88742065]
[294.02471924 -257.57360840]
[287.11508179 -244.25984192]
[280.20544434 -230.94604492]
[273.29580688 -217.63226318]
[266.38616943 -204.31848145]
[259.47653198 -191.00468445]
[272.46337891 -183.50111389]
[285.09786987 -175.41836548]
[297.35421753 -166.77294922]
[309.20739746 -157.58253479]
[320.63317871 -147.86589050]
[331.60821533 -137.64286804]
[342.11007690 -126.93436432]
[352.11734009 -115.76224518]
[361.60952759 -104.14933777]
[370.56726074 -92.11936188]
[378.97225952 -79.69689941]
[386.80731201 -66.90732574]
[394.05645752 -53.77677536]
[400.70486450 -40.33206558]
[406.73892212 -26.60066414]
[412.14636230 -12.61062527]
[416.91607666 1.60947037]
[421.03836060 16.03057098]
[424.50479126 30.62321663]
[427.30825806 45.35759735]
[429.44308472 60.20360565]
[430.90484619 75.13091278]
[431.69061279 90.10903168]
[431.79873657 105.10736084]
[431.22903442 120.09524536]
[429.98263550 135.04208374]
[428.06213379 149.91732788]
[425.47137451 164.69059753]
[422.21572876 179.33171082]
[418.30181885 193.81074524]
[413.73760986 208.09814453]
[408.53247070 222.16468811]
[402.69702148 235.98167419]
[396.24316406 249.52084351]
[389.18411255 262.75454712]
[381.53427124 275.65576172]
[373.30926514 288.19815063]
[364.52590942 300.35601807]
[355.20214844 312.10458374]
[345.35702515 323.41983032]
[335.01065063 334.27865601]
[324.18417358 344.65884399]
[312.89968872 354.53924561]
[301.18026733 363.89959717]
[289.04983521 372.72085571]
[276.53320312 380.98492432]
[263.65591431 388.67498779]
[250.44427490 395.77526855]
[236.92529297 402.27133179]
[223.12658691 408.14987183]
[209.07633972 413.39886475]
[194.80326843 418.00759888]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[85 157]
[86 156]
[87 155]
[88 154]
[89 153]
[90 152]
[91 151]
[92 150]
[93 149]
[94 148]
[95 147]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
85 157 24 gmark
157 cmark
86 156 11 gmark
86 cmark
156 cmark
87 155 13 gmark
87 cmark
155 cmark
88 154 19 gmark
88 cmark
154 cmark
89 153 18 gmark
89 cmark
153 cmark
90 152 17 gmark
90 cmark
152 cmark
91 151 18 gmark
91 cmark
151 cmark
92 150 7 gmark
92 cmark
150 cmark
93 149 11 gmark
93 cmark
149 cmark
94 148 16 gmark
94 cmark
148 cmark
95 147 20 gmark
95 cmark
147 cmark

% End Annotations
showpage
end
%%EOF
