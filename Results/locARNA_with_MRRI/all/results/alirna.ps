%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Jan 25 16:26:54 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________GAGC_AGUUUAUUGGAAAGAAGGA_UUUGCA___AUGACUA__AAGAAACCAGGAAA__GCCCGGGGGAAAGCGGGCUG_UCAAUAUGCUAAAACGCGCGGCAACCCG________________AAACCCAACAC_CAAACAGCAUAUUGACACCUGGGA__AAGACUGGGAGAUCCUCUUCUUCUC_____________\
) } def
/len { sequence length } bind def

/coor [
[182.71536255 426.29171753]
[168.09799194 429.65249634]
[153.34541321 432.35882568]
[138.48693848 434.40524292]
[123.55204010 435.78775024]
[108.57038116 436.50357056]
[93.57170105 436.55133057]
[78.58579254 435.93087769]
[63.64239883 434.64346313]
[48.77118683 432.69161987]
[34.00168610 430.07928467]
[19.36321831 426.81161499]
[4.88484716 422.89505005]
[-9.40468216 418.33743286]
[-23.47699738 413.14779663]
[-37.30416107 407.33642578]
[-50.85872269 400.91485596]
[-64.11376953 393.89587402]
[-77.04297638 386.29336548]
[-89.62068939 378.12246704]
[-101.82192230 369.39938354]
[-113.62245941 360.14141846]
[-124.99887085 350.36697388]
[-135.92857361 340.09545898]
[-146.38984680 329.34722900]
[-156.36195374 318.14367676]
[-165.82507324 306.50701904]
[-174.76042175 294.46035767]
[-183.15025330 282.02761841]
[-190.97792053 269.23345947]
[-198.22787476 256.10333252]
[-204.88572693 242.66325378]
[-210.93826294 228.93994141]
[-216.37345886 214.96061707]
[-221.18052673 200.75306702]
[-225.34991455 186.34547424]
[-228.87336731 171.76644897]
[-231.74385071 157.04495239]
[-233.95570374 142.21018982]
[-235.50451660 127.29161835]
[-236.38722229 112.31886292]
[-236.60205078 97.32165527]
[-236.14859009 82.32975769]
[-235.02774048 67.37294769]
[-233.24172974 52.48091507]
[-230.79409790 37.68322372]
[-227.68969727 23.00926018]
[-223.93470764 8.48815346]
[-219.53657532 -5.85126543]
[-214.50402832 -19.98052597]
[-208.84707642 -33.87157822]
[-202.57691956 -47.49683762]
[-195.70603943 -60.82926178]
[-188.24806213 -73.84236908]
[-180.21778870 -86.51033020]
[-171.63117981 -98.80799866]
[-162.50526428 -110.71094513]
[-152.85816956 -122.19554901]
[-142.70904541 -133.23899841]
[-132.07804871 -143.81938171]
[-120.98628998 -153.91567993]
[-109.45577240 -163.50785828]
[-97.50940704 -172.57685852]
[-85.17090607 -181.10469055]
[-72.46476746 -189.07441711]
[-59.41621399 -196.47019958]
[-46.05115509 -203.27738953]
[-32.39612579 -209.48243713]
[-18.47823524 -215.07304382]
[-4.32511711 -220.03810120]
[10.03512764 -224.36775208]
[24.57398987 -228.05339050]
[39.26260376 -231.08772278]
[54.07180405 -233.46470642]
[68.97219086 -235.17964172]
[83.93418121 -236.22909546]
[98.92807007 -236.61099243]
[113.92407990 -236.32460022]
[128.89245605 -235.37045288]
[143.80346680 -233.75045776]
[158.62750244 -231.46783447]
[173.33514404 -228.52711487]
[187.89718628 -224.93414307]
[202.28471375 -220.69604492]
[216.46916199 -215.82122803]
[230.42237854 -210.31938171]
[244.11665344 -204.20141602]
[257.52478027 -197.47950745]
[270.62017822 -190.16696167]
[283.37683105 -182.27832031]
[291.82662964 -194.67190552]
[300.27642822 -207.06549072]
[308.72622681 -219.45907593]
[317.17602539 -231.85264587]
[325.62582397 -244.24623108]
[334.07562256 -256.63980103]
[342.52542114 -269.03338623]
[350.97521973 -281.42697144]
[359.42501831 -293.82055664]
[348.10369873 -303.68786621]
[338.02886963 -314.82492065]
[329.34201050 -327.07543945]
[322.16506958 -340.26739502]
[316.59878540 -354.21560669]
[312.72134399 -368.72430420]
[310.58709717 -383.58975220]
[310.22610474 -398.60327148]
[311.64334106 -413.55410767]
[314.81896973 -428.23239136]
[319.70837402 -442.43203735]
[326.24295044 -455.95370483]
[334.33096313 -468.60757446]
[343.85882568 -480.21603394]
[354.69281006 -490.61608887]
[366.68084717 -499.66171265]
[379.65460205 -507.22598267]
[393.43194580 -513.20269775]
[407.81951904 -517.50787354]
[422.61526489 -520.08117676]
[437.61154175 -520.88641357]
[452.59777832 -519.91229248]
[467.36361694 -517.17254639]
[481.70175171 -512.70550537]
[495.41091919 -506.57403564]
[508.29864502 -498.86413574]
[520.18402100 -489.68402100]
[530.90020752 -479.16262817]
[540.29669189 -467.44757080]
[548.24163818 -454.70339966]
[554.62353516 -441.10897827]
[559.35266113 -426.85516357]
[562.36279297 -412.14205933]
[563.61151123 -397.17620850]
[563.08142090 -382.16769409]
[560.77990723 -367.32723999]
[556.73925781 -352.86315918]
[551.01623535 -338.97851562]
[543.69116211 -325.86822510]
[534.86688232 -313.71633911]
[524.66723633 -302.69345093]
[513.23547363 -292.95428467]
[500.73205566 -284.63562012]
[487.33248901 -277.85418701]
[473.22488403 -272.70516968]
[458.60729980 -269.26092529]
[443.68496704 -267.56973267]
[428.66735840 -267.65536499]
[413.76525879 -269.51663208]
[399.18792725 -273.12738037]
[385.13998413 -278.43695068]
[371.81860352 -285.37075806]
[363.36880493 -272.97717285]
[354.91900635 -260.58358765]
[346.46920776 -248.19001770]
[338.01940918 -235.79643250]
[329.56961060 -223.40284729]
[321.11981201 -211.00926208]
[312.67001343 -198.61569214]
[304.22021484 -186.22210693]
[295.77041626 -173.82852173]
[307.77426147 -164.83573914]
[319.36560059 -155.31715393]
[330.52139282 -145.29165649]
[341.21951294 -134.77915955]
[351.43872070 -123.80053711]
[361.15872192 -112.37757111]
[370.36022949 -100.53295135]
[379.02493286 -88.29019165]
[387.13568115 -75.67359924]
[394.67633057 -62.70822525]
[401.63195801 -49.41981125]
[407.98870850 -35.83473587]
[413.73394775 -21.97997284]
[418.85632324 -7.88303137]
[423.34564209 6.42810202]
[427.19299316 20.92501259]
[430.39074707 35.57892227]
[432.93249512 50.36072922]
[434.81329346 65.24109650]
[436.02929688 80.19046783]
[436.57818604 95.17916870]
[436.45880127 110.17744446]
[435.67144775 125.15551758]
[434.21762085 140.08363342]
[432.10025024 154.93217468]
[429.32351685 169.67166138]
[425.89294434 184.27281189]
[421.81533813 198.70664978]
[417.09878540 212.94451904]
[411.75268555 226.95814514]
[405.78762817 240.71971130]
[399.21545410 254.20187378]
[392.04922485 267.37789917]
[384.30316162 280.22161865]
[375.99261475 292.70751953]
[367.13412476 304.81079102]
[357.74526978 316.50747681]
[347.84469604 327.77426147]
[337.45205688 338.58886719]
[326.58795166 348.92974854]
[315.27398682 358.77639771]
[303.53262329 368.10928345]
[291.38714600 376.90985107]
[278.86169434 385.16067505]
[265.98114014 392.84530640]
[252.77104187 399.94851685]
[239.25762939 406.45623779]
[225.46774292 412.35549927]
[211.42874146 417.63461304]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[90 160]
[91 159]
[92 158]
[93 157]
[94 156]
[95 155]
[96 154]
[97 153]
[98 152]
[99 151]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
90 160 23 gmark
90 cmark
160 cmark
91 159 12 gmark
91 cmark
159 cmark
92 158 18 gmark
92 cmark
158 cmark
93 157 16 gmark
93 cmark
157 cmark
94 156 20 gmark
94 cmark
156 cmark
95 155 17 gmark
95 cmark
155 cmark
96 154 15 gmark
96 cmark
154 cmark
97 153 9 gmark
97 cmark
153 cmark
98 152 16 gmark
98 cmark
152 cmark
99 151 21 gmark
99 cmark
151 cmark

% End Annotations
showpage
end
%%EOF
