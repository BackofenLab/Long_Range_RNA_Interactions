%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Tue Feb  6 12:14:22 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AA__CUUUGGUUGUGU__AUAA__U_UGGUAAUAUCGGGAAAAUAUGAAGAGAAAGGA__GGAGGAAGUAG_C__GGGGGAGAGGACGUGGGAGGCGGCCCACUACCACGCUGGGGGAAA_________UCGCAAGCAGAGGGAGCAAAGGAUAGAAAUCCCGGGUGAGU_GACGACACCCCCCG_AAAUGUGAAUAAUAAUG_GGGCA_A_AACCCAACGAAAC_\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50482941 92.08301544]
[62.52703857 91.24935150]
[47.57821274 89.99965668]
[32.66990280 88.33489990]
[17.81363297 86.25635529]
[3.02088356 83.76564026]
[-11.69691277 80.86467743]
[-26.32838058 77.55570984]
[-40.86220932 73.84129333]
[-55.28717041 69.72429657]
[-69.59210968 65.20790863]
[-83.76597595 60.29561234]
[-97.79781342 54.99120712]
[-111.67677307 49.29878998]
[-125.39212799 43.22276688]
[-138.93328857 36.76782990]
[-152.28977966 29.93897057]
[-165.45126343 22.74146271]
[-178.40760803 15.18087196]
[-191.14875793 7.26304054]
[-203.66488647 -1.00591111]
[-215.94631958 -9.61959267]
[-227.98356628 -18.57134628]
[-239.76731873 -27.85425377]
[-251.28846741 -37.46113968]
[-262.53811646 -47.38457870]
[-273.50753784 -57.61690140]
[-284.18832397 -68.15019989]
[-294.57214355 -78.97634125]
[-304.65100098 -90.08693695]
[-314.41714478 -101.47341919]
[-323.86294556 -113.12698364]
[-332.98120117 -125.03862000]
[-341.76477051 -137.19911194]
[-350.20690918 -149.59909058]
[-358.30111694 -162.22894287]
[-366.04107666 -175.07891846]
[-373.42086792 -188.13908386]
[-380.43475342 -201.39935303]
[-387.07730103 -214.84945679]
[-393.34341431 -228.47901917]
[-399.22821045 -242.27751160]
[-404.72717285 -256.23425293]
[-409.83602905 -270.33847046]
[-414.55084229 -284.57922363]
[-418.86798096 -298.94555664]
[-422.78408813 -313.42636108]
[-426.29614258 -328.01040649]
[-429.40142822 -342.68646240]
[-432.09753418 -357.44314575]
[-434.38241577 -372.26907349]
[-436.25427246 -387.15280151]
[-437.71163940 -402.08282471]
[-438.75344849 -417.04757690]
[-439.37884521 -432.03549194]
[-439.58737183 -447.03500366]
[-439.37887573 -462.03454590]
[-438.75347900 -477.02246094]
[-437.71170044 -491.98721313]
[-436.25430298 -506.91723633]
[-434.38247681 -521.80096436]
[-432.09762573 -536.62689209]
[-429.40151978 -551.38360596]
[-426.29623413 -566.05963135]
[-422.78421021 -580.64367676]
[-418.86810303 -595.12451172]
[-414.55099487 -609.49084473]
[-409.83618164 -623.73162842]
[-404.72735596 -637.83581543]
[-399.22839355 -651.79254150]
[-393.34359741 -665.59106445]
[-387.07751465 -679.22064209]
[-380.43496704 -692.67071533]
[-373.42111206 -705.93103027]
[-366.04132080 -718.99114990]
[-358.30136108 -731.84118652]
[-350.20718384 -744.47100830]
[-341.76504517 -756.87097168]
[-332.98147583 -769.03149414]
[-323.86325073 -780.94317627]
[-314.41744995 -792.59674072]
[-304.65133667 -803.98321533]
[-294.57247925 -815.09381104]
[-284.18865967 -825.91998291]
[-273.50790405 -836.45324707]
[-262.53845215 -846.68560791]
[-251.28883362 -856.60906982]
[-239.76770020 -866.21594238]
[-227.98394775 -875.49890137]
[-215.94671631 -884.45062256]
[-203.66529846 -893.06433105]
[-191.14916992 -901.33331299]
[-178.40802002 -909.25115967]
[-165.45169067 -916.81176758]
[-152.29020691 -924.00927734]
[-138.93371582 -930.83813477]
[-125.39257050 -937.29309082]
[-111.67721558 -943.36914062]
[-97.79826355 -949.06152344]
[-83.76643372 -954.36596680]
[-69.59256744 -959.27825928]
[-55.28763580 -963.79467773]
[-40.86267853 -967.91168213]
[-26.32885170 -971.62609863]
[-11.69738770 -974.93511963]
[3.02040625 -977.83605957]
[17.81315422 -980.32678223]
[32.66942215 -982.40533447]
[47.57773209 -984.07012939]
[62.52655411 -985.31982422]
[77.50434113 -986.15350342]
[92.49951172 -986.57049561]
[107.50048828 -986.57049561]
[122.49565887 -986.15350342]
[137.47344971 -985.31982422]
[152.42227173 -984.07012939]
[167.33058167 -982.40533447]
[182.18684387 -980.32678223]
[196.97959900 -977.83605957]
[211.69738770 -974.93511963]
[226.32885742 -971.62609863]
[240.86268616 -967.91168213]
[255.28762817 -963.79467773]
[269.59255981 -959.27825928]
[283.76641846 -954.36596680]
[297.79824829 -949.06152344]
[311.67721558 -943.36914062]
[325.39257812 -937.29309082]
[338.93371582 -930.83813477]
[352.29019165 -924.00927734]
[365.45169067 -916.81176758]
[378.40802002 -909.25115967]
[391.14916992 -901.33331299]
[403.66528320 -893.06433105]
[415.94671631 -884.45062256]
[427.98394775 -875.49890137]
[439.76770020 -866.21594238]
[451.28881836 -856.60906982]
[462.53845215 -846.68560791]
[473.50790405 -836.45324707]
[484.18865967 -825.91998291]
[494.57247925 -815.09381104]
[504.65133667 -803.98321533]
[514.41741943 -792.59674072]
[523.86328125 -780.94317627]
[532.98150635 -769.03149414]
[541.76507568 -756.87097168]
[550.20721436 -744.47100830]
[558.30139160 -731.84118652]
[566.04132080 -718.99114990]
[573.42108154 -705.93103027]
[580.43493652 -692.67071533]
[587.07751465 -679.22064209]
[593.34362793 -665.59106445]
[599.22839355 -651.79254150]
[604.72735596 -637.83581543]
[609.83618164 -623.73162842]
[614.55102539 -609.49084473]
[618.86810303 -595.12451172]
[622.78417969 -580.64367676]
[626.29626465 -566.05963135]
[629.40148926 -551.38360596]
[632.09759521 -536.62689209]
[634.38250732 -521.80096436]
[636.25433350 -506.91723633]
[637.71166992 -491.98721313]
[638.75347900 -477.02246094]
[639.37884521 -462.03454590]
[639.58740234 -447.03500366]
[639.37884521 -432.03549194]
[638.75347900 -417.04757690]
[637.71166992 -402.08282471]
[636.25427246 -387.15280151]
[634.38238525 -372.26907349]
[632.09753418 -357.44314575]
[629.40142822 -342.68646240]
[626.29614258 -328.01040649]
[622.78411865 -313.42636108]
[618.86798096 -298.94555664]
[614.55084229 -284.57922363]
[609.83605957 -270.33847046]
[604.72717285 -256.23425293]
[599.22821045 -242.27751160]
[593.34338379 -228.47901917]
[587.07733154 -214.84945679]
[580.43475342 -201.39935303]
[573.42083740 -188.13908386]
[566.04107666 -175.07891846]
[558.30108643 -162.22894287]
[550.20690918 -149.59909058]
[541.76477051 -137.19911194]
[532.98120117 -125.03862000]
[523.86297607 -113.12698364]
[514.41711426 -101.47341919]
[504.65100098 -90.08693695]
[494.57214355 -78.97634125]
[484.18832397 -68.15019989]
[473.50753784 -57.61690140]
[462.53811646 -47.38457870]
[451.28845215 -37.46113968]
[439.76730347 -27.85425377]
[427.98358154 -18.57134628]
[415.94631958 -9.61959267]
[403.66488647 -1.00591111]
[391.14877319 7.26304054]
[378.40759277 15.18087196]
[365.45126343 22.74146271]
[352.28976440 29.93897057]
[338.93328857 36.76782990]
[325.39212036 43.22276688]
[311.67675781 49.29878998]
[297.79782104 54.99120712]
[283.76596069 60.29561234]
[269.59210205 65.20790863]
[255.28717041 69.72429657]
[240.86221313 73.84129333]
[226.32838440 77.55570984]
[211.69691467 80.86467743]
[196.97911072 83.76564026]
[182.18637085 86.25635529]
[167.33009338 88.33489990]
[152.42178345 89.99965668]
[137.47296143 91.24935150]
[122.49517059 92.08301544]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
