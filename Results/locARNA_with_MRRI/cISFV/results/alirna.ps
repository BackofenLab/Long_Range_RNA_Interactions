%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Jan 25 16:27:03 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_CAAUAUUAGGUAUGCAAAUAUCGGGUAGAUAUGAAGAGAAAGGAA_GUGUAGAGAAGACGGGAAGGGACCCGGAACGGGCCCUCCGACGAACCGGGGGCAAA________UGAGAACACCCCCCGAAAUGUGUAAAAAAUCUGGGCAAAAAAACACAACCAAAUCU_CCAC__\
) } def
/len { sequence length } bind def

/coor [
[116.74717712 381.20599365]
[101.75706482 381.69876099]
[86.76197052 381.39303589]
[71.80439758 380.28964233]
[56.92674637 378.39178467]
[42.17119217 375.70474243]
[27.57956314 372.23623657]
[13.19321442 367.99603271]
[-0.94707036 362.99615479]
[-14.80121040 357.25079346]
[-28.32993507 350.77621460]
[-41.49489594 343.59078979]
[-54.25877380 335.71490479]
[-66.58538818 327.17083740]
[-78.43980408 317.98284912]
[-89.78840637 308.17694092]
[-100.59903717 297.78097534]
[-110.84104919 286.82434082]
[-120.48541260 275.33813477]
[-129.50479126 263.35494995]
[-137.87361145 250.90867615]
[-145.56814575 238.03466797]
[-152.56660461 224.76936340]
[-158.84913635 211.15040588]
[-164.39791870 197.21636963]
[-169.19725037 183.00675964]
[-173.23352051 168.56187439]
[-176.49526978 153.92263794]
[-178.97326660 139.13053894]
[-180.66049194 124.22753143]
[-181.55215454 109.25584412]
[-181.64572144 94.25792694]
[-180.94093323 79.27628326]
[-179.43980408 64.35337830]
[-177.14656067 49.53152466]
[-174.06771851 34.85272598]
[-170.21200562 20.35859299]
[-165.59034729 6.09021282]
[-160.21585083 -7.91197062]
[-154.10374451 -21.60826683]
[-147.27134705 -34.95985031]
[-139.73805237 -47.92887878]
[-131.52517700 -60.47858429]
[-122.65602875 -72.57340240]
[-113.15573120 -84.17903900]
[-103.05122375 -95.26260376]
[-92.37115479 -105.79267120]
[-81.14578247 -115.73940277]
[-69.40693665 -125.07460022]
[-57.18788528 -133.77178955]
[-44.52327347 -141.80633545]
[-31.44899368 -149.15547180]
[-18.00210953 -155.79832458]
[-4.22073460 -161.71611023]
[9.85606384 -166.89202881]
[24.18838501 -171.31141663]
[38.73560333 -174.96173096]
[53.45647812 -177.83265686]
[68.30928802 -179.91603088]
[83.25193024 -181.20594788]
[98.24204254 -181.69876099]
[113.23713684 -181.39308167]
[128.19471741 -180.28974915]
[143.07237244 -178.39190674]
[157.82792664 -175.70494080]
[161.29687500 -190.29830933]
[164.76580811 -204.89167786]
[168.23475647 -219.48504639]
[154.13697815 -224.66084290]
[140.75032043 -231.46774292]
[128.26272583 -239.81018066]
[116.84947968 -249.57102966]
[106.67082977 -260.61328125]
[97.86965179 -272.78192139]
[90.56951141 -285.90612793]
[84.87288666 -299.80160522]
[80.85974121 -314.27334595]
[78.58642578 -329.11816406]
[78.08485413 -344.12765503]
[79.36205292 -359.09109497]
[82.40010834 -373.79846191]
[87.15636444 -388.04327393]
[93.56404877 -401.62551880]
[101.53321075 -414.35458374]
[110.95198059 -426.05172729]
[121.68811798 -436.55276489]
[133.59091187 -445.71026611]
[146.49328613 -453.39566040]
[160.21408081 -459.50106812]
[174.56068420 -463.94079590]
[189.33169556 -466.65252686]
[204.31976318 -467.59814453]
[219.31448364 -466.76437378]
[234.10531616 -464.16299438]
[248.48466492 -459.83044434]
[262.25064087 -453.82757568]
[275.20999146 -446.23867798]
[287.18078613 -437.17025757]
[297.99499512 -426.74963379]
[307.50079346 -415.12310791]
[315.56472778 -402.45385742]
[322.07357788 -388.91979980]
[326.93600464 -374.71087646]
[330.08370972 -360.02661133]
[331.47256470 -345.07308960]
[331.08300781 -330.06027222]
[328.92053223 -315.19891357]
[325.01547241 -300.69763184]
[319.42269897 -286.76000977]
[312.22070312 -273.58172607]
[303.51058960 -261.34774780]
[293.41461182 -250.22984314]
[282.07452393 -240.38407898]
[269.64953613 -231.94869995]
[256.31405640 -225.04209900]
[242.25527954 -219.76123047]
[227.67060852 -216.18025208]
[212.76475525 -214.34942627]
[197.74697876 -214.29446411]
[182.82812500 -216.01611328]
[179.35919189 -201.42274475]
[175.89024353 -186.82937622]
[172.42129517 -172.23599243]
[186.80763245 -167.99574280]
[200.94790649 -162.99581909]
[214.80203247 -157.25042725]
[228.33073425 -150.77581787]
[241.49566650 -143.59034729]
[254.25952148 -135.71441650]
[266.58612061 -127.17031860]
[278.44049072 -117.98227692]
[289.78906250 -108.17635345]
[300.59967041 -97.78032684]
[310.84164429 -86.82366943]
[320.48596191 -75.33744812]
[329.50531006 -63.35420990]
[337.87408447 -50.90792847]
[345.56857300 -38.03388214]
[352.56698608 -24.76856613]
[358.84948730 -11.14958000]
[364.39822388 2.78447080]
[369.19750977 16.99408913]
[373.23373413 31.43899727]
[376.49545288 46.07824707]
[378.97338867 60.87034225]
[380.66055298 75.77336121]
[381.55218506 90.74504852]
[381.64569092 105.74296570]
[380.94088745 120.72460938]
[379.43969727 135.64750671]
[377.14639282 150.46936035]
[374.06750488 165.14814758]
[370.21176147 179.64225769]
[365.59005737 193.91062927]
[360.21551514 207.91279602]
[354.10336304 221.60906982]
[347.27093506 234.96063232]
[339.73757935 247.92964172]
[331.52465820 260.47930908]
[322.65548706 272.57409668]
[313.15515137 284.17971802]
[303.05059814 295.26324463]
[292.37051392 305.79327393]
[281.14511108 315.73999023]
[269.40621948 325.07513428]
[257.18713379 333.77230835]
[244.52250671 341.80679321]
[231.44819641 349.15588379]
[218.00129700 355.79870605]
[204.21990967 361.71643066]
[190.14308167 366.89230347]
[175.81076050 371.31164551]
[161.26351929 374.96194458]
[146.54263306 377.83279419]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 123]
[66 122]
[67 121]
[68 120]
] def

init

% Start Annotations
67 121 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
65 123 5 gmark
65 cmark
123 cmark
66 122 5 gmark
67 121 1 gmark
68 120 5 gmark

% End Annotations
showpage
end
%%EOF
