%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Jan 25 16:27:05 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUUAGAGUAAACUAGAAAAAGAAUUAUCAAUG_________GUGACUAAACCAAGAAAGCCCGUU__AAAACGGGCUGUCAAUAU_GUGA_ACGUGCAUUACC___CG__________C_CAUAAGAGAUAGAACAGCAUAUUGACACCUGGGAA_AGACCGGAGAUAC_CUCUGGUUU_\
) } def
/len { sequence length } bind def

/coor [
[85.65764618 439.84411621]
[73.27468872 448.36251831]
[59.73648453 454.89071655]
[45.36038208 459.27569580]
[30.48338127 461.41467285]
[15.45421791 461.25753784]
[0.62519902 458.80789185]
[-13.65606213 454.12326050]
[-27.05479240 447.31335449]
[-39.25690842 438.53790283]
[-49.97637177 428.00256348]
[-58.96190262 415.95428467]
[-66.00286865 402.67553711]
[-70.93422699 388.47756958]
[-73.64036560 373.69320679]
[-74.05785370 358.66903687]
[-72.17691040 343.75720215]
[-68.04162598 329.30731201]
[-61.74893188 315.65805054]
[-53.44634247 303.12936401]
[-43.32847977 292.01498413]
[-31.63252258 282.57543945]
[-18.63264275 275.03201294]
[-4.63357162 269.56149292]
[10.03652859 266.29217529]
[25.03377151 265.30062866]
[40.00659943 266.61013794]
[43.57709885 252.04129028]
[47.14759827 237.47244263]
[50.71809769 222.90357971]
[42.80017853 210.34005737]
[46.21363068 195.51429749]
[59.44509888 187.29444885]
[63.01559830 172.72558594]
[51.03123093 181.74639893]
[36.08189774 182.97821045]
[22.78258514 176.04075623]
[15.23891830 163.07568359]
[15.77969360 148.08543396]
[24.23796844 135.69763184]
[38.00259781 129.73651123]
[52.82431412 132.04231262]
[64.12751770 141.90322876]
[68.42281342 156.27626038]
[74.19279480 142.43041992]
[67.08506012 137.18815613]
[61.01830292 130.76979065]
[56.18438339 123.37828064]
[52.73617935 115.24741364]
[50.78274536 106.63433075]
[50.38586044 97.81143188]
[51.55807877 89.05774689]
[54.26232910 80.65011597]
[58.41307831 72.85445404]
[63.87906265 65.91729736]
[70.48741150 60.05804443]
[78.02912903 55.46200180]
[86.26570129 52.27452087]
[94.93663025 50.59640884]
[103.76770020 50.48073959]
[112.47960663 51.93117523]
[120.79683685 54.90183640]
[129.06335449 42.38526535]
[137.32987976 29.86869431]
[145.59640503 17.35212135]
[131.27478027 21.81204414]
[116.78329468 17.93945503]
[106.59561157 6.92986250]
[103.85676575 -7.81797457]
[109.41225433 -21.75126266]
[121.54705048 -30.56867027]
[136.51502991 -31.54818153]
[149.69544983 -24.38741302]
[157.01939392 -11.29695892]
[156.22549438 3.68314266]
[166.31971741 -7.41219044]
[168.10902405 -13.81871128]
[172.25337219 -17.75299644]
[176.95599365 -18.70753479]
[187.42515564 -29.44981766]
[197.89431763 -40.19210052]
[208.36347961 -50.93438339]
[218.83264160 -61.67666626]
[229.30180359 -72.41894531]
[239.77096558 -83.16123199]
[250.24012756 -93.90351105]
[260.70928955 -104.64579773]
[264.47052002 -112.99787140]
[271.45156860 -115.48068237]
[262.23931885 -127.34203339]
[254.52397156 -140.22734070]
[248.41809082 -153.94868469]
[244.01069641 -168.30599976]
[241.36605835 -183.08987427]
[240.52273560 -198.08474731]
[241.49304199 -213.07194519]
[244.26283264 -227.83288574]
[248.79170227 -242.15234375]
[255.01359558 -255.82147217]
[262.83779907 -268.64096069]
[272.15023804 -280.42382812]
[282.81503296 -290.99829102]
[294.67672729 -300.21011353]
[307.56231689 -307.92495728]
[321.28390503 -314.03033447]
[335.64138794 -318.43719482]
[350.42535400 -321.08129883]
[365.42025757 -321.92404175]
[380.40740967 -320.95315552]
[395.16827393 -318.18283081]
[409.48754883 -313.65344238]
[423.15643311 -307.43103027]
[435.97564697 -299.60632324]
[447.75817871 -290.29348755]
[458.33221436 -279.62826538]
[467.54360962 -267.76623535]
[475.25796509 -254.88034058]
[481.36282349 -241.15853882]
[485.76916504 -226.80090332]
[488.41268921 -212.01681519]
[489.25488281 -197.02188110]
[488.28344727 -182.03477478]
[485.51257324 -167.27403259]
[480.98263550 -152.95491028]
[474.75970459 -139.28623962]
[466.93453979 -126.46734619]
[457.62124634 -114.68515778]
[446.95562744 -104.11150360]
[435.09326172 -94.90057373]
[422.20709229 -87.18668365]
[408.48504639 -81.08233643]
[394.12725830 -76.67655182]
[379.34307861 -74.03356934]
[364.34808350 -73.19194031]
[349.36102295 -74.16392517]
[334.60037231 -76.93537140]
[320.28143311 -81.46584320]
[306.61300659 -87.68927765]
[293.79440308 -95.51492310]
[282.01254272 -104.82865906]
[271.45156860 -94.17663574]
[260.98242188 -83.43434906]
[250.51324463 -72.69207001]
[240.04408264 -61.94978714]
[229.57492065 -51.20750427]
[219.10575867 -40.46522141]
[208.63659668 -29.72293663]
[198.16743469 -18.98065376]
[187.69827271 -8.23837185]
[177.41505432 2.68204522]
[167.32081604 13.77737808]
[158.11297607 25.61864662]
[149.84645081 38.13521957]
[141.57992554 50.65179062]
[133.31340027 63.16836166]
[145.85881042 80.93901062]
[149.60595703 102.36660767]
[143.83593750 123.34016418]
[129.65574646 139.83578491]
[109.78593445 148.68869019]
[88.03863525 148.20039368]
[82.26866150 162.04623413]
[77.58444977 176.29609680]
[74.01395416 190.86494446]
[81.94531250 204.27133179]
[78.11677551 218.99536133]
[65.28694916 226.47407532]
[61.71645355 241.04293823]
[58.14595413 255.61178589]
[54.57545471 270.18063354]
[68.45706940 275.94268799]
[81.29635620 283.75634766]
[92.79236603 293.43841553]
[102.67559052 304.76193237]
[110.71437073 317.46148682]
[116.72026062 331.23934937]
[120.55247498 345.77258301]
[122.12117767 360.72045898]
[121.38959503 375.73263550]
[118.37487793 390.45718384]
[113.14770508 404.54891968]
[105.83059692 417.67752075]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 170]
[28 169]
[29 168]
[30 167]
[33 164]
[34 163]
[44 162]
[45 161]
[62 155]
[63 154]
[64 153]
[65 152]
[75 151]
[76 150]
[79 149]
[80 148]
[81 147]
[82 146]
[83 145]
[84 144]
[85 143]
[86 142]
[87 141]
[89 140]
] def

init

% Start Annotations
27 170 0.0 0.6 colorpair
28 169 0.0 0.2 colorpair
29 168 0.16 0.6 colorpair
30 167 0.0 1 colorpair
33 164 0.16 1 colorpair
34 163 0.16 1 colorpair
44 162 0.0 0.6 colorpair
45 161 0.0 0.2 colorpair
62 155 0.0 0.6 colorpair
63 154 0.0 0.6 colorpair
64 153 0.0 0.2 colorpair
65 152 0.0 0.2 colorpair
75 151 0.16 1 colorpair
76 150 0.0 0.6 colorpair
79 149 0.0 0.6 colorpair
80 148 0.0 0.2 colorpair
81 147 0.0 0.6 colorpair
82 146 0.16 0.6 colorpair
83 145 0.16 0.6 colorpair
84 144 0.0 0.6 colorpair
85 143 0.0 0.6 colorpair
86 142 0.0 0.6 colorpair
87 141 0.0 0.6 colorpair
89 140 0.32 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
27 170 1 gmark
28 169 2 gmark
29 168 1 gmark
29 cmark
168 cmark
164 cmark
163 cmark
44 162 1 gmark
45 161 2 gmark
62 155 1 gmark
63 154 1 gmark
64 153 2 gmark
65 152 2 gmark
151 cmark
76 150 1 gmark
79 149 1 gmark
80 148 2 gmark
81 147 1 gmark
82 146 1 gmark
82 cmark
83 145 1 gmark
83 cmark
145 cmark
84 144 1 gmark
85 143 1 gmark
86 142 1 gmark
87 141 1 gmark
89 140 1 gmark
89 cmark
140 cmark

% End Annotations
showpage
end
%%EOF
