%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Fri Jan 26 12:25:01 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUAAGAUAGAAUAGAAAAAGAAAUAUCAAUG_________GUGACUAAACCAAGAAAGCCCGUUGCAAAACGGGCUGUCAAUAUAAU_AAACGUGCAUUACC___CG__U_______C_CAUAAGAGAUAGAACAGCAUAUUGACACCUGGGAA_AGACCGGAGAUAC_CUCUGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[78.35917664 358.71295166]
[79.84615326 373.75555420]
[76.83155060 388.56784058]
[69.58341980 401.83267212]
[58.74626541 412.37060547]
[45.28371429 419.24453735]
[30.39284897 421.84329224]
[15.39775467 419.93579102]
[1.63178730 413.69161987]
[-9.68099499 403.66604614]
[-17.53466606 390.75048828]
[-21.23088264 376.09344482]
[-20.44098091 360.99816895]
[-15.23519707 346.80691528]
[-6.07642698 334.78158569]
[6.22093821 325.99148560]
[20.56342506 321.21817017]
[35.67570877 320.88610840]
[39.76600266 306.45455933]
[43.85629654 292.02301025]
[47.94659042 277.59146118]
[52.03688431 263.15994263]
[56.12717819 248.72837830]
[45.39550400 232.49588013]
[50.09425735 213.29908752]
[67.64187622 203.56291199]
[70.97969055 188.93899536]
[74.31750488 174.31507874]
[77.65531921 159.69116211]
[69.53813934 147.25544739]
[72.71483612 132.37716675]
[85.81359100 123.94744110]
[89.15140533 109.32351685]
[79.18938446 120.53771210]
[67.25920105 129.63006592]
[53.80497742 136.26208496]
[39.32755280 140.18690491]
[24.36587143 141.25840759]
[9.47690201 139.43672180]
[-4.78509903 134.78964233]
[-17.88920975 127.49017334]
[-29.34761620 117.81004333]
[-38.73376465 106.10960388]
[-45.69824219 92.82441711]
[-49.98178864 78.44905090]
[-51.42494583 63.51863861]
[-49.97399139 48.58897781]
[-45.68293762 34.21584702]
[-38.71152115 20.93430710]
[-29.31926537 9.23877239]
[-17.85580444 -0.43537307]
[-4.74788332 -7.72799873]
[9.51654243 -12.36762714]
[24.40646172 -14.18154335]
[39.36758041 -13.10222244]
[53.84295273 -9.16984272]
[67.29371643 -2.53079152]
[79.21914673 6.56778383]
[89.17530823 17.78717804]
[96.79157257 30.70973778]
[101.78441620 44.85440063]
[103.96796417 59.69462204]
[103.26094818 74.67794800]
[99.69187164 89.24034119]
[109.83102417 78.18603516]
[119.97018433 67.13173676]
[113.62354279 53.34783936]
[113.03929138 38.22495270]
[118.27532959 24.06877136]
[128.50457764 13.02566910]
[142.14540100 6.75727844]
[157.10615540 6.19051027]
[171.10588074 11.38061237]
[181.24502563 0.32631284]
[191.38418579 -10.72798729]
[201.52334595 -21.78228569]
[205.03050232 -30.24533272]
[211.93417358 -32.93796158]
[222.26263428 -43.81560516]
[232.59107971 -54.69324875]
[242.91952515 -65.57089233]
[253.24797058 -76.44853973]
[263.57641602 -87.32618713]
[273.90487671 -98.20382690]
[284.23330688 -109.08147430]
[294.56176758 -119.95912170]
[304.89022827 -130.83676147]
[315.21865845 -141.71440125]
[305.67956543 -153.31549072]
[297.63845825 -166.00091553]
[291.21719360 -179.57836914]
[286.51318359 -193.84202576]
[283.59771729 -208.57565308]
[282.51495361 -223.55587769]
[283.28137207 -238.55561829]
[285.88531494 -253.34748840]
[290.28729248 -267.70721436]
[296.42059326 -281.41714478]
[304.19226074 -294.26943970]
[313.48443604 -306.06921387]
[324.15628052 -316.63763428]
[336.04598999 -325.81448364]
[348.97332764 -333.46060181]
[362.74234009 -339.46014404]
[377.14425659 -343.72207642]
[391.96075439 -346.18185425]
[406.96725464 -346.80215454]
[421.93624878 -345.57360840]
[436.64077759 -342.51480103]
[450.85794067 -337.67211914]
[464.37222290 -331.11895752]
[476.97875977 -322.95471191]
[488.48638916 -313.30310059]
[498.72073364 -302.31045532]
[507.52658081 -290.14340210]
[514.77044678 -276.98645020]
[520.34252930 -263.03900146]
[524.15838623 -248.51249695]
[526.16009521 -233.62718201]
[526.31738281 -218.60870361]
[524.62780762 -203.68472290]
[521.11706543 -189.08149719]
[515.83831787 -175.02041626]
[508.87155151 -161.71463013]
[500.32241821 -149.36584473]
[490.32055664 -138.16128540]
[479.01757812 -128.27078247]
[466.58477783 -119.84429932]
[453.21072388 -113.00956726]
[439.09808350 -107.87020111]
[424.46081543 -104.50411224]
[409.52087402 -102.96232605]
[394.50466919 -103.26822662]
[379.63989258 -105.41716766]
[365.15185547 -109.37656403]
[351.26025391 -115.08641052]
[338.17559814 -122.46013641]
[326.09631348 -131.38595581]
[315.76785278 -120.50831604]
[305.43942261 -109.63066864]
[295.11096191 -98.75302124]
[284.78250122 -87.87538147]
[274.45407104 -76.99773407]
[264.12561035 -66.12009430]
[253.79716492 -55.24244690]
[243.46871948 -44.36480331]
[233.14027405 -33.48715591]
[222.81182861 -22.60951233]
[212.57763672 -11.64313221]
[202.43849182 -0.58883226]
[192.29933167 10.46546745]
[182.16017151 21.51976776]
[188.53773499 35.01998901]
[189.26271057 49.97391129]
[184.19349670 64.10430145]
[174.07325745 75.24739075]
[160.42111206 81.68421173]
[145.30415344 82.40573120]
[131.02447510 77.27089691]
[120.88533020 88.32519531]
[110.74617004 99.37949371]
[103.77532196 112.66133118]
[100.43750763 127.28525543]
[108.58155823 140.56350708]
[104.98822021 155.34669495]
[92.27924347 163.02897644]
[88.94142914 177.65289307]
[85.60361481 192.27680969]
[82.26580048 206.90072632]
[90.04661560 214.26612854]
[94.02482605 224.12699890]
[93.54067993 234.66810608]
[88.74935150 243.97892761]
[80.58050537 250.40003967]
[70.55872345 252.81867981]
[66.46842957 267.25021362]
[62.37813568 281.68176270]
[58.28784180 296.11331177]
[54.19754791 310.54486084]
[50.10725403 324.97640991]
[62.79787445 333.18856812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 180]
[19 179]
[20 178]
[21 177]
[22 176]
[23 175]
[26 169]
[27 168]
[28 167]
[29 166]
[32 163]
[33 162]
[64 161]
[65 160]
[66 159]
[73 152]
[74 151]
[75 150]
[76 149]
[78 148]
[79 147]
[80 146]
[81 145]
[82 144]
[83 143]
[84 142]
[85 141]
[86 140]
[87 139]
[88 138]
] def

init

% Start Annotations
18 180 0.16 0.2 colorpair
19 179 0.0 0.6 colorpair
20 178 0.32 0.6 colorpair
21 177 0.32 0.2 colorpair
22 176 0.32 0.2 colorpair
23 175 0.32 0.6 colorpair
26 169 0.0 0.2 colorpair
27 168 0.16 1 colorpair
28 167 0.16 0.6 colorpair
29 166 0.0 1 colorpair
32 163 0.16 1 colorpair
33 162 0.16 1 colorpair
64 161 0.0 0.6 colorpair
65 160 0.0 0.2 colorpair
66 159 0.16 1 colorpair
73 152 0.0 0.6 colorpair
74 151 0.0 0.2 colorpair
75 150 0.16 0.6 colorpair
76 149 0.0 0.6 colorpair
78 148 0.0 0.2 colorpair
79 147 0.0 0.2 colorpair
80 146 0.0 1 colorpair
81 145 0.0 0.6 colorpair
82 144 0.16 0.6 colorpair
83 143 0.0 0.6 colorpair
84 142 0.0 0.6 colorpair
85 141 0.0 1 colorpair
86 140 0.0 1 colorpair
87 139 0.16 0.6 colorpair
88 138 0.48 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
18 180 2 gmark
18 cmark
19 179 1 gmark
20 178 1 gmark
20 cmark
178 cmark
21 177 2 gmark
21 cmark
177 cmark
22 176 2 gmark
22 cmark
176 cmark
23 175 1 gmark
23 cmark
175 cmark
26 169 2 gmark
27 cmark
168 cmark
28 167 1 gmark
28 cmark
167 cmark
163 cmark
162 cmark
64 161 1 gmark
65 160 2 gmark
66 cmark
73 152 1 gmark
74 151 2 gmark
75 150 1 gmark
150 cmark
76 149 1 gmark
78 148 2 gmark
79 147 2 gmark
81 145 1 gmark
82 144 1 gmark
82 cmark
144 cmark
83 143 1 gmark
84 142 1 gmark
87 139 1 gmark
87 cmark
139 cmark
88 cmark
138 cmark

% End Annotations
showpage
end
%%EOF
