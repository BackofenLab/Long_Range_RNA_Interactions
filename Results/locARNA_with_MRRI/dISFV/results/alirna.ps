%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Jan 25 16:57:03 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUAAGAUAGAAUAGAAAAAGAAAUAUCAAUGGUGAAUAAACCUAGAAAGACCGUCGCGACGCGGUA_UCGAAAUAUCGAAACGAGCAUUACCACGCGU_U_______C_CAUAAGAGAUAGAACAGCAUAUUGACACCUGGGAA_AGACCGGAGAUAC_CUCUGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[86.28746033 314.36831665]
[87.53271484 329.43286133]
[84.28067017 344.19482422]
[76.82048798 357.34158325]
[65.81552124 367.70413208]
[52.24433517 374.36102295]
[37.31366348 376.72033691]
[22.35113144 374.57232666]
[8.68719769 368.10794067]
[-2.46315002 357.90197754]
[-10.10842991 344.86199951]
[-13.56882954 330.14749146]
[-12.53665161 315.06683350]
[-7.10367727 300.96102905]
[2.24699712 289.08432007]
[14.68391609 280.49276733]
[29.10119629 275.95037842]
[44.21686554 275.86102295]
[48.53835297 261.49700928]
[52.85983658 247.13299561]
[57.18132401 232.76898193]
[61.50281143 218.40496826]
[65.82429504 204.04096985]
[55.34936905 187.65269470]
[60.32421112 168.53572083]
[77.99398804 159.04475403]
[81.52230072 144.46562195]
[85.05061340 129.88648987]
[88.57893372 115.30736542]
[81.12054443 102.88485718]
[84.52878571 88.80188751]
[96.84194183 81.16432190]
[100.37025452 66.58518982]
[103.89856720 52.00606155]
[107.42688751 37.42693329]
[95.66508484 29.36137772]
[87.38515472 17.78623199]
[83.56749725 4.10718060]
[84.65210724 -10.02315044]
[90.48802185 -22.90485001]
[100.35389709 -32.99522781]
[113.04714203 -39.09355545]
[127.03048706 -40.48394012]
[130.82449341 -54.99619675]
[134.61848450 -69.50845337]
[138.41249084 -84.02070618]
[142.20648193 -98.53295898]
[127.97795105 -103.29967499]
[114.10366821 -109.01608276]
[100.64695740 -115.65610504]
[87.66921234 -123.18943787]
[75.22965240 -131.58171082]
[63.38503647 -140.79463196]
[52.18940735 -150.78617859]
[41.69384384 -161.51072693]
[31.94624519 -172.91938782]
[22.99108124 -184.96006775]
[14.86921501 -197.57783508]
[7.61770344 -210.71513367]
[1.26963496 -224.31201172]
[-4.14602566 -238.30641174]
[-8.60456848 -252.63450623]
[-12.08564854 -267.23092651]
[-14.57338333 -282.02902222]
[-16.05642319 -296.96133423]
[-16.52799797 -311.95968628]
[-15.98595810 -326.95565796]
[-14.43277645 -341.88082886]
[-11.87554073 -356.66708374]
[-8.32591724 -371.24697876]
[-3.80010438 -385.55395508]
[1.68124914 -399.52276611]
[8.09313202 -413.08966064]
[15.40628910 -426.19274902]
[23.58735085 -438.77221680]
[32.59898758 -450.77069092]
[42.40008545 -462.13342285]
[52.94591522 -472.80853271]
[64.18836975 -482.74737549]
[76.07614136 -491.90454102]
[88.55500031 -500.23828125]
[101.56799316 -507.71054077]
[115.05575562 -514.28729248]
[128.95674133 -519.93841553]
[143.20751953 -524.63824463]
[157.74307251 -528.36523438]
[172.49707031 -531.10247803]
[187.40220642 -532.83740234]
[202.39045715 -533.56213379]
[217.39344788 -533.27331543]
[232.34269714 -531.97235107]
[247.17002869 -529.66510010]
[261.80776978 -526.36218262]
[276.18911743 -522.07855225]
[290.24850464 -516.83380127]
[303.92169189 -510.65188599]
[317.14639282 -503.56100464]
[329.86218262 -495.59347534]
[342.01110840 -486.78570557]
[353.53765869 -477.17782593]
[364.38931274 -466.81372070]
[374.51654053 -455.74069214]
[383.87310791 -444.00918579]
[392.41632080 -431.67282104]
[400.10723877 -418.78784180]
[406.91073608 -405.41302490]
[412.79577637 -391.60943604]
[417.73553467 -377.44003296]
[421.70739746 -362.96948242]
[424.69332886 -348.26379395]
[426.67965698 -333.39007568]
[427.65731812 -318.41619873]
[427.62188721 -303.41046143]
[426.57348633 -288.44137573]
[424.51690674 -273.57720947]
[421.46154785 -258.88580322]
[417.42132568 -244.43417358]
[412.41470337 -230.28826904]
[406.46450806 -216.51261902]
[399.59790039 -203.17012024]
[391.84619141 -190.32160950]
[383.24478149 -178.02572632]
[373.83291626 -166.33859253]
[363.65347290 -155.31350708]
[352.75299072 -145.00079346]
[341.18115234 -135.44749451]
[328.99078369 -126.69720459]
[316.23745728 -118.78984833]
[302.97943115 -111.76151276]
[289.27716064 -105.64426422]
[275.19317627 -100.46601105]
[260.79174805 -96.25038147]
[246.13856506 -93.01660919]
[231.30050659 -90.77944946]
[216.34526062 -89.54911041]
[201.34107971 -89.33121490]
[186.35641479 -90.12673950]
[171.45965576 -91.93206787]
[156.71875000 -94.73896027]
[152.92474365 -80.22670746]
[149.13073730 -65.71444702]
[145.33674622 -51.20219421]
[141.54273987 -36.68994141]
[154.30796814 -27.32840538]
[162.52975464 -13.75595379]
[164.92692566 1.96937406]
[161.10409546 17.44982338]
[151.61662292 30.31352806]
[137.89004517 38.57791901]
[122.00601196 40.95524597]
[118.47769928 55.53437424]
[114.94938660 70.11350250]
[111.42106628 84.69263458]
[118.87945557 97.11514282]
[115.47121429 111.19811249]
[103.15805817 118.83567810]
[99.62974548 133.41481018]
[96.10143280 147.99394226]
[92.57311249 162.57307434]
[100.27027893 170.05329895]
[104.12004852 179.98545837]
[103.48468018 190.53755188]
[98.54716492 199.79315186]
[90.26566315 206.09948730]
[80.18830872 208.36244202]
[75.86682129 222.72645569]
[71.54533386 237.09046936]
[67.22384644 251.45448303]
[62.90235901 265.81848145]
[58.58087540 280.18249512]
[71.13800049 288.59735107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 170]
[19 169]
[20 168]
[21 167]
[22 166]
[23 165]
[26 159]
[27 158]
[28 157]
[29 156]
[32 153]
[33 152]
[34 151]
[35 150]
[43 143]
[44 142]
[45 141]
[46 140]
[47 139]
] def

init

% Start Annotations
18 170 0.16 0.2 colorpair
19 169 0.0 0.6 colorpair
20 168 0.32 0.6 colorpair
21 167 0.32 0.2 colorpair
22 166 0.32 0.2 colorpair
23 165 0.32 0.6 colorpair
26 159 0.0 0.2 colorpair
27 158 0.16 1 colorpair
28 157 0.16 0.6 colorpair
29 156 0.0 1 colorpair
32 153 0.16 1 colorpair
33 152 0.16 1 colorpair
34 151 0.0 0.6 colorpair
35 150 0.0 0.2 colorpair
43 143 0.16 0.2 colorpair
44 142 0.16 0.6 colorpair
45 141 0.16 0.2 colorpair
46 140 0.16 0.2 colorpair
47 139 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
18 170 2 gmark
18 cmark
19 169 1 gmark
20 168 1 gmark
20 cmark
168 cmark
21 167 2 gmark
21 cmark
167 cmark
22 166 2 gmark
22 cmark
166 cmark
23 165 1 gmark
23 cmark
165 cmark
26 159 2 gmark
27 cmark
158 cmark
28 157 1 gmark
28 cmark
157 cmark
153 cmark
152 cmark
34 151 1 gmark
35 150 2 gmark
43 143 2 gmark
43 cmark
44 142 1 gmark
44 cmark
45 141 2 gmark
45 cmark
141 cmark
46 140 2 gmark
46 cmark
140 cmark
47 139 2 gmark

% End Annotations
showpage
end
%%EOF
