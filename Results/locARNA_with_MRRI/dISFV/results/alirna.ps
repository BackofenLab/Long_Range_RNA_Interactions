%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Fri Jan 26 12:45:17 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUUAGAGUAAACUAGAAAAAGAAUUAUCAAUG_________GUGACUAAACCAAGAAAGCCCGUU__AAAACGGGCUGUCAAUAUGAUAAAAC__G__U__CCAAGCG_CU_______C_CAUAAGAGAUAGAACAUCAUAUCGACAC___CGGGGAAAGACCGGAGAUACUUCUGGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[63.09376144 429.41833496]
[50.73298264 437.96887207]
[37.21178055 444.53222656]
[22.84712219 448.95455933]
[7.97572803 451.13217163]
[-7.05379248 451.01406860]
[-21.88912582 448.60299683]
[-36.18251038 443.95547485]
[-49.59889221 437.18041992]
[-61.82376480 428.43667603]
[-72.57056427 417.92922974]
[-81.58737183 405.90435791]
[-88.66281891 392.64395142]
[-93.63104248 378.45883179]
[-96.37558746 363.68154907]
[-96.83211517 348.65850830]
[-94.98992157 333.74185181]
[-90.89219666 319.28125000]
[-84.63498688 305.61566162]
[-76.36498260 293.06549072]
[-66.27603149 281.92486572]
[-54.60463715 272.45495605]
[-41.62440109 264.87774658]
[-27.63959312 259.37088013]
[-12.97803593 256.06344604]
[2.01658010 255.03295898]
[16.99276161 256.30355835]
[20.52539444 241.72547913]
[24.05802727 227.14739990]
[27.59066010 212.56932068]
[19.64012337 200.02641296]
[23.01504517 185.19183350]
[36.22510910 176.93762207]
[39.75774002 162.35954285]
[29.70174408 173.48954773]
[17.69507790 182.48065186]
[4.18492174 188.99798584]
[-10.32554531 192.79881287]
[-25.29588890 193.74159241]
[-40.16854477 191.79119873]
[-54.38959503 187.02026367]
[-67.42938232 179.60649109]
[-78.80223846 169.82600403]
[-88.08460236 158.04306030]
[-94.93075562 144.69651794]
[-99.08570862 130.28346252]
[-100.39471436 115.34068298]
[-98.80902100 100.42472839]
[-94.38768768 86.09114075]
[-87.29538727 72.87375641]
[-77.79626465 61.26485062]
[-66.24411774 51.69679260]
[-53.06918335 44.52593613]
[-38.76216507 40.01936340]
[-23.85591698 38.34490967]
[-8.90561485 39.56494141]
[5.53192568 43.63402557]
[18.91898727 50.40060425]
[30.75697708 59.61265945]
[40.60499191 70.92710114]
[48.09625626 83.92252350]
[52.95175552 98.11492157]
[54.99065018 112.97570038]
[54.13700485 127.95139313]
[50.42380142 142.48092651]
[60.61750031 131.47691345]
[70.81119537 120.47288513]
[65.21421814 107.81503296]
[64.85915375 93.97953033]
[69.79949951 81.05125427]
[79.29078674 70.97839355]
[91.90277100 65.27882385]
[105.73493958 64.81142426]
[118.70290375 69.64663696]
[122.66578674 54.32977676]
[137.05827332 50.49498367]
[147.15817261 39.40480423]
[150.41688538 30.84637833]
[157.23657227 27.95350838]
[167.24194336 16.77797318]
[177.24731445 5.60243893]
[187.25268555 -5.57309580]
[197.25805664 -16.74863052]
[207.26342773 -27.92416573]
[217.26879883 -39.09970093]
[227.27415466 -50.27523422]
[237.27952576 -61.45077133]
[247.28489685 -72.62630463]
[257.29028320 -83.80184174]
[267.29565430 -94.97737885]
[257.47665405 -106.34469604]
[249.19195557 -118.87434387]
[242.57757568 -132.36056519]
[237.74214172 -146.58192444]
[234.76502991 -161.30487061]
[233.69515991 -176.28764343]
[234.55006409 -191.28422546]
[237.31573486 -206.04835510]
[241.94674683 -220.33758545]
[248.36705017 -233.91726685]
[256.47122192 -246.56443787]
[266.12619019 -258.07138062]
[277.17340088 -268.24917603]
[289.43145752 -276.93069458]
[302.69906616 -283.97332764]
[316.75836182 -289.26150513]
[331.37847900 -292.70831299]
[346.31933594 -294.25723267]
[361.33557129 -293.88275146]
[376.18066406 -291.59106445]
[390.61080933 -287.41979980]
[404.38903809 -281.43743896]
[417.28912354 -273.74221802]
[429.09921265 -264.46051025]
[439.62539673 -253.74473572]
[448.69479370 -241.77084351]
[456.15850830 -228.73544312]
[461.89395142 -214.85261536]
[465.80697632 -200.35032654]
[467.83331299 -185.46670532]
[467.93966675 -170.44615173]
[466.12429810 -155.53532410]
[462.41705322 -140.97906494]
[456.87875366 -127.01641083]
[449.60040283 -113.87663269]
[440.70147705 -101.77550507]
[430.32809448 -90.91173553]
[418.65063477 -81.46371460]
[405.86080933 -73.58659363]
[392.16867065 -67.40972137]
[377.79907227 -63.03451920]
[362.98791504 -60.53283691]
[347.97845459 -59.94575882]
[333.01718140 -61.28292084]
[318.34970093 -64.52236176]
[304.21694946 -69.61090088]
[290.85095215 -76.46495819]
[278.47116089 -84.97200775]
[268.46582031 -73.79647064]
[258.46044922 -62.62093735]
[248.45506287 -51.44540024]
[238.44969177 -40.26986694]
[228.44432068 -29.09433174]
[218.43896484 -17.91879654]
[208.43359375 -6.74326134]
[198.42822266 4.43227339]
[188.42285156 15.60780811]
[178.41748047 26.78334427]
[168.41210938 37.95887756]
[158.50198364 49.21896362]
[158.39935303 52.76499557]
[156.55979919 56.43531799]
[152.94483948 59.40758514]
[147.88761902 60.87406921]
[144.66711426 75.41633606]
[129.53224182 80.02571869]
[135.28096008 94.86396027]
[134.00135803 110.72535706]
[125.94831848 124.45014954]
[112.72612000 133.30421448]
[96.96874237 135.52374268]
[81.81521606 130.66658020]
[71.62152100 141.67060852]
[61.42782593 152.67462158]
[54.33582306 165.89216614]
[50.80319214 180.47026062]
[58.76935577 193.85598755]
[54.97909164 208.58992004]
[42.16874313 216.10194397]
[38.63610840 230.68002319]
[35.10347748 245.25811768]
[31.57084274 259.83618164]
[45.46738052 265.56216431]
[58.32693100 273.34240723]
[69.84805298 282.99456787]
[79.76066589 294.29238892]
[87.83242035 306.97100830]
[93.87408447 320.73321533]
[97.74404907 335.25643921]
[99.35157776 350.20022583]
[98.65901184 365.21423340]
[95.68256378 379.94656372]
[90.49201965 394.05181885]
[83.20904541 407.19940186]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 172]
[28 171]
[29 170]
[30 169]
[33 166]
[34 165]
[65 164]
[66 163]
[67 162]
[74 156]
[76 154]
[77 150]
[79 149]
[80 148]
[81 147]
[82 146]
[83 145]
[84 144]
[85 143]
[86 142]
[87 141]
[88 140]
[89 139]
[90 138]
] def

init

% Start Annotations
27 172 0.0 0.6 colorpair
28 171 0.0 0.2 colorpair
29 170 0.16 0.6 colorpair
30 169 0.0 1 colorpair
33 166 0.16 1 colorpair
34 165 0.16 1 colorpair
65 164 0.0 1 colorpair
66 163 0.0 0.2 colorpair
67 162 0.16 0.6 colorpair
74 156 0.0 0.6 colorpair
76 154 0.16 0.6 colorpair
77 150 0.0 0.6 colorpair
79 149 0.0 0.6 colorpair
80 148 0.0 0.2 colorpair
81 147 0.0 0.6 colorpair
82 146 0.0 0.6 colorpair
83 145 0.16 0.6 colorpair
84 144 0.0 1 colorpair
85 143 0.0 1 colorpair
86 142 0.0 0.6 colorpair
87 141 0.16 1 colorpair
88 140 0.16 0.6 colorpair
89 139 0.32 0.6 colorpair
90 138 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
27 172 1 gmark
28 171 2 gmark
29 170 1 gmark
29 cmark
170 cmark
166 cmark
165 cmark
66 163 2 gmark
67 162 1 gmark
67 cmark
74 156 1 gmark
76 154 1 gmark
154 cmark
77 150 1 gmark
79 149 1 gmark
80 148 2 gmark
81 147 1 gmark
82 146 1 gmark
83 145 1 gmark
83 cmark
145 cmark
86 142 1 gmark
141 cmark
88 140 1 gmark
88 cmark
140 cmark
89 139 1 gmark
89 cmark
139 cmark
90 138 2 gmark

% End Annotations
showpage
end
%%EOF
