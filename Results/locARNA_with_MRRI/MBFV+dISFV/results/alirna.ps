%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Feb  5 19:43:59 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___U____UAACACAGUGUGAACAGUUUUUUAGCAGAAUCUCUCU___AAUG___UCU___AAAAAACCAGGAAGGCCCGGCGGAAACCGGGCUGUCAAUAUGCUAAAACGCGGAGCACCCCGCG_________________________AGAGGUUAGAGGAGACCCCCCGGCA______________CAAAAAAAAACAGCAUAUUGACACCUGGGAA__AGACCAGAGG_____AUCUUCUGCUC__CCGCA\
ACACCAGCCAC_____\
) } def
/len { sequence length } bind def

/coor [
[47.29942322 810.11840820]
[32.85403824 814.16839600]
[18.24574089 817.58447266]
[3.50234056 820.36010742]
[-11.34809780 822.48999023]
[-26.27730560 823.97009277]
[-41.25686264 824.79754639]
[-56.25825882 824.97082520]
[-71.25293732 824.48956299]
[-86.21234894 823.35473633]
[-101.10801697 821.56848145]
[-115.91159821 819.13415527]
[-130.59490967 816.05639648]
[-145.12998962 812.34112549]
[-159.48918152 807.99536133]
[-173.64514160 803.02740479]
[-187.57093811 797.44671631]
[-201.24003601 791.26391602]
[-214.62644958 784.49072266]
[-227.70468140 777.14007568]
[-240.44981384 769.22595215]
[-252.83763123 760.76348877]
[-264.84451294 751.76867676]
[-276.44763184 742.25866699]
[-287.62487793 732.25164795]
[-298.35498047 721.76654053]
[-308.61752319 710.82342529]
[-318.39294434 699.44305420]
[-327.66268921 687.64715576]
[-336.40905762 675.45806885]
[-344.61544800 662.89910889]
[-352.26617432 649.99420166]
[-359.34674072 636.76776123]
[-365.84362793 623.24511719]
[-371.74450684 609.45196533]
[-377.03808594 595.41448975]
[-381.71432495 581.15948486]
[-385.76434326 566.71411133]
[-389.18038940 552.10583496]
[-391.95596313 537.36242676]
[-394.08581543 522.51196289]
[-395.56585693 507.58276367]
[-396.39331055 492.60321045]
[-396.56655884 477.60180664]
[-396.08529663 462.60714722]
[-394.95043945 447.64773560]
[-393.16412354 432.75204468]
[-390.72979736 417.94848633]
[-387.65203857 403.26516724]
[-383.93673706 388.73010254]
[-379.59094238 374.37091064]
[-374.62298584 360.21496582]
[-369.04223633 346.28918457]
[-362.85940552 332.62008667]
[-356.08621216 319.23367310]
[-348.73553467 306.15548706]
[-340.82141113 293.41033936]
[-332.35885620 281.02255249]
[-323.36404419 269.01568604]
[-313.85403442 257.41259766]
[-303.84698486 246.23535156]
[-293.36187744 235.50526428]
[-282.41873169 225.24275208]
[-271.03836060 215.46733093]
[-259.24240112 206.19761658]
[-247.05334473 197.45126343]
[-234.49438477 189.24490356]
[-221.58941650 181.59419250]
[-208.36300659 174.51365662]
[-194.84033203 168.01678467]
[-181.04714966 162.11595154]
[-167.00968933 156.82238770]
[-152.75469971 152.14616394]
[-138.30929565 148.09619141]
[-123.70098877 144.68016052]
[-108.95758057 141.90460205]
[-94.10713196 139.77478027]
[-79.17792511 138.29475403]
[-64.19835663 137.46733093]
[-49.19696426 137.29411316]
[-34.20228958 137.77539062]
[-19.24288177 138.91029358]
[-4.34721518 140.69662476]
[10.45635605 143.13099670]
[25.13965034 146.20877075]
[39.67472076 149.92408752]
[54.03389359 154.26989746]
[68.18984222 159.23789978]
[73.76965332 145.31433105]
[79.34946442 131.39076233]
[84.92927551 117.46720123]
[90.50907898 103.54363251]
[90.34355164 95.51648712]
[96.23458099 89.49208069]
[101.97483063 75.63388824]
[107.71508789 61.77569580]
[113.45533752 47.91749954]
[119.19558716 34.05930710]
[124.93583679 20.20111465]
[130.67608643 6.34292221]
[136.41633606 -7.51527071]
[142.15660095 -21.37346458]
[147.89685059 -35.23165512]
[153.63710022 -49.08985138]
[159.37734985 -62.94804382]
[145.91496277 -69.57548523]
[132.90979004 -77.06044769]
[120.41641235 -85.37153625]
[108.48719788 -94.47389221]
[97.17220306 -104.32933807]
[86.51888275 -114.89653778]
[76.57192230 -126.13116455]
[67.37303925 -137.98609924]
[58.96081543 -150.41160583]
[51.37053680 -163.35559082]
[44.63404465 -176.76374817]
[38.77959061 -190.57983398]
[33.83172607 -204.74589539]
[29.81121254 -219.20254517]
[26.73490906 -233.88909912]
[24.61572075 -248.74400330]
[23.46253204 -263.70492554]
[23.28018570 -278.70910645]
[24.06944084 -293.69363403]
[25.82699203 -308.59564209]
[28.54546547 -323.35263062]
[32.21345520 -337.90270996]
[36.81558228 -352.18484497]
[42.33254242 -366.13912964]
[48.74119186 -379.70703125]
[56.01465607 -392.83166504]
[64.12242126 -405.45794678]
[73.03047943 -417.53292847]
[82.70147705 -429.00598145]
[93.09484100 -439.82894897]
[104.16697693 -449.95648193]
[115.87145233 -459.34606934]
[128.15916443 -467.95831299]
[140.97857666 -475.75714111]
[154.27592468 -482.70977783]
[167.99543762 -488.78710938]
[182.07955933 -493.96365356]
[196.46922302 -498.21765137]
[211.10406494 -501.53128052]
[225.92271423 -503.89065552]
[240.86300659 -505.28585815]
[255.86227417 -505.71109009]
[270.85760498 -505.16448975]
[285.78613281 -503.64837646]
[300.58517456 -501.16915894]
[315.19271851 -497.73715210]
[329.54748535 -493.36682129]
[343.58926392 -488.07647705]
[357.25912476 -481.88830566]
[370.49975586 -474.82824707]
[383.25564575 -466.92593384]
[395.47323608 -458.21450806]
[407.10131836 -448.73049927]
[418.09112549 -438.51367188]
[428.39654541 -427.60693359]
[437.97436523 -416.05599976]
[446.78439331 -403.90930176]
[454.78970337 -391.21780396]
[461.95669556 -378.03472900]
[468.25534058 -364.41540527]
[473.65914917 -350.41693115]
[478.14553833 -336.09799194]
[481.69564819 -321.51870728]
[484.29458618 -306.74020386]
[485.93145752 -291.82446289]
[486.59939575 -276.83404541]
[486.29562378 -261.83181763]
[485.02136230 -246.88072205]
[482.78201294 -232.04345703]
[479.58694458 -217.38227844]
[475.44955444 -202.95864868]
[470.38717651 -188.83308411]
[464.42111206 -175.06483459]
[457.57629395 -161.71165466]
[449.88150024 -148.82952881]
[441.36898804 -136.47251892]
[432.07446289 -124.69242096]
[422.03686523 -113.53867340]
[411.29837036 -103.05805206]
[399.90399170 -93.29450989]
[387.90148926 -84.28900909]
[375.34124756 -76.07931519]
[362.27593994 -68.69985962]
[348.76034546 -62.18159866]
[334.85116577 -56.55187607]
[320.60675049 -51.83430099]
[306.08682251 -48.04866028]
[291.35232544 -45.21083450]
[276.46502686 -43.33272552]
[261.48739624 -42.42221069]
[246.48220825 -42.48310852]
[231.51245117 -43.51516342]
[216.64088440 -45.51404953]
[201.92990112 -48.47138214]
[187.44119263 -52.37475204]
[173.23553467 -57.20779037]
[167.49528503 -43.34959793]
[161.75503540 -29.49140549]
[156.01478577 -15.63321209]
[150.27453613 -1.77501929]
[144.53428650 12.08317375]
[138.79403687 25.94136620]
[133.05378723 39.79956055]
[127.31352997 53.65775299]
[121.57328033 67.51594543]
[115.83302307 81.37413788]
[110.09277344 95.23233032]
[104.43264771 109.12344360]
[98.85283661 123.04701233]
[93.27302551 136.97058105]
[87.69321442 150.89414978]
[82.11341095 164.81770325]
[95.78253937 171.00048828]
[109.16896820 177.77362061]
[122.24722290 185.12422180]
[134.99240112 193.03828430]
[147.38023376 201.50074768]
[159.38714600 210.49551392]
[170.99029541 220.00544739]
[182.16757202 230.01246643]
[192.89772034 240.49749756]
[203.16029358 251.44059753]
[212.93577576 262.82092285]
[222.20555115 274.61682129]
[230.95196533 286.80584717]
[239.15838623 299.36474609]
[246.80917358 312.26968384]
[253.88978577 325.49606323]
[260.38671875 339.01870728]
[266.28762817 352.81185913]
[271.58126831 366.84927368]
[276.25756836 381.10424805]
[280.30761719 395.54962158]
[283.72369385 410.15792847]
[286.49935913 424.90130615]
[288.62924194 439.75173950]
[290.10934448 454.68093872]
[290.93685913 469.66052246]
[291.11016846 484.66189575]
[290.62893677 499.65658569]
[289.49414062 514.61596680]
[287.70788574 529.51165771]
[285.27359009 544.31524658]
[282.19589233 558.99853516]
[278.48062134 573.53363037]
[274.13491821 587.89282227]
[269.16696167 602.04882812]
[263.58630371 615.97460938]
[257.40350342 629.64373779]
[250.63034058 643.03015137]
[243.27972412 656.10839844]
[235.36563110 668.85357666]
[226.90313721 681.24139404]
[217.90835571 693.24829102]
[208.39839172 704.85144043]
[198.39137268 716.02868652]
[187.90631104 726.75878906]
[176.96321106 737.02136230]
[165.58285522 746.79681396]
[153.78694153 756.06658936]
[141.59791565 764.81298828]
[129.03897095 773.01934814]
[116.13403320 780.67010498]
[102.90764618 787.75073242]
[89.38500214 794.24761963]
[75.59183502 800.14849854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[88 217]
[89 216]
[90 215]
[91 214]
[92 213]
[94 212]
[95 211]
[96 210]
[97 209]
[98 208]
[99 207]
[100 206]
[101 205]
[102 204]
[103 203]
[104 202]
[105 201]
] def

init

% Start Annotations
96 210 0.0 0.6 colorpair
97 209 0.16 1 colorpair
98 208 0.16 1 colorpair
99 207 0.0 0.6 colorpair
100 206 0.0 0.6 colorpair
101 205 0.0 0.6 colorpair
102 204 0.0 0.6 colorpair
103 203 0.16 1 colorpair
104 202 0.32 1 colorpair
105 201 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
88 217 10 gmark
88 cmark
89 216 4 gmark
90 215 7 gmark
90 cmark
215 cmark
91 214 4 gmark
214 cmark
92 213 11 gmark
94 212 7 gmark
94 cmark
212 cmark
95 211 9 gmark
96 210 1 gmark
97 cmark
98 cmark
208 cmark
99 207 1 gmark
100 206 1 gmark
101 205 1 gmark
102 204 1 gmark
103 cmark
203 cmark
104 cmark
202 cmark
105 201 2 gmark

% End Annotations
showpage
end
%%EOF
