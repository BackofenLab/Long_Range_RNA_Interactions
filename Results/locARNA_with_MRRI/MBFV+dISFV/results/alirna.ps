%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.5.1
%%CreationDate: Fri Jan 19 13:18:18 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______UUUGAACA_UUUUUUAGCAAAGUUUAUU__CAAUGUCU___AAAAAACCAGGAAGGCCC___GGUGGAAACCGGGCUGUCAAUAUGCUAAAACGCGGAGCAACCCGCG_____________CACCCG_AAAAAAAAAACAGCAUAUUGACACCUGGGA__AAGACCAGGAGAUCCUCUGC_UU________________UUC\
) } def
/len { sequence length } bind def

/coor [
[49.29831314 620.69525146]
[35.51216125 626.61932373]
[21.37803841 631.65710449]
[6.95285606 635.78826904]
[-7.70529985 638.99621582]
[-22.53740692 641.26806641]
[-37.48373795 642.59460449]
[-52.48411179 642.97045898]
[-67.47812653 642.39422607]
[-82.40540314 640.86816406]
[-97.20584106 638.39843750]
[-111.81983948 634.99499512]
[-126.18855286 630.67144775]
[-140.25411987 625.44537354]
[-153.95989990 619.33764648]
[-167.25071716 612.37298584]
[-180.07304382 604.57934570]
[-192.37525940 595.98822021]
[-204.10781860 586.63409424]
[-215.22348022 576.55462646]
[-225.67747498 565.79052734]
[-235.42771912 554.38500977]
[-244.43495178 542.38409424]
[-252.66290283 529.83605957]
[-260.07843018 516.79144287]
[-266.65170288 503.30273438]
[-272.35620117 489.42431641]
[-277.16900635 475.21200562]
[-281.07070923 460.72308350]
[-284.04562378 446.01583862]
[-286.08175659 431.14953613]
[-287.17089844 416.18405151]
[-287.30868530 401.17959595]
[-286.49453735 386.19662476]
[-284.73175049 371.29544067]
[-282.02740479 356.53607178]
[-278.39242554 341.97793579]
[-273.84140015 327.67965698]
[-268.39270020 313.69879150]
[-262.06826782 300.09167480]
[-254.89350891 286.91305542]
[-246.89736938 274.21606445]
[-238.11204529 262.05172729]
[-228.57287598 250.46913147]
[-218.31831360 239.51484680]
[-207.38961792 229.23300171]
[-195.83081055 219.66500854]
[-183.68843079 210.84938049]
[-171.01138306 202.82162476]
[-157.85070801 195.61405945]
[-144.25938416 189.25572205]
[-130.29216003 183.77218628]
[-116.00526428 179.18556213]
[-101.45623016 175.51429749]
[-86.70364380 172.77319336]
[-71.80690002 170.97326660]
[-56.82599640 170.12178040]
[-41.82125092 170.22216797]
[-26.85307884 171.27401733]
[-11.98175621 173.27308655]
[2.73283672 176.21131897]
[17.23144913 180.07691956]
[31.45569801 184.85427856]
[45.34830856 190.52420044]
[51.88557053 177.02366638]
[47.67627716 167.71057129]
[49.32344055 157.40158081]
[56.52148819 149.53967285]
[67.07138062 146.88429260]
[74.01149750 133.58636475]
[63.11406326 121.04457092]
[57.86270523 105.28151703]
[59.06123352 88.71002960]
[66.52619171 73.86668396]
[79.11493683 63.02351761]
[94.90052032 57.84028625]
[111.46667480 59.11037445]
[118.00393677 45.60984802]
[124.54119873 32.10932541]
[131.07846069 18.60879707]
[137.61572266 5.10827112]
[138.53950500 -3.98092890]
[144.35404968 -8.54492950]
[151.09350586 -21.94566917]
[157.83294678 -35.34640884]
[164.57240295 -48.74714661]
[171.31184387 -62.14788818]
[178.05130005 -75.54862976]
[184.79074097 -88.94936371]
[191.53019714 -102.35010529]
[198.26965332 -115.75084686]
[205.00909424 -129.15158081]
[211.74855042 -142.55232239]
[218.48799133 -155.95306396]
[205.96295166 -164.23916626]
[194.50585938 -173.94851685]
[184.27757263 -184.94480896]
[175.42167664 -197.07368469]
[168.06248474 -210.16485596]
[162.30332947 -224.03454590]
[158.22505188 -238.48806763]
[155.88488770 -253.32247925]
[155.31571960 -268.32955933]
[156.52551270 -283.29861450]
[159.49728394 -298.01953125]
[164.18933105 -312.28561401]
[170.53576660 -325.89657593]
[178.44752502 -338.66140747]
[187.81350708 -350.40084839]
[198.50222778 -360.95013428]
[210.36366272 -370.16116333]
[223.23127747 -377.90460205]
[236.92443848 -384.07174683]
[251.25090027 -388.57604980]
[266.00955200 -391.35427856]
[280.99322510 -392.36740112]
[295.99151611 -391.60119629]
[310.79394531 -389.06643677]
[325.19265747 -384.79870605]
[338.98550415 -378.85791016]
[351.97891235 -371.32745361]
[363.99044800 -362.31304932]
[374.85147095 -351.94125366]
[384.40954590 -340.35763550]
[392.53045654 -327.72485352]
[399.10021973 -314.22024536]
[404.02658081 -300.03338623]
[407.24041748 -285.36343384]
[408.69659424 -270.41632080]
[408.37466431 -255.40190125]
[406.27914429 -240.53094482]
[402.43945312 -226.01222229]
[396.90951538 -212.04956055]
[389.76696777 -198.83895874]
[381.11203003 -186.56587219]
[371.06622314 -175.40260315]
[359.77062988 -165.50587463]
[347.38372803 -157.01460266]
[334.07949829 -150.04800415]
[320.04464722 -144.70387268]
[305.47625732 -141.05725098]
[290.57879639 -139.15930176]
[275.56143188 -139.03668213]
[260.63497925 -140.69111633]
[246.00897217 -144.09938049]
[231.88873291 -149.21362305]
[225.14929199 -135.81288147]
[218.40983582 -122.41213989]
[211.67037964 -109.01139832]
[204.93093872 -95.61065674]
[198.19148254 -82.20991516]
[191.45204163 -68.80918121]
[184.71258545 -55.40843964]
[177.97314453 -42.00769806]
[171.23368835 -28.60696030]
[164.49424744 -15.20621967]
[157.75479126 -1.80548024]
[151.11625671 11.64553261]
[144.57899475 25.14605904]
[138.04173279 38.64658356]
[131.50447083 52.14710999]
[124.96720123 65.64763641]
[134.33056641 75.00282288]
[140.35894775 86.78630829]
[142.46675110 99.85341644]
[140.44920349 112.93475342]
[134.50230408 124.75957489]
[125.20375824 134.17918396]
[113.45684814 140.27851868]
[100.40269470 142.46508789]
[87.30941772 140.52647400]
[80.36930847 153.82440186]
[82.13718414 173.90414429]
[65.38609314 183.56092834]
[58.84883499 197.06146240]
[71.91206360 204.44418335]
[84.48075104 212.64056396]
[96.50428772 221.61759949]
[107.93424988 231.33914185]
[118.72462463 241.76603699]
[128.83195496 252.85632324]
[138.21554565 264.56533813]
[146.83760071 276.84591675]
[154.66342163 289.64862061]
[161.66148376 302.92187500]
[167.80361938 316.61227417]
[173.06507874 330.66464233]
[177.42468262 345.02246094]
[180.86488342 359.62783813]
[183.37181091 374.42202759]
[184.93539429 389.34542847]
[185.54933167 404.33795166]
[185.21113586 419.33920288]
[183.92218018 434.28881836]
[181.68765259 449.12658691]
[178.51655579 463.79278564]
[174.42164612 478.22830200]
[169.41943359 492.37503052]
[163.53002930 506.17602539]
[156.77717590 519.57574463]
[149.18804932 532.52014160]
[140.79322815 544.95715332]
[131.62649536 556.83666992]
[121.72476196 568.11090088]
[111.12790680 578.73443604]
[99.87860107 588.66448975]
[88.02214050 597.86102295]
[75.60626984 606.28710938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 175]
[65 174]
[69 172]
[70 171]
[77 162]
[78 161]
[79 160]
[80 159]
[81 158]
[83 157]
[84 156]
[85 155]
[86 154]
[87 153]
[88 152]
[89 151]
[90 150]
[91 149]
[92 148]
[93 147]
[94 146]
] def

init

% Start Annotations
65 174 0.16 0.6 colorpair
78 161 0.0 0.2 colorpair
85 155 0.0 0.6 colorpair
86 154 0.16 0.6 colorpair
87 153 0.16 0.6 colorpair
88 152 0.0 0.6 colorpair
89 151 0.16 1 colorpair
90 150 0.0 1 colorpair
91 149 0.0 0.6 colorpair
92 148 0.16 0.6 colorpair
93 147 0.32 0.6 colorpair
94 146 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
64 175 12 gmark
65 174 1 gmark
65 cmark
69 172 4 gmark
172 cmark
70 171 14 gmark
77 162 10 gmark
77 cmark
78 161 2 gmark
79 160 7 gmark
79 cmark
160 cmark
80 159 4 gmark
159 cmark
81 158 10 gmark
83 157 6 gmark
83 cmark
157 cmark
84 156 8 gmark
85 155 1 gmark
86 154 1 gmark
86 cmark
87 153 1 gmark
87 cmark
153 cmark
88 152 1 gmark
151 cmark
91 149 1 gmark
92 148 1 gmark
92 cmark
148 cmark
93 147 1 gmark
93 cmark
147 cmark
94 146 2 gmark

% End Annotations
showpage
end
%%EOF
