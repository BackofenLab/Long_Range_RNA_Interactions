%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.5.1
%%CreationDate: Tue Jan 23 16:19:45 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____AAAUGUUUUUAGAGAAGAGGAUUAUC_____AUGUCU___AAAAAACCAGGAAGGCCC___GGCAGAAACCGGGCUGUCAAUAUGCUAAAACGCGGAGCAACCCGCG_____________CC__CGCAAAAA_A_AAACAGCAUAUUGACAC_CUGGGA___AGACCAGAGGAUCUUCUGCUUUC__________________\
) } def
/len { sequence length } bind def

/coor [
[57.53331375 616.34387207]
[43.53189087 621.74072266]
[29.20439720 626.20037842]
[14.61348724 629.70336914]
[-0.17703795 632.23437500]
[-15.10250282 633.78234863]
[-30.09764099 634.34051514]
[-45.09688187 633.90643311]
[-60.03463745 632.48193359]
[-74.84558868 630.07330322]
[-89.46497345 626.69110107]
[-103.82885742 622.35009766]
[-117.87443542 617.06921387]
[-131.54028320 610.87164307]
[-144.76666260 603.78442383]
[-157.49571228 595.83850098]
[-169.67178345 587.06872559]
[-181.24162292 577.51342773]
[-192.15466309 567.21429443]
[-202.36314392 556.21649170]
[-211.82246399 544.56799316]
[-220.49124146 532.31982422]
[-228.33157349 519.52551270]
[-235.30918884 506.24096680]
[-241.39353943 492.52432251]
[-246.55805969 478.43554688]
[-250.78013611 464.03625488]
[-254.04133606 449.38940430]
[-256.32736206 434.55902100]
[-257.62826538 419.60998535]
[-257.93832397 404.60766602]
[-257.25616455 389.61767578]
[-255.58480835 374.70550537]
[-252.93154907 359.93643188]
[-249.30799866 345.37500000]
[-244.72998047 331.08486938]
[-239.21752930 317.12857056]
[-232.79475403 303.56707764]
[-225.48973083 290.45974731]
[-217.33439636 277.86386108]
[-208.36442566 265.83450317]
[-198.61903381 254.42430115]
[-188.14083862 243.68310547]
[-176.97566223 233.65791321]
[-165.17231750 224.39256287]
[-152.78242493 215.92755127]
[-139.86016846 208.29991150]
[-126.46204376 201.54298401]
[-112.64664459 195.68634033]
[-98.47438049 190.75555420]
[-84.00721741 186.77221680]
[-69.30842590 183.75373840]
[-54.44227982 181.71330261]
[-39.47378159 180.65985107]
[-24.46838760 180.59797668]
[-9.49171066 181.52796936]
[5.39075708 183.44573975]
[20.11393929 186.34291077]
[34.61345291 190.20683289]
[48.82589722 195.02056885]
[54.56614685 181.16238403]
[49.87575912 173.61878967]
[49.17322922 164.62573242]
[52.74239349 156.19181824]
[59.89873886 150.25923157]
[69.11698914 148.25680542]
[75.47906494 134.67283630]
[64.05290985 122.61169434]
[58.12856293 107.08976746]
[58.61276245 90.48271942]
[65.43139648 75.33232880]
[77.54086304 63.95739746]
[93.08776855 58.09888840]
[109.69260406 58.65347290]
[115.64151001 44.88355637]
[121.59040833 31.11363983]
[127.53930664 17.34372330]
[133.38404846 3.52927494]
[133.77725220 -5.59909153]
[139.31706238 -10.49382210]
[145.26597595 -24.26373863]
[151.21487427 -38.03365326]
[157.16377258 -51.80356979]
[163.11267090 -65.57348633]
[169.06156921 -79.34339905]
[175.01046753 -93.11331940]
[180.95936584 -106.88323212]
[186.90827942 -120.65315247]
[192.85717773 -134.42306519]
[198.80607605 -148.19297791]
[204.75497437 -161.96289062]
[191.75340271 -169.47793579]
[179.71221924 -178.45158386]
[168.79425049 -188.76248169]
[159.14717102 -200.27117920]
[150.90141296 -212.82203674]
[144.16851807 -226.24533081]
[139.03952026 -240.35949707]
[135.58380127 -254.97369385]
[133.84809875 -269.89025879]
[133.85586548 -284.90747070]
[135.60700989 -299.82220459]
[139.07785034 -314.43283081]
[144.22143555 -328.54168701]
[150.96821594 -341.95800781]
[159.22695923 -354.50030518]
[168.88595581 -365.99902344]
[179.81459045 -376.29861450]
[191.86505127 -385.25979614]
[204.87438965 -392.76138306]
[218.66664124 -398.70193481]
[233.05531311 -403.00106812]
[247.84580994 -405.60067749]
[262.83807373 -406.46563721]
[277.82940674 -405.58416748]
[292.61700439 -402.96826172]
[307.00094604 -398.65325928]
[320.78665161 -392.69754028]
[333.78771973 -385.18164062]
[345.82830811 -376.20718384]
[356.74557495 -365.89556885]
[366.39190674 -354.38623047]
[374.63681030 -341.83480835]
[381.36883545 -328.41107178]
[386.49688721 -314.29656982]
[389.95162964 -299.68212891]
[391.68634033 -284.76547241]
[391.67755127 -269.74826050]
[389.92541504 -254.83361816]
[386.45361328 -240.22323608]
[381.30908203 -226.11471558]
[374.56140137 -212.69885254]
[366.30181885 -200.15708923]
[356.64205933 -188.65902710]
[345.71273804 -178.36016846]
[333.66168213 -169.39978027]
[320.65182495 -161.89906311]
[306.85919189 -155.95945740]
[292.47021484 -151.66127014]
[277.67956543 -149.06263733]
[262.68722534 -148.19869995]
[247.69596863 -149.08114624]
[232.90852356 -151.69804382]
[218.52488708 -156.01399231]
[212.57598877 -142.24407959]
[206.62709045 -128.47416687]
[200.67819214 -114.70424652]
[194.72929382 -100.93433380]
[188.78038025 -87.16442108]
[182.83148193 -73.39450073]
[176.88258362 -59.62458420]
[170.93368530 -45.85467148]
[164.98478699 -32.08475494]
[159.03588867 -18.31483841]
[153.08699036 -4.54492188]
[147.24224854 9.26952648]
[147.58689880 16.65391159]
[141.30921936 23.29262352]
[135.36032104 37.06253815]
[129.41142273 50.83245468]
[123.46252441 64.60237122]
[133.22120667 73.54563141]
[139.75234985 85.05901337]
[142.42143250 98.02395630]
[140.96913147 111.18087769]
[135.53657532 123.25154114]
[126.65151978 133.06324768]
[115.17719269 139.66276550]
[102.22835541 142.40892029]
[89.06302643 141.03492737]
[82.70094299 154.61888123]
[85.83168793 175.81668091]
[68.42433929 186.90263367]
[62.68408966 200.76081848]
[76.13763428 207.40670776]
[89.12253571 214.92721558]
[101.58201599 223.28945923]
[113.46157837 232.45689392]
[124.70928955 242.38940430]
[135.27595520 253.04356384]
[145.11537170 264.37280273]
[154.18452454 276.32754517]
[162.44375610 288.85556030]
[169.85693359 301.90203857]
[176.39164734 315.40991211]
[182.01933289 329.32015991]
[186.71537781 343.57192993]
[190.45924377 358.10290527]
[193.23454285 372.84954834]
[195.02917480 387.74737549]
[195.83526611 402.73123169]
[195.64930725 417.73559570]
[194.47209167 432.69485474]
[192.30877686 447.54364014]
[189.16883850 462.21694946]
[185.06599426 476.65066528]
[180.01817322 490.78167725]
[174.04745483 504.54815674]
[167.17996216 517.88995361]
[159.44570923 530.74865723]
[150.87852478 543.06811523]
[141.51586914 554.79443359]
[131.39868164 565.87634277]
[120.57119751 576.26531982]
[109.08077240 585.91601562]
[96.97764587 594.78619385]
[84.31474304 602.83709717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 174]
[61 173]
[66 171]
[67 170]
[74 161]
[75 160]
[76 159]
[77 158]
[78 156]
[80 155]
[81 154]
[82 153]
[83 152]
[84 151]
[85 150]
[86 149]
[87 148]
[88 147]
[89 146]
[90 145]
[91 144]
] def

init

% Start Annotations
66 171 0.16 0.2 colorpair
82 153 0.0 0.6 colorpair
83 152 0.16 0.6 colorpair
84 151 0.16 0.6 colorpair
85 150 0.0 1 colorpair
86 149 0.0 1 colorpair
87 148 0.0 0.6 colorpair
88 147 0.16 1 colorpair
89 146 0.16 0.6 colorpair
90 145 0.32 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
60 174 13 gmark
60 cmark
174 cmark
61 173 6 gmark
66 171 2 gmark
171 cmark
67 170 14 gmark
74 161 10 gmark
74 cmark
75 160 3 gmark
76 159 10 gmark
76 cmark
159 cmark
77 158 6 gmark
158 cmark
78 156 10 gmark
80 155 6 gmark
80 cmark
155 cmark
81 154 9 gmark
82 153 1 gmark
83 152 1 gmark
83 cmark
84 151 1 gmark
84 cmark
151 cmark
87 148 1 gmark
147 cmark
89 146 1 gmark
89 cmark
146 cmark
90 145 2 gmark
90 cmark
145 cmark
91 144 3 gmark

% End Annotations
showpage
end
%%EOF
