%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Fri Feb  2 16:01:45 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______UGUGAAUAGUUUUUUGGAACAGGAGUUUC_____AUGU________ACUAAAAAACCAGGAAGGCCCGGUAGAAACCGGGCUGUCAAUAUGCUAAAACGCGGAAUACCCCGCG_____________CAC_CGCAAAAAAAAA_CAGCAUAUUGACAC_CUGGGA__AAGACCAGAGAAUCUUCUGC_UC_________________CC\
) } def
/len { sequence length } bind def

/coor [
[9.63368511 714.92785645]
[-4.85767508 718.81225586]
[-19.51978302 721.99200439]
[-34.31839371 724.45971680]
[-49.21894455 726.20947266]
[-64.18663025 727.23736572]
[-79.18650818 727.54089355]
[-94.18352509 727.11938477]
[-109.14266205 725.97381592]
[-124.02899170 724.10681152]
[-138.80772400 721.52282715]
[-153.44436646 718.22784424]
[-167.90472412 714.22955322]
[-182.15502930 709.53729248]
[-196.16198730 704.16204834]
[-209.89288330 698.11633301]
[-223.31565857 691.41430664]
[-236.39897156 684.07159424]
[-249.11224365 676.10534668]
[-261.42581177 667.53417969]
[-273.31088257 658.37811279]
[-284.73971558 648.65856934]
[-295.68560791 638.39819336]
[-306.12301636 627.62097168]
[-316.02752686 616.35205078]
[-325.37606812 604.61773682]
[-334.14675903 592.44549561]
[-342.31909180 579.86370850]
[-349.87405396 566.90185547]
[-356.79394531 553.59002686]
[-363.06259155 539.95947266]
[-368.66540527 526.04199219]
[-373.58926392 511.87005615]
[-377.82269287 497.47677612]
[-381.35577393 482.89578247]
[-384.18029785 468.16110229]
[-386.28961182 453.30718994]
[-387.67883301 438.36871338]
[-388.34469604 423.38055420]
[-388.28564453 408.37771606]
[-387.50183105 393.39526367]
[-385.99505615 378.46817017]
[-383.76889038 363.63131714]
[-380.82849121 348.91934204]
[-377.18075562 334.36660767]
[-372.83416748 320.00708008]
[-367.79891968 305.87435913]
[-362.08673096 292.00137329]
[-355.71096802 278.42059326]
[-348.68652344 265.16369629]
[-341.02978516 252.26165771]
[-332.75863647 239.74459839]
[-323.89242554 227.64178467]
[-314.45181274 215.98144531]
[-304.45889282 204.79083252]
[-293.93698120 194.09608459]
[-282.91067505 183.92216492]
[-271.40570068 174.29286194]
[-259.44891357 165.23063660]
[-247.06828308 156.75668335]
[-234.29269409 148.89076233]
[-221.15199280 141.65126038]
[-207.67687988 135.05508423]
[-193.89881897 129.11764526]
[-179.84997559 123.85280609]
[-165.56318665 119.27285767]
[-151.07180786 115.38851166]
[-136.40968323 112.20881653]
[-121.61106873 109.74122620]
[-106.71051025 107.99147797]
[-91.74281311 106.96367645]
[-76.74294281 106.66021729]
[-61.74592590 107.08180237]
[-46.78678894 108.22746277]
[-31.90047264 110.09450531]
[-17.12174416 112.67857361]
[-2.48511934 115.97364044]
[11.97521782 119.97200775]
[26.22549248 124.66432953]
[40.23242569 130.03965759]
[53.96329880 136.08543396]
[67.38604736 142.78752136]
[74.72731781 129.70678711]
[82.06858063 116.62604523]
[89.40985107 103.54530334]
[96.65535736 90.41127777]
[97.99371338 81.37855530]
[104.00672913 77.08533478]
[111.34799957 64.00459290]
[118.68926239 50.92385101]
[126.03053284 37.84311295]
[133.37179565 24.76236916]
[140.71307373 11.68162918]
[148.05433655 -1.39911222]
[155.39559937 -14.47985363]
[162.73687744 -27.56059456]
[170.07814026 -40.64133453]
[177.41940308 -53.72207642]
[184.76068115 -66.80281830]
[172.62498474 -75.64936066]
[161.62080383 -85.86916351]
[151.90261841 -97.31876373]
[143.60687256 -109.83742523]
[136.84999084 -123.24939728]
[131.72686768 -137.36640930]
[128.30938721 -151.99026489]
[126.64555359 -166.91567993]
[126.75871277 -181.93312073]
[128.64727783 -196.83177185]
[132.28474426 -211.40246582]
[137.62002563 -225.44065857]
[144.57824707 -238.74929810]
[153.06172180 -251.14151001]
[162.95133972 -262.44335938]
[174.10827637 -272.49618530]
[186.37590027 -281.15884399]
[199.58200073 -288.30972290]
[213.54118347 -293.84844971]
[228.05747986 -297.69726562]
[242.92710876 -299.80215454]
[257.94131470 -300.13354492]
[272.88934326 -298.68679810]
[287.56130981 -295.48220825]
[301.75128174 -290.56475830]
[315.26004028 -284.00350952]
[327.89791870 -275.89053345]
[339.48754883 -266.33978271]
[349.86618042 -255.48529053]
[358.88815308 -243.47943115]
[366.42678833 -230.49076843]
[372.37628174 -216.70164490]
[376.65307617 -202.30563354]
[379.19714355 -187.50482178]
[379.97280884 -172.50698853]
[378.96911621 -157.52270508]
[376.20019531 -142.76229858]
[371.70492554 -128.43299866]
[365.54638672 -114.73596191]
[357.81103516 -101.86347198]
[348.60751343 -89.99624634]
[338.06494141 -79.30087280]
[326.33139038 -69.92749786]
[313.57156372 -62.00771332]
[299.96456909 -55.65270233]
[285.70144653 -50.95167160]
[270.98242188 -47.97062302]
[256.01412964 -46.75140762]
[241.00669861 -47.31113434]
[226.17080688 -49.64194489]
[211.71473694 -53.71112823]
[197.84141541 -59.46155167]
[190.50015259 -46.38080978]
[183.15887451 -33.30006790]
[175.81761169 -20.21932602]
[168.47634888 -7.13858557]
[161.13507080 5.94215536]
[153.79380798 19.02289581]
[146.45254517 32.10363770]
[139.11126709 45.18437958]
[131.77000427 58.26512146]
[124.42874146 71.34586334]
[117.08747101 84.42660522]
[109.84196472 97.56063080]
[109.07444763 105.58191681]
[102.49059296 110.88656616]
[95.14932251 123.96730804]
[87.80805206 137.04804993]
[80.46678925 150.12879944]
[93.18009949 158.09497070]
[105.49369812 166.66606140]
[117.37881470 175.82205200]
[128.80769348 185.54156494]
[139.75364685 195.80191040]
[150.19110107 206.57908630]
[160.09567261 217.84796143]
[169.44425964 229.58219910]
[178.21499634 241.75439453]
[186.38740540 254.33613586]
[193.94241333 267.29800415]
[200.86236572 280.60974121]
[207.13110352 294.24026489]
[212.73397827 308.15774536]
[217.65791321 322.32965088]
[221.89140320 336.72290039]
[225.42456055 351.30389404]
[228.24913025 366.03854370]
[230.35852051 380.89245605]
[231.74780273 395.83093262]
[232.41374207 410.81909180]
[232.35476685 425.82192993]
[231.57101440 440.80438232]
[230.06433105 455.73147583]
[227.83822632 470.56835938]
[224.89790344 485.28033447]
[221.25022888 499.83309937]
[216.90371704 514.19262695]
[211.86851501 528.32537842]
[206.15640259 542.19836426]
[199.78070068 555.77923584]
[192.75631714 569.03613281]
[185.09963989 581.93823242]
[176.82856750 594.45532227]
[167.96240234 606.55816650]
[158.52186584 618.21856689]
[148.52899170 629.40924072]
[138.00712585 640.10400391]
[126.98085785 650.27795410]
[115.47592163 659.90734863]
[103.51918793 668.96960449]
[91.13859558 677.44366455]
[78.36304474 685.30963135]
[65.22238159 692.54919434]
[51.74729919 699.14538574]
[37.96926117 705.08294678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 168]
[83 167]
[84 166]
[85 165]
[86 163]
[88 162]
[89 161]
[90 160]
[91 159]
[92 158]
[93 157]
[94 156]
[95 155]
[96 154]
[97 153]
[98 152]
[99 151]
] def

init

% Start Annotations
83 167 0.0 0.6 colorpair
93 157 0.0 0.2 colorpair
94 156 0.0 0.2 colorpair
95 155 0.0 0.2 colorpair
96 154 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
82 168 11 gmark
82 cmark
83 167 1 gmark
84 166 10 gmark
84 cmark
166 cmark
85 165 7 gmark
165 cmark
86 163 10 gmark
88 162 10 gmark
88 cmark
162 cmark
89 161 8 gmark
89 cmark
161 cmark
90 160 3 gmark
91 159 3 gmark
91 cmark
92 158 3 gmark
92 cmark
158 cmark
93 157 2 gmark
94 156 2 gmark
95 155 2 gmark
154 cmark
97 153 3 gmark
97 cmark
153 cmark
98 152 4 gmark
98 cmark
152 cmark
99 151 4 gmark

% End Annotations
showpage
end
%%EOF
