%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Fri Feb  2 16:02:09 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_CGGAUGAACAACACGCCGCUAUUAGUG_CG__AAUG___AAAAAUAAAAGGAAAAACACCCAUAAAAAGGGUGCAAAAAAAAAAAAGAAAAAUCC___AAGCAAAA_______UUCCCAAA__UUCUGCAAUAGGGGGAGGCGUGGAUAA__A_GACCGC_CAGAUAAAGCUC____\
) } def
/len { sequence length } bind def

/coor [
[102.06253052 418.63259888]
[97.39258575 404.35189819]
[94.75564575 389.56027222]
[94.20304871 374.54559326]
[95.74554443 359.60012817]
[99.35311127 345.01480103]
[104.95552826 331.07351685]
[112.44373322 318.04766846]
[121.67197418 306.19079590]
[132.46061707 295.73367310]
[144.59967041 286.87988281]
[157.85282898 279.80175781]
[152.69505310 265.71640015]
[147.53726196 251.63102722]
[142.37948608 237.54566956]
[130.73768616 228.25494385]
[133.25798035 212.63577271]
[128.10018921 198.55041504]
[122.94241333 184.46505737]
[117.78463745 170.37969971]
[112.62685394 156.29434204]
[107.46907806 142.20898438]
[102.31129456 128.12362671]
[97.15351868 114.03826904]
[86.54947662 104.92531586]
[88.76112366 91.11951447]
[83.60334778 77.03415680]
[81.13130951 91.82905579]
[74.67800140 105.36991119]
[64.74313354 116.60816956]
[52.09603119 124.67357635]
[37.71604156 128.94158936]
[22.71669579 129.08168030]
[8.25949001 125.08303833]
[-4.53606176 117.25527191]
[-14.67911911 106.20455933]
[-21.38424110 92.78660583]
[-24.13220406 78.04046631]
[-22.71022034 63.10802078]
[-17.22839928 49.14558411]
[-8.11123466 37.23435593]
[3.93527222 28.29670143]
[17.97828484 23.02471924]
[32.93036270 21.82665253]
[47.63367081 24.79527473]
[60.94963837 31.70070839]
[71.84712982 42.00821686]
[79.48040009 54.91513062]
[79.21714783 39.91743851]
[78.95390320 24.91974831]
[78.69065094 9.92205906]
[78.42740631 -5.07563066]
[63.45139694 -6.06850576]
[48.61100006 -8.31106853]
[34.01029968 -11.78758907]
[19.75172234 -16.47368050]
[5.93527508 -22.33647346]
[-7.34212446 -29.33484459]
[-19.98734474 -37.41970444]
[-31.91168785 -46.53433990]
[-43.03150940 -56.61482239]
[-53.26881027 -67.59043884]
[-62.55178833 -79.38420868]
[-70.81532288 -91.91339111]
[-78.00144958 -105.09011841]
[-84.05976868 -118.82196045]
[-88.94777679 -133.01258850]
[-92.63118744 -147.56246948]
[-95.08417511 -162.36953735]
[-96.28952026 -177.32994080]
[-96.23877716 -192.33874512]
[-94.93229675 -207.29064941]
[-92.37924957 -222.08079529]
[-88.59753418 -236.60543823]
[-83.61368561 -250.76269531]
[-77.46265411 -264.45324707]
[-70.18759155 -277.58108521]
[-61.83952713 -290.05410767]
[-52.47701645 -301.78482056]
[-42.16573334 -312.69097900]
[-30.97800255 -322.69604492]
[-18.99230194 -331.72982788]
[-6.29270363 -339.72900391]
[7.03171444 -346.63745117]
[20.88748741 -352.40667725]
[35.17742920 -356.99624634]
[49.80130005 -360.37396240]
[64.65652466 -362.51611328]
[79.63890076 -363.40771484]
[94.64333344 -363.04248047]
[109.56459045 -361.42297363]
[124.29798889 -358.56054688]
[138.74018860 -354.47528076]
[152.78990173 -349.19586182]
[166.34855652 -342.75930786]
[179.32106018 -335.21075439]
[191.61640930 -326.60314941]
[203.14837646 -316.99688721]
[213.83604431 -306.45932007]
[223.60447693 -295.06439209]
[232.38513184 -282.89202881]
[240.11642456 -270.02758789]
[246.74412537 -256.56134033]
[252.22174072 -242.58770752]
[256.51086426 -228.20472717]
[259.58139038 -213.51329041]
[261.41180420 -198.61643982]
[261.98922729 -183.61866760]
[261.30966187 -168.62516785]
[259.37783813 -153.74113464]
[256.20730591 -139.07095337]
[251.82031250 -124.71752930]
[246.24763489 -110.78153229]
[239.52836609 -97.36073303]
[231.70962524 -84.54925537]
[222.84626770 -72.43698120]
[213.00045776 -61.10884857]
[202.24124146 -50.64433289]
[190.64411926 -41.11683273]
[178.29042053 -32.59317780]
[165.26681519 -25.13315582]
[151.66462708 -18.78909492]
[137.57928467 -13.60549355]
[123.10958862 -9.61871243]
[108.35703278 -6.85671663]
[93.42509460 -5.33887911]
[93.68833923 9.65881062]
[93.95159149 24.65649986]
[94.21483612 39.65419006]
[94.47808838 54.65188217]
[99.34474182 62.05128479]
[97.68870544 71.87637329]
[102.84648132 85.96173096]
[113.45052338 95.07468414]
[111.23887634 108.88048553]
[116.39665222 122.96584320]
[121.55443573 137.05120850]
[126.71221161 151.13656616]
[131.86999512 165.22192383]
[137.02777100 179.30728149]
[142.18554688 193.39263916]
[147.34333801 207.47799683]
[159.35406494 217.77619934]
[156.46484375 232.38789368]
[161.62263489 246.47325134]
[166.78041077 260.55862427]
[171.93818665 274.64398193]
[186.62823486 271.48983765]
[201.61430359 270.41094971]
[216.60467529 271.42831421]
[231.30755615 274.52209473]
[245.43675232 279.63208008]
[258.71722412 286.65881348]
[270.89050293 295.46551514]
[281.71957397 305.88073730]
[290.99368286 317.70178223]
[298.53231812 330.69851685]
[304.18869019 344.61798096]
[307.85275269 359.18920898]
[309.45312500 374.12860107]
[308.95870972 389.14529419]
[306.37908936 403.94705200]
[301.76452637 418.24572754]
[295.20480347 431.76296997]
[286.82760620 444.23568726]
[276.79598999 455.42108154]
[265.30526733 465.10144043]
[252.57910156 473.08834839]
[238.86517334 479.22628784]
[224.43045044 483.39581299]
[209.55590820 485.51577759]
[194.53108215 485.54486084]
[179.64843750 483.48257446]
[165.19767761 479.36898804]
[151.46006775 473.28424072]
[138.70304871 465.34671021]
[127.17489624 455.71093750]
[117.10004425 444.56448364]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 147]
[13 146]
[14 145]
[15 144]
[17 142]
[18 141]
[19 140]
[20 139]
[21 138]
[22 137]
[23 136]
[24 135]
[26 133]
[27 132]
[48 130]
[49 129]
[50 128]
[51 127]
[52 126]
] def

init

% Start Annotations
12 147 0.16 0.6 colorpair
13 146 0.0 1 colorpair
14 145 0.16 1 colorpair
15 144 0.16 1 colorpair
17 142 0.16 0.6 colorpair
18 141 0.0 0.6 colorpair
19 140 0.16 0.6 colorpair
20 139 0.0 0.6 colorpair
21 138 0.16 1 colorpair
22 137 0.32 1 colorpair
23 136 0.0 1 colorpair
24 135 0.0 0.6 colorpair
26 133 0.32 1 colorpair
27 132 0.0 0.6 colorpair
48 130 0.16 0.6 colorpair
49 129 0.32 1 colorpair
50 128 0.0 0.6 colorpair
51 127 0.16 0.6 colorpair
52 126 0.32 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
12 147 1 gmark
12 cmark
147 cmark
14 cmark
145 cmark
15 cmark
144 cmark
17 142 1 gmark
17 cmark
18 141 1 gmark
19 140 1 gmark
19 cmark
140 cmark
20 139 1 gmark
21 cmark
138 cmark
22 cmark
137 cmark
24 135 1 gmark
26 cmark
133 cmark
27 132 1 gmark
48 130 1 gmark
48 cmark
130 cmark
49 cmark
129 cmark
50 128 1 gmark
51 127 1 gmark
127 cmark
52 cmark
126 cmark

% End Annotations
showpage
end
%%EOF
