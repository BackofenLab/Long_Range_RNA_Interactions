%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Jan 25 16:29:45 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAACGACAACCAACUCGAUCUAAAGAAAAUG___AAAAAUAAAAGGAAAAACACCCAUAAAAAGGGUGCAAAAAAAAAAAAGACAAAUCCAA____GCAAAA_______UU__CCCAUCUACAAUGAAAGGCGGUGAGGUCAU_U_AACCCAGGCAGAAAAGACCAAGCU_\
) } def
/len { sequence length } bind def

/coor [
[121.90607452 246.93154907]
[129.89328003 234.18887329]
[139.97201538 223.02688599]
[151.83601379 213.78477478]
[144.80989075 200.53208923]
[137.78376770 187.27941895]
[124.98620605 179.65893555]
[125.35808563 163.84210205]
[118.33196259 150.58941650]
[111.30583191 137.33673096]
[104.27970886 124.08405304]
[97.25358582 110.83137512]
[90.10810089 97.64266205]
[82.84385681 84.51898956]
[75.57961273 71.39532471]
[70.19131470 85.39411926]
[56.55132675 91.63516235]
[42.43583679 86.56042480]
[35.89213181 73.06301880]
[40.65079498 58.83786392]
[53.99889755 51.99475479]
[68.32804871 56.43611908]
[62.52529907 42.60397720]
[56.72255325 28.77183533]
[50.91980743 14.93969345]
[45.11706161 1.10755181]
[39.31431580 -12.72458935]
[33.51156998 -26.55673218]
[27.70882607 -40.38887405]
[21.90608025 -54.22101593]
[15.97870159 -68.00020599]
[9.92717457 -81.72533417]
[3.87564707 -95.45045471]
[-10.26086807 -90.41445160]
[-24.72727776 -86.42378998]
[-39.44639587 -83.49975586]
[-54.33968735 -81.65795135]
[-69.32769012 -80.90821075]
[-84.33044434 -81.25453186]
[-99.26789093 -82.69506073]
[-114.06033325 -85.22212219]
[-128.62884521 -88.82221985]
[-142.89570618 -93.47615814]
[-156.78479004 -99.15909576]
[-170.22198486 -105.84072113]
[-183.13560486 -113.48537445]
[-195.45675659 -122.05227661]
[-207.11968994 -131.49571228]
[-218.06217957 -141.76530457]
[-228.22583008 -152.80624390]
[-237.55642700 -164.55964661]
[-246.00419617 -176.96276855]
[-253.52404785 -189.94946289]
[-260.07586670 -203.45043945]
[-265.62469482 -217.39363098]
[-270.14093018 -231.70468140]
[-273.60046387 -246.30722046]
[-275.98483276 -261.12332153]
[-277.28137207 -276.07397461]
[-277.48309326 -291.07934570]
[-276.58892822 -306.05944824]
[-274.60369873 -320.93429565]
[-271.53793335 -335.62454224]
[-267.40805054 -350.05181885]
[-262.23605347 -364.13916016]
[-256.04953003 -377.81137085]
[-248.88150024 -390.99551392]
[-240.77020264 -403.62124634]
[-231.75892639 -415.62121582]
[-221.89575195 -426.93139648]
[-211.23327637 -437.49142456]
[-199.82841492 -447.24496460]
[-187.74201965 -456.13998413]
[-175.03855896 -464.12902832]
[-161.78584290 -471.16943359]
[-148.05453491 -477.22369385]
[-133.91793823 -482.25946045]
[-119.45146942 -486.24987793]
[-104.73229980 -489.17367554]
[-89.83897400 -491.01522827]
[-74.85095978 -491.76473999]
[-59.84821701 -491.41815186]
[-44.91079712 -489.97738647]
[-30.11839294 -487.45007324]
[-15.54993629 -483.84973145]
[-1.28315294 -479.19558716]
[12.60583591 -473.51239014]
[26.04292488 -466.83056641]
[38.95642090 -459.18569946]
[51.27742767 -450.61859131]
[62.94020081 -441.17495728]
[73.88251495 -430.90518188]
[84.04599762 -419.86407471]
[93.37640381 -408.11053467]
[101.82396698 -395.70727539]
[109.34360504 -382.72045898]
[115.89519501 -369.21936035]
[121.44379425 -355.27609253]
[125.95979309 -340.96496582]
[129.41908264 -326.36236572]
[131.80322266 -311.54620361]
[133.09950256 -296.59555054]
[133.30097961 -281.59017944]
[132.40658569 -266.61010742]
[130.42109680 -251.73527527]
[127.35511017 -237.04507446]
[123.22498322 -222.61785889]
[118.05274200 -208.53062439]
[111.86599731 -194.85850525]
[104.69775391 -181.67448425]
[96.58625031 -169.04887390]
[87.57477570 -157.04905701]
[77.71140289 -145.73904419]
[67.04876709 -135.17918396]
[55.64374924 -125.42583466]
[43.55720139 -116.53101349]
[30.85361671 -108.54219055]
[17.60077095 -101.50198364]
[23.65229797 -87.77686310]
[29.70382500 -74.05173492]
[35.29885101 -69.18307495]
[35.73822021 -60.02376175]
[41.54096603 -46.19161987]
[47.34371185 -32.35947800]
[53.14645767 -18.52733612]
[58.94920349 -4.69519377]
[64.75195312 9.13694763]
[70.55469513 22.96908951]
[76.35744476 36.80123138]
[82.16018677 50.63337326]
[88.70327759 64.13107300]
[95.96752930 77.25474548]
[103.23177338 90.37841034]
[109.60227966 95.36596680]
[110.50626373 103.80524445]
[117.53238678 117.05792999]
[124.55851746 130.31060791]
[131.58464050 143.56329346]
[138.61076355 156.81596375]
[151.91088867 165.38436890]
[151.03645325 180.25328064]
[158.06257629 193.50596619]
[165.08869934 206.75865173]
[179.39622498 202.12550354]
[194.29093933 200.04740906]
[209.32022095 200.58750916]
[224.02735901 203.72940063]
[237.96539307 209.37759399]
[250.71078491 217.36045837]
[261.87619019 227.43540955]
[271.12234497 239.29626465]
[278.16824341 252.58259583]
[282.79977417 266.89062500]
[284.87619019 281.78558350]
[284.33438110 296.81481934]
[281.19082642 311.52157593]
[275.54104614 325.45898438]
[267.55673218 338.20346069]
[257.48049927 349.36773682]
[245.61860657 358.61254883]
[232.33148193 365.65692139]
[218.02291870 370.28683472]
[203.12771606 372.36154175]
[188.09855652 371.81805420]
[173.39215088 368.67282104]
[159.45538330 363.02145386]
[146.71180725 355.03570557]
[135.54867554 344.95822144]
[126.30521393 333.09527588]
[119.26233673 319.80734253]
[114.63405609 305.49826050]
[112.56101990 290.60281372]
[113.10623932 275.57373047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 143]
[5 142]
[6 141]
[8 139]
[9 138]
[10 137]
[11 136]
[12 135]
[13 133]
[14 132]
[15 131]
[22 130]
[23 129]
[24 128]
[25 127]
[26 126]
[27 125]
[28 124]
[29 123]
[30 122]
[31 120]
[32 119]
[33 118]
] def

init

% Start Annotations
4 143 0.16 0.6 colorpair
5 142 0.16 0.6 colorpair
6 141 0.16 0.6 colorpair
8 139 0.16 0.6 colorpair
9 138 0.0 0.6 colorpair
10 137 0.0 0.6 colorpair
11 136 0.16 0.6 colorpair
12 135 0.0 0.6 colorpair
13 133 0.16 1 colorpair
14 132 0.16 0.6 colorpair
15 131 0.16 0.6 colorpair
22 130 0.32 1 colorpair
23 129 0.16 0.6 colorpair
24 128 0.16 0.6 colorpair
25 127 0.16 0.6 colorpair
26 126 0.16 0.6 colorpair
27 125 0.32 1 colorpair
28 124 0.32 1 colorpair
29 123 0.16 0.6 colorpair
30 122 0.0 0.6 colorpair
31 120 0.0 0.6 colorpair
32 119 0.0 1 colorpair
33 118 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
4 143 1 gmark
4 cmark
143 cmark
5 142 1 gmark
5 cmark
6 141 1 gmark
6 cmark
8 139 1 gmark
8 cmark
139 cmark
9 138 1 gmark
10 137 1 gmark
11 136 1 gmark
11 cmark
136 cmark
12 135 1 gmark
13 cmark
133 cmark
14 132 1 gmark
14 cmark
132 cmark
15 131 1 gmark
15 cmark
131 cmark
22 cmark
130 cmark
23 129 1 gmark
129 cmark
24 128 1 gmark
24 cmark
128 cmark
25 127 1 gmark
25 cmark
26 126 1 gmark
26 cmark
126 cmark
27 cmark
125 cmark
28 cmark
124 cmark
29 123 1 gmark
29 cmark
123 cmark
30 122 1 gmark
31 120 1 gmark
33 118 1 gmark

% End Annotations
showpage
end
%%EOF
