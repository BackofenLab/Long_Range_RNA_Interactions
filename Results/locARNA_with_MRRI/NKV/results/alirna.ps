%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.5.1
%%CreationDate: Tue Jan 23 16:20:07 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_CGGAAG_A_AACACGCCGCUAUUAGUG_CG__AAUGAAAAAAAGUAA_ACGAAAAACACGAAUAAAAAGAGUCCAAAAAAAAAAAAGAAAA_UCA__AAGCAAAA_______UUCCCAAAAAUUCAGUAACAGGCGGAGAGGAGAUAAACACCGGCCGCAAAAAACUAACAC\
) } def
/len { sequence length } bind def

/coor [
[120.47731018 217.88333130]
[116.98880005 203.29463196]
[113.50028229 188.70593262]
[100.71272278 181.15518188]
[96.96705627 166.40985107]
[104.97367859 153.04827881]
[101.48516846 138.45956421]
[81.89977264 133.96653748]
[67.24801636 120.21514130]
[61.52358246 100.95363617]
[66.28678894 81.43218994]
[80.23931885 66.97183228]
[75.19393921 52.84582520]
[70.14855957 38.71981430]
[65.10317993 24.59380531]
[60.05780411 10.46779537]
[55.01242447 -3.65821433]
[49.96704865 -17.78422356]
[44.92166901 -31.91023445]
[39.87628937 -46.03624344]
[34.83091354 -60.16225433]
[22.34618950 -60.25897598]
[10.52072906 -64.18644714]
[0.49822941 -71.54891968]
[-6.75688505 -81.61923218]
[-10.55225658 -93.41056824]
[-10.53364754 -105.77315521]
[-6.71794605 -117.50640869]
[0.50993437 -127.47549438]
[10.43583298 -134.72109985]
[6.16262054 -149.09954834]
[1.88940859 -163.47798157]
[-2.38380361 -177.85643005]
[-6.65701580 -192.23487854]
[-21.30184555 -188.96231079]
[-36.13755798 -186.70793152]
[-51.09345627 -185.48245239]
[-66.09826660 -185.29171753]
[-81.08048248 -186.13664246]
[-95.96870422 -188.01319885]
[-110.69198608 -190.91244507]
[-125.18016052 -194.82055664]
[-139.36419678 -199.71891785]
[-153.17648315 -205.58419800]
[-166.55120850 -212.38842773]
[-179.42462158 -220.09918213]
[-191.73539734 -228.67971802]
[-203.42485046 -238.08914185]
[-214.43727112 -248.28262329]
[-224.72019958 -259.21157837]
[-234.22462463 -270.82394409]
[-242.90524292 -283.06433105]
[-250.72068787 -295.87445068]
[-257.63372803 -309.19326782]
[-263.61141968 -322.95727539]
[-268.62527466 -337.10089111]
[-272.65136719 -351.55673218]
[-275.67056274 -366.25588989]
[-277.66842651 -381.12832642]
[-278.63549805 -396.10314941]
[-278.56707764 -411.10900879]
[-277.46359253 -426.07440186]
[-275.33023071 -440.92800903]
[-272.17718506 -455.59902954]
[-268.01947021 -470.01754761]
[-262.87689209 -484.11489868]
[-256.77398682 -497.82382202]
[-249.73983765 -511.07907104]
[-241.80793762 -523.81744385]
[-233.01609802 -535.97821045]
[-223.40623474 -547.50341797]
[-213.02410889 -558.33819580]
[-201.91921997 -568.43084717]
[-190.14448547 -577.73333740]
[-177.75601196 -586.20129395]
[-164.81283569 -593.79443359]
[-151.37664795 -600.47644043]
[-137.51147461 -606.21557617]
[-123.28337860 -610.98443604]
[-108.76017761 -614.76031494]
[-94.01108551 -617.52520752]
[-79.10636902 -619.26599121]
[-64.11707306 -619.97430420]
[-49.11463165 -619.64685059]
[-34.17052460 -618.28503418]
[-19.35597801 -615.89550781]
[-4.74158621 -612.48962402]
[9.60300350 -608.08355713]
[23.60943222 -602.69830322]
[37.21095276 -596.35961914]
[50.34274673 -589.09759521]
[62.94223785 -580.94696045]
[74.94937897 -571.94641113]
[86.30695343 -562.13897705]
[96.96083069 -551.57128906]
[106.86024475 -540.29382324]
[115.95802307 -528.36016846]
[124.21080780 -515.82733154]
[131.57926941 -502.75497437]
[138.02827454 -489.20541382]
[143.52713013 -475.24319458]
[148.04960632 -460.93487549]
[151.57414246 -446.34866333]
[154.08396912 -431.55401611]
[155.56710815 -416.62145996]
[156.01649475 -401.62216187]
[155.42999268 -386.62762451]
[153.81037903 -371.70925903]
[151.16539001 -356.93817139]
[147.50762939 -342.38476562]
[142.85452271 -328.11840820]
[137.22825623 -314.20706177]
[130.65562439 -300.71701050]
[123.16794586 -287.71258545]
[114.80091858 -275.25570679]
[105.59441376 -263.40576172]
[95.59230042 -252.21925354]
[84.84224701 -241.74943542]
[73.39547729 -232.04623413]
[61.30654526 -223.15588379]
[48.63306046 -215.12074280]
[35.43541718 -207.97911072]
[21.77651024 -201.76501465]
[7.72142839 -196.50808716]
[11.99464035 -182.12963867]
[16.26785278 -167.75119019]
[20.54106522 -153.37275696]
[24.81427765 -138.99430847]
[42.33871460 -136.84921265]
[57.21728897 -127.24707031]
[66.44562531 -112.07199860]
[68.13644409 -94.33889008]
[61.90532684 -77.59439850]
[48.95692444 -65.20763397]
[54.00230026 -51.08162308]
[59.04767990 -36.95561218]
[64.09305573 -22.82960320]
[69.13843536 -8.70359325]
[74.18381500 5.42241716]
[79.22919464 19.54842758]
[84.27457428 33.67443848]
[89.31994629 47.80044556]
[94.36532593 61.92645645]
[104.33462524 61.75662994]
[114.01302338 64.15338898]
[122.75097656 68.95587921]
[129.96206665 75.84179688]
[135.16235352 84.34901428]
[138.00282288 93.90660095]
[138.29286194 103.87313080]
[136.01298523 113.57971954]
[131.31622314 122.37495422]
[124.51776123 129.66856384]
[116.07386780 134.97105408]
[119.56238556 149.55976868]
[132.74740601 157.85389709]
[136.07743835 172.69862366]
[128.08898926 185.21740723]
[131.57749939 199.80612183]
[135.06600952 214.39482117]
[150.08311462 216.75175476]
[163.05253601 224.68034363]
[171.99653625 236.97154236]
[175.55122375 251.75100708]
[173.17453003 266.76498413]
[165.22889709 279.72396851]
[152.92594910 288.65179443]
[138.14181519 292.18704224]
[123.13097382 289.79058838]
[110.18245697 281.82791138]
[101.27082062 269.51324463]
[97.75502777 254.72447205]
[100.17121124 239.71679688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 160]
[2 159]
[3 158]
[6 155]
[7 154]
[12 143]
[13 142]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[20 135]
[21 134]
[30 128]
[31 127]
[32 126]
[33 125]
[34 124]
] def

init

% Start Annotations
1 160 0.16 0.6 colorpair
2 159 0.16 0.6 colorpair
3 158 0.16 1 colorpair
6 155 0.16 0.6 colorpair
7 154 0.16 1 colorpair
12 143 0.16 0.6 colorpair
13 142 0.0 0.6 colorpair
14 141 0.16 0.6 colorpair
15 140 0.16 1 colorpair
16 139 0.32 1 colorpair
17 138 0.16 1 colorpair
18 137 0.0 0.6 colorpair
19 136 0.16 0.6 colorpair
20 135 0.0 0.6 colorpair
21 134 0.16 1 colorpair
30 128 0.0 0.6 colorpair
31 127 0.16 0.6 colorpair
32 126 0.16 0.6 colorpair
33 125 0.16 0.6 colorpair
34 124 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 160 1 gmark
1 cmark
160 cmark
2 159 1 gmark
2 cmark
158 cmark
6 155 1 gmark
6 cmark
155 cmark
154 cmark
12 143 1 gmark
12 cmark
13 142 1 gmark
14 141 1 gmark
14 cmark
141 cmark
15 cmark
140 cmark
16 cmark
139 cmark
17 cmark
18 137 1 gmark
19 136 1 gmark
136 cmark
20 135 1 gmark
21 cmark
134 cmark
30 128 1 gmark
31 127 1 gmark
127 cmark
32 126 1 gmark
32 cmark
126 cmark
33 125 1 gmark
33 cmark
125 cmark
34 124 1 gmark

% End Annotations
showpage
end
%%EOF
