%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Feb 15 17:40:28 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_AAAAUGAUUUCCGG_AGAACAACACGCCACAAUCAGAGGCG___AUGAA_AAUCGCAGAAAAAACAACCGGAAAAAG______GGAAACAACUCAAAAAAGCAA___AAUCCAAAAAAAAAAG_______UU_______GGCCAGAACUUCUCAAACUGUUG___CCACGGGUAAACCAGACGACUUCCGGUUC_AGAGGG_GGCGGAGUCCAUAGC_ACGCUCGCCCAGAACAAACUCAAAUUGGCUUAUGGA\
AAUCUGAGUAGUCAC_____CGAACACCGCU\
) } def
/len { sequence length } bind def

/coor [
[97.72306061 581.55456543]
[89.77515411 568.82824707]
[82.58067322 555.66131592]
[76.16394806 542.09838867]
[70.54669952 528.18524170]
[65.74792480 513.96905518]
[61.78387833 499.49792480]
[58.66796112 484.82077026]
[56.41071701 469.98724365]
[55.01978683 455.04760742]
[54.49987411 440.05233765]
[54.85274124 425.05221558]
[56.07719421 410.09799194]
[58.16909027 395.24026489]
[61.12134552 380.52932739]
[64.92397308 366.01489258]
[69.56410980 351.74615479]
[75.02605438 337.77136230]
[81.29132080 324.13775635]
[88.33871460 310.89154053]
[96.14437866 298.07751465]
[104.68191528 285.73901367]
[113.92243195 273.91781616]
[123.83465576 262.65386963]
[134.38504028 251.98536682]
[145.53790283 241.94834900]
[157.25550842 232.57679749]
[169.49818420 223.90242004]
[161.55249023 211.17976379]
[153.60679626 198.45710754]
[145.66110229 185.73445129]
[137.71540833 173.01181030]
[129.70021057 160.33282471]
[121.61572266 147.69790649]
[113.53124237 135.06298828]
[96.82130432 137.44868469]
[80.75253296 132.28068542]
[68.56612396 120.60144043]
[62.72016144 104.76672363]
[64.39382935 87.97052002]
[73.24952698 73.60075378]
[63.41820908 77.61209106]
[53.06122208 79.93402863]
[42.46653748 80.50341034]
[31.92850113 79.30578613]
[21.73965645 76.37576294]
[12.18262959 71.79604340]
[3.52228069 65.69505310]
[-4.00162745 58.24336243]
[-10.18107414 49.64891434]
[-14.84552670 40.15122604]
[-17.86665154 30.01469231]
[-19.16184044 19.52125549]
[-18.69647026 8.96253872]
[-16.48482704 -1.36824226]
[-12.58967304 -11.18443012]
[-7.12046432 -20.21387863]
[-0.23027588 -28.20649338]
[7.88848257 -34.94116974]
[-6.99438334 -32.30341339]
[-21.94362450 -34.39211655]
[-35.49695587 -40.99026489]
[-46.33256912 -51.44036102]
[-53.39802933 -64.70994568]
[-56.01250458 -79.49356842]
[-53.93234253 -94.34122467]
[-47.37372208 -107.80059814]
[-36.99026108 -118.55906677]
[-44.08382797 -131.77577209]
[-51.17739487 -144.99247742]
[-58.27096176 -158.20918274]
[-65.36453247 -171.42588806]
[-79.00908661 -165.18260193]
[-93.02214050 -159.81727600]
[-107.34728241 -155.35151672]
[-121.92681122 -151.80331421]
[-136.70202637 -149.18695068]
[-151.61344910 -147.51295471]
[-166.60101318 -146.78807068]
[-181.60437012 -147.01522827]
[-196.56312561 -148.19349670]
[-211.41702271 -150.31814575]
[-226.10626221 -153.38059998]
[-240.57170105 -157.36854553]
[-254.75508118 -162.26593018]
[-268.59930420 -168.05300903]
[-282.04858398 -174.70651245]
[-295.04882812 -182.19961548]
[-307.54763794 -190.50215149]
[-319.49468994 -199.58071899]
[-330.84188843 -209.39872742]
[-341.54354858 -219.91665649]
[-351.55657959 -231.09216309]
[-360.84066772 -242.88023376]
[-369.35839844 -255.23339844]
[-377.07550049 -268.10192871]
[-383.96087646 -281.43399048]
[-389.98681641 -295.17590332]
[-395.12905884 -309.27236938]
[-399.36688232 -323.66656494]
[-402.68325806 -338.30059814]
[-405.06478882 -353.11547852]
[-406.50189209 -368.05157471]
[-406.98883057 -383.04876709]
[-406.52355957 -398.04663086]
[-405.10803223 -412.98480225]
[-402.74789429 -427.80310059]
[-399.45269775 -442.44189453]
[-395.23565674 -456.84219360]
[-390.11380005 -470.94607544]
[-384.10769653 -484.69668579]
[-377.24157715 -498.03869629]
[-369.54309082 -510.91836548]
[-361.04321289 -523.28381348]
[-351.77618408 -535.08526611]
[-341.77932739 -546.27520752]
[-331.09286499 -556.80859375]
[-319.75985718 -566.64300537]
[-307.82592773 -575.73883057]
[-295.33911133 -584.05944824]
[-282.34973145 -591.57128906]
[-268.91006470 -598.24420166]
[-255.07421875 -604.05133057]
[-240.89793396 -608.96917725]
[-226.43827820 -612.97802734]
[-211.75347900 -616.06170654]
[-196.90266418 -618.20776367]
[-181.94563293 -619.40765381]
[-166.94261169 -619.65649414]
[-151.95401001 -618.95324707]
[-137.04019165 -617.30084229]
[-122.26120758 -614.70581055]
[-107.67656708 -611.17864990]
[-93.34499359 -606.73364258]
[-79.32419586 -601.38854980]
[-65.67063141 -595.16497803]
[-52.43928909 -588.08795166]
[-39.68343353 -580.18603516]
[-27.45443344 -571.49096680]
[-15.80153275 -562.03778076]
[-4.77165174 -551.86456299]
[5.59079552 -541.01226807]
[15.24408150 -529.52459717]
[24.14933777 -517.44781494]
[32.27070236 -504.83053589]
[39.57547760 -491.72357178]
[46.03424835 -478.17968750]
[51.62100220 -464.25341797]
[56.31325150 -450.00085449]
[60.09209442 -435.47940063]
[62.94231796 -420.74749756]
[64.85244751 -405.86450195]
[65.81478882 -390.89031982]
[65.82546997 -375.88522339]
[64.88443756 -360.90966797]
[62.99549484 -346.02395630]
[60.16624069 -331.28802490]
[56.40806961 -316.76119995]
[51.73611069 -302.50198364]
[46.16918182 -288.56777954]
[39.72969818 -275.01473999]
[32.44358444 -261.89736938]
[24.34018326 -249.26853943]
[15.45212555 -237.17907715]
[5.81519890 -225.67768860]
[-4.53179169 -214.81065369]
[-15.54718208 -204.62174988]
[-27.18661690 -195.15200806]
[-39.40322876 -186.43954468]
[-52.14782333 -178.51945496]
[-45.05425644 -165.30274963]
[-37.96068954 -152.08604431]
[-30.86712265 -138.86933899]
[-23.77355766 -125.65263367]
[-9.06864548 -128.35940552]
[5.77302361 -126.38582611]
[19.29630089 -119.91271973]
[30.17137527 -109.56266022]
[37.32454300 -96.34014893]
[40.04420471 -81.53412628]
[38.05163193 -66.59230042]
[31.52950096 -52.97964859]
[21.10518837 -42.03473663]
[40.28954697 -46.33184433]
[59.88232040 -44.53485489]
[77.99307251 -36.80773926]
[92.87145996 -23.88709450]
[103.07643127 -7.01194525]
[107.61576843 12.19507313]
[106.04254913 31.88373947]
[98.49916077 50.15447617]
[85.70444489 65.24162292]
[98.30982971 62.45467758]
[111.11463928 64.09773254]
[122.60802460 69.97692871]
[131.43388367 79.39855957]
[136.55082703 91.25097656]
[137.35510254 104.13569641]
[133.75183105 116.53244019]
[126.16616058 126.97850800]
[134.25064087 139.61343384]
[142.33512878 152.24835205]
[149.56404114 157.75994873]
[150.43806458 165.06611633]
[158.38375854 177.78875732]
[166.32945251 190.51141357]
[174.27514648 203.23406982]
[182.22084045 215.95672607]
[195.38766479 208.76208496]
[208.95053101 202.34518433]
[222.86357117 196.72776794]
[237.07969666 191.92881775]
[251.55081177 187.96458435]
[266.22793579 184.84849548]
[281.06140137 182.59106445]
[296.00103760 181.19995117]
[310.99630737 180.67985535]
[325.99642944 181.03253174]
[340.95065308 182.25679016]
[355.80841064 184.34851074]
[370.51940918 187.30058289]
[385.03387451 191.10302734]
[399.30267334 195.74299622]
[413.27755737 201.20475769]
[426.91119385 207.46984863]
[440.15750122 214.51708984]
[452.97164917 222.32258606]
[465.31024170 230.85997009]
[477.13156128 240.10034180]
[488.39562988 250.01242065]
[499.06427002 260.56268311]
[509.10140991 271.71542358]
[518.47314453 283.43289185]
[527.14764404 295.67547607]
[535.09564209 308.40173340]
[542.29022217 321.56857300]
[548.70709229 335.13146973]
[554.32446289 349.04452515]
[559.12335205 363.26068115]
[563.08752441 377.73181152]
[566.20355225 392.40893555]
[568.46093750 407.24243164]
[569.85198975 422.18206787]
[570.37200928 437.17733765]
[570.01922607 452.17745972]
[568.79492188 467.13168335]
[566.70318604 481.98941040]
[563.75103760 496.70040894]
[559.94848633 511.21484375]
[555.30847168 525.48364258]
[549.84667969 539.45849609]
[543.58154297 553.09210205]
[536.53424072 566.33837891]
[528.72869873 579.15252686]
[520.19122314 591.49108887]
[510.95083618 603.31237793]
[501.03869629 614.57635498]
[490.48837280 625.24493408]
[479.33560181 635.28204346]
[467.61807251 644.65368652]
[455.37548828 653.32818604]
[442.64920044 661.27612305]
[429.48233032 668.47070312]
[415.91940308 674.88745117]
[402.00631714 680.50476074]
[387.79013062 685.30358887]
[373.31900024 689.26770020]
[358.64184570 692.38366699]
[343.80834961 694.64099121]
[328.86871338 696.03198242]
[313.87344360 696.55194092]
[298.87332153 696.19915771]
[283.91909790 694.97479248]
[269.06137085 692.88293457]
[254.35040283 689.93072510]
[239.83596802 686.12817383]
[225.56719971 681.48809814]
[211.59237671 676.02618408]
[197.95877075 669.76098633]
[184.71252441 662.71368408]
[171.89845276 654.90802002]
[159.55992126 646.37054443]
[147.73866272 637.13006592]
[136.47470093 627.21789551]
[125.80614471 616.66754150]
[115.76908112 605.51477051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 208]
[29 207]
[30 206]
[31 205]
[32 204]
[33 202]
[34 201]
[35 200]
[41 192]
[59 183]
[68 174]
[69 173]
[70 172]
[71 171]
[72 170]
] def

init

% Start Annotations
28 208 0.16 1 colorpair
29 207 0.0 1 colorpair
30 206 0.16 0.6 colorpair
31 205 0.16 0.6 colorpair
32 204 0.16 0.6 colorpair
33 202 0.32 0.6 colorpair
34 201 0.16 1 colorpair
35 200 0.16 1 colorpair
41 192 0.0 0.6 colorpair
59 183 0.32 1 colorpair
68 174 0.16 0.6 colorpair
69 173 0.0 0.6 colorpair
70 172 0.32 1 colorpair
71 171 0.32 0.6 colorpair
72 170 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
28 cmark
30 206 1 gmark
30 cmark
206 cmark
31 205 1 gmark
31 cmark
205 cmark
32 204 1 gmark
32 cmark
204 cmark
33 202 1 gmark
33 cmark
202 cmark
201 cmark
35 cmark
41 192 1 gmark
59 cmark
183 cmark
68 174 1 gmark
68 cmark
174 cmark
69 173 1 gmark
70 cmark
172 cmark
71 171 1 gmark
71 cmark
171 cmark
72 170 1 gmark

% End Annotations
showpage
end
%%EOF
