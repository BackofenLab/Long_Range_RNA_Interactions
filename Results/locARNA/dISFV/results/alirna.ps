%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.5.1
%%CreationDate: Fri Jan  5 17:28:44 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUUAGAGUAAACUAGAAAGAGAA_UAU__CAAUG_________GUGACUAAACCAAGAAAGCCCGUU__AAAACGGGCUGUCAAUAUGAUAAAACGUGCAUUACC___CG_CU_______CUCAAUAAUAAUAGAACAGCAUAUUGACACCUAGGG_AAAGACCGGAGAUACUCACGGUUUUA\
) } def
/len { sequence length } bind def

/coor [
[84.77104187 333.14065552]
[85.70247650 348.23989868]
[81.92042542 362.88748169]
[73.79542542 375.64834595]
[62.12348175 385.27230835]
[48.04808426 390.81652832]
[32.94820404 391.73785400]
[18.30317307 387.94598389]
[5.54775953 379.81243896]
[-4.06839037 368.13406372]
[-9.60318375 354.05493164]
[-10.51437855 338.95443726]
[-6.71270466 324.31195068]
[1.42938852 311.56201172]
[13.11422157 301.95367432]
[27.19703484 296.42831421]
[42.29813385 295.52725220]
[46.05792236 281.00607300]
[49.81771088 266.48492432]
[53.57749939 251.96377563]
[57.33728790 237.44261169]
[61.09707642 222.92146301]
[64.85686493 208.40029907]
[54.02133179 196.08201599]
[52.64155197 179.56773376]
[61.45761871 165.33979797]
[77.16831970 159.10144043]
[80.68231964 144.51885986]
[84.19631195 129.93627930]
[82.50064850 125.45028687]
[83.62052917 119.85060120]
[88.08310699 114.92460632]
[81.03609467 102.26419830]
[84.90431976 88.30056763]
[97.46131134 81.07088470]
[101.46582031 66.61530304]
[89.23293304 75.29611969]
[74.25479889 76.10572815]
[61.15747452 68.79408264]
[53.98613358 55.61941528]
[54.95567322 40.65077972]
[63.76664352 28.51130867]
[77.69774628 22.95033073]
[92.44628906 25.68537712]
[103.45712280 35.87171936]
[107.32951355 50.36272812]
[113.47681427 36.68023300]
[103.40216064 26.59689713]
[97.39035034 13.70583534]
[96.14606476 -0.43360439]
[99.79865265 -14.11874390]
[107.88899994 -25.70861053]
[119.42713928 -33.82069778]
[133.01336670 -37.49587631]
[147.00801086 -36.31174469]
[153.38552856 -49.88846207]
[159.76304626 -63.46518326]
[166.14056396 -77.04190063]
[172.51808167 -90.61861420]
[160.37872314 -81.80748749]
[146.34317017 -76.51570129]
[131.40832520 -75.11913300]
[116.63499451 -77.71697998]
[103.07250977 -84.12471008]
[91.68419647 -93.88720703]
[83.27894592 -106.31104279]
[78.45377350 -120.51377869]
[77.55139923 -135.48661804]
[80.63591766 -150.16604614]
[87.48825073 -163.50941467]
[97.62167358 -174.56896973]
[110.31642914 -182.55915833]
[124.67082977 -186.91246033]
[139.66529846 -187.31965637]
[154.23481750 -183.75181580]
[167.34449768 -176.46238708]
[178.06321716 -165.96910095]
[185.62962341 -153.01728821]
[189.50630188 -138.52688599]
[189.41786194 -123.52715302]
[185.37161255 -109.08579254]
[195.88827515 -119.78159332]
[206.40492249 -130.47738647]
[216.92156982 -141.17318726]
[227.43821716 -151.86898804]
[237.95486450 -162.56477356]
[248.47152710 -173.26057434]
[258.98815918 -183.95637512]
[269.50482178 -194.65216064]
[280.02148438 -205.34796143]
[290.53811646 -216.04376221]
[301.05477905 -226.73956299]
[311.57141113 -237.43534851]
[302.35766602 -249.30087280]
[294.80770874 -262.28860474]
[289.05627441 -276.16680908]
[285.20599365 -290.68780518]
[283.32559204 -305.59240723]
[283.44863892 -320.61465454]
[285.57290649 -335.48648071]
[289.66052246 -349.94244385]
[295.63848877 -363.72457886]
[303.40017700 -376.58691406]
[312.80700684 -388.29992676]
[323.69116211 -398.65457153]
[335.85839844 -407.46606445]
[349.09155273 -414.57711792]
[363.15444946 -419.86087036]
[377.79614258 -423.22302246]
[392.75534058 -424.60357666]
[407.76507568 -423.97784424]
[422.55746460 -421.35705566]
[436.86853027 -416.78796387]
[450.44287109 -410.35208130]
[463.03826904 -402.16430664]
[474.42990112 -392.37072754]
[484.41445923 -381.14611816]
[492.81381226 -368.69082642]
[499.47802734 -355.22711182]
[504.28820801 -340.99526978]
[507.15844727 -326.24923706]
[508.03759766 -311.25222778]
[506.90988159 -296.27185059]
[503.79553223 -281.57543945]
[498.75003052 -267.42529297]
[491.86346436 -254.07394409]
[483.25875854 -241.75964355]
[473.08941650 -230.70214844]
[461.53695679 -221.09881592]
[448.80752563 -213.12100220]
[435.12832642 -206.91110229]
[420.74346924 -202.57994080]
[405.90963745 -200.20478821]
[390.89160156 -199.82804871]
[375.95736694 -201.45645142]
[361.37341309 -205.06092834]
[347.40005493 -210.57714844]
[334.28665161 -217.90667725]
[322.26721191 -226.91870117]
[311.75057983 -216.22290039]
[301.23391724 -205.52711487]
[290.71725464 -194.83131409]
[280.20062256 -184.13551331]
[269.68395996 -173.43972778]
[259.16732788 -162.74392700]
[248.65066528 -152.04812622]
[238.13401794 -141.35232544]
[227.61737061 -130.65653992]
[217.10072327 -119.96073914]
[206.58406067 -109.26493835]
[196.06741333 -98.56914520]
[194.20976257 -89.94753265]
[186.09480286 -84.24109650]
[179.71728516 -70.66438293]
[173.33976746 -57.08766174]
[166.96224976 -43.51094437]
[160.58473206 -29.93422890]
[171.43162537 -18.39504814]
[177.03768921 -3.54239678]
[176.51808167 12.36305428]
[169.92271423 26.88826370]
[158.23318481 37.79999161]
[143.21679688 43.40814972]
[127.15930939 42.82753754]
[121.01200104 56.51003265]
[115.92140198 70.61981201]
[111.91689301 85.07539368]
[118.96390533 97.73580170]
[115.09568024 111.69943237]
[102.53868866 118.92911530]
[98.77890015 133.45027161]
[95.26490784 148.03285217]
[91.75090790 162.61544800]
[101.45664215 172.42005920]
[105.01660156 185.63677979]
[101.60286713 198.78013611]
[92.21216583 208.43861389]
[79.37802124 212.16009521]
[75.61823273 226.68124390]
[71.85844421 241.20240784]
[68.09865570 255.72355652]
[64.33886719 270.24472046]
[60.57907867 284.76586914]
[56.81929016 299.28701782]
[69.58559418 307.40347290]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 184]
[18 183]
[19 182]
[20 181]
[21 180]
[22 179]
[23 178]
[27 173]
[28 172]
[29 171]
[32 170]
[35 167]
[36 166]
[46 165]
[47 164]
[55 157]
[56 156]
[57 155]
[58 154]
[59 153]
[81 151]
[82 150]
[83 149]
[84 148]
[85 147]
[86 146]
[87 145]
[88 144]
[89 143]
[90 142]
[91 141]
[92 140]
[93 139]
] def

init

% Start Annotations
17 184 0.16 0.6 colorpair
18 183 0.0 0.6 colorpair
19 182 0.32 1 colorpair
20 181 0.32 1 colorpair
21 180 0.48 0.6 colorpair
22 179 0.48 0.6 colorpair
23 178 0.16 0.2 colorpair
27 173 0.0 0.6 colorpair
28 172 0.16 0.6 colorpair
29 171 0.16 0.6 colorpair
32 170 0.0 1 colorpair
35 167 0.16 1 colorpair
36 166 0.16 1 colorpair
46 165 0.0 0.6 colorpair
47 164 0.0 0.2 colorpair
55 157 0.16 0.2 colorpair
56 156 0.16 1 colorpair
57 155 0.32 0.6 colorpair
58 154 0.16 0.6 colorpair
59 153 0.16 1 colorpair
81 151 0.0 0.6 colorpair
82 150 0.0 0.6 colorpair
83 149 0.0 1 colorpair
84 148 0.16 1 colorpair
85 147 0.16 1 colorpair
86 146 0.0 1 colorpair
87 145 0.0 1 colorpair
88 144 0.0 1 colorpair
89 143 0.0 1 colorpair
90 142 0.16 1 colorpair
91 141 0.32 1 colorpair
92 140 0.0 0.2 colorpair
93 139 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
17 184 1 gmark
184 cmark
18 183 1 gmark
19 cmark
182 cmark
20 cmark
181 cmark
21 180 1 gmark
21 cmark
180 cmark
22 179 1 gmark
22 cmark
179 cmark
23 178 2 gmark
178 cmark
27 173 1 gmark
28 172 1 gmark
28 cmark
172 cmark
29 171 1 gmark
29 cmark
171 cmark
167 cmark
166 cmark
46 165 1 gmark
47 164 2 gmark
55 157 2 gmark
55 cmark
56 cmark
57 155 1 gmark
57 cmark
155 cmark
58 154 1 gmark
58 cmark
154 cmark
59 cmark
153 cmark
81 151 1 gmark
82 150 1 gmark
84 cmark
85 cmark
147 cmark
90 cmark
142 cmark
91 cmark
141 cmark
92 140 2 gmark
93 139 2 gmark
93 cmark
139 cmark

% End Annotations
showpage
end
%%EOF
