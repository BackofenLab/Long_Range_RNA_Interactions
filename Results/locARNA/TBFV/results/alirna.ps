%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.5.1
%%CreationDate: Thu Dec 14 17:56:28 2023
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
-AAAGACAGCUUAGGAGAACAAGAGCUGGGR-u--uuAUGGBCRGGAWGDCCAUYYUKAAAGGWAAGGGGGGCGGUCCCCCUCGACGAGUGUYKAAAGWGACCGCWA-u---u-------gauuuuuccuccuccUAUACYAAAuUUCCCCCUCGWYWGWGGGGGGGCGGUUCUUGUUCUCccugagccaccauca\
) } def
/len { sequence length } bind def

/coor [
[82.31243134 498.80783081]
[68.31869507 493.27053833]
[55.67428207 485.10934448]
[44.86521149 474.63793945]
[36.30695343 462.25881958]
[30.32846642 448.44781494]
[27.15954590 433.73577881]
[26.92199516 418.68820190]
[29.62494659 403.88345337]
[35.16450500 389.89062500]
[43.32774734 377.24752808]
[53.80089569 366.44015503]
[66.18139648 357.88391113]
[79.99337006 351.90765381]
[94.70592499 348.74111938]
[94.46672821 333.74301147]
[94.22753143 318.74493408]
[93.98833466 303.74682617]
[93.74913788 288.74874878]
[93.50993347 273.75064087]
[93.27073669 258.75256348]
[93.03153992 243.75445557]
[92.79234314 228.75636292]
[92.55314636 213.75827026]
[92.31394958 198.76017761]
[92.07475281 183.76208496]
[91.83555603 168.76399231]
[91.59635925 153.76589966]
[79.91162109 144.36021423]
[65.20865631 147.33055115]
[50.50569153 150.30088806]
[62.32378006 159.53845215]
[64.29497528 174.40837097]
[55.29187775 186.40605164]
[40.46365738 188.66963196]
[28.29103851 179.90451050]
[25.73593521 165.12373352]
[34.25923538 152.78118896]
[19.33975029 154.33326721]
[4.42026234 155.88533020]
[-10.49922466 157.43739319]
[-25.41871071 158.98945618]
[-40.33819962 160.54151917]
[-51.52345657 172.04237366]
[-67.47429657 170.32472229]
[-75.95459747 156.70620728]
[-70.45899963 141.63378906]
[-55.20325470 136.66972351]
[-41.89026260 145.62203979]
[-26.97077751 144.06997681]
[-12.05129051 142.51791382]
[2.86819625 140.96583557]
[17.78768349 139.41377258]
[32.70716858 137.86170959]
[47.53536224 135.59791565]
[62.23832321 132.62759399]
[76.94129181 129.65725708]
[67.49770355 115.51990509]
[65.53770447 99.34696960]
[70.85224915 84.69987488]
[81.69675446 74.52285767]
[95.29175568 70.55286407]
[96.72481537 55.62147522]
[85.34932709 42.33898926]
[87.06021118 25.27429581]
[100.31399536 14.93017578]
[101.50876617 -0.02216560]
[102.70353699 -14.97450733]
[103.89830780 -29.92684937]
[105.09307861 -44.87919235]
[106.28784943 -59.83153152]
[104.49806976 -74.72437286]
[99.79461670 -88.96788025]
[95.09116364 -103.21138763]
[90.38771057 -117.45489502]
[85.68425751 -131.69841003]
[80.98081207 -145.94190979]
[69.30649567 -156.61997986]
[72.66277313 -171.13151550]
[58.82672119 -178.28703308]
[54.25965500 -192.79896545]
[61.16661453 -205.94543457]
[56.46316147 -220.18894958]
[51.75971222 -234.43244934]
[47.05625916 -248.67596436]
[42.35280991 -262.91946411]
[29.76004410 -273.42443848]
[32.82745361 -289.53414917]
[48.39954758 -294.67633057]
[60.45708847 -283.56112671]
[56.59631729 -267.62292480]
[61.29977036 -253.37940979]
[66.00321960 -239.13591003]
[70.70667267 -224.89239502]
[75.41012573 -210.64888000]
[88.78757477 -204.20068359]
[93.76045227 -189.82273865]
[86.90628052 -175.83496094]
[98.24417877 -166.17568970]
[95.22431946 -150.64537048]
[99.92777252 -136.40185547]
[104.63121796 -122.15834808]
[109.33467102 -107.91484070]
[114.03812408 -93.67133331]
[118.74157715 -79.42782593]
[121.06415558 -94.24691772]
[126.69454956 -108.15010834]
[135.33796692 -120.40944672]
[146.54185486 -130.38305664]
[159.71958923 -137.54875183]
[174.18122864 -141.53134155]
[189.16958618 -142.12231445]
[203.89988708 -139.29071045]
[217.60090637 -133.18479919]
[229.55528259 -124.12427521]
[239.13708496 -112.58352661]
[245.84466553 -99.16680145]
[249.32679749 -84.57657623]
[249.40118408 -69.57675934]
[246.06391907 -54.95271683]
[239.48974609 -41.47012711]
[230.02287292 -29.83491516]
[218.15895081 -20.65627480]
[204.51916504 -14.41478062]
[189.81765747 -11.43722534]
[174.82418823 -11.87950706]
[160.32376099 -15.71846962]
[147.07559204 -22.75311279]
[135.77334595 -32.61511612]
[127.00876617 -44.78812790]
[121.24018860 -58.63676071]
[120.04541779 -43.68442154]
[118.85064697 -28.73207855]
[117.65587616 -13.77973652]
[116.46110535 1.17260528]
[115.26633453 16.12494659]
[124.91694641 24.67293930]
[127.92350769 37.40950394]
[122.96917725 49.73212433]
[111.65620422 57.05453110]
[110.22314453 71.98591614]
[122.03817749 77.67485046]
[130.77597046 88.31562042]
[134.39305115 102.27906799]
[131.69116211 117.11539459]
[122.63282013 129.98353577]
[137.05247498 134.11553955]
[151.47213745 138.24754333]
[165.89179993 142.37954712]
[180.31144714 146.51155090]
[194.73110962 150.64356995]
[209.15077209 154.77557373]
[223.57041931 158.90757751]
[237.99008179 163.03958130]
[253.76174927 158.54661560]
[265.34869385 170.15156555]
[260.83126831 185.91622925]
[244.85661316 189.62329102]
[233.85807800 177.45924377]
[219.43841553 173.32722473]
[205.01876831 169.19522095]
[190.59910583 165.06321716]
[176.17944336 160.93121338]
[161.75979614 156.79920959]
[147.34013367 152.66720581]
[132.92047119 148.53520203]
[118.50081635 144.40319824]
[106.59445190 153.52670288]
[106.83364868 168.52479553]
[107.07284546 183.52288818]
[107.31204224 198.52098083]
[107.55123901 213.51907349]
[107.79043579 228.51716614]
[108.02963257 243.51525879]
[108.26882935 258.51336670]
[108.50802612 273.51144409]
[108.74723053 288.50955200]
[108.98642731 303.50762939]
[109.22562408 318.50573730]
[109.46482086 333.50381470]
[109.70401764 348.50192261]
[124.51006317 351.19766235]
[138.50559998 356.73043823]
[151.15264893 364.88754272]
[161.96510315 375.35543823]
[170.52737427 387.73178101]
[176.51033020 401.54086304]
[179.68400574 416.25186157]
[179.92643738 431.29937744]
[177.22827148 446.10498047]
[171.69323730 460.09960938]
[163.53410339 472.74536133]
[153.06445312 483.55612183]
[140.68672180 492.11636353]
[126.87667847 498.09710693]
[112.16515350 501.26840210]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 181]
[16 180]
[17 179]
[18 178]
[19 177]
[20 176]
[21 175]
[22 174]
[23 173]
[24 172]
[25 171]
[26 170]
[27 169]
[28 168]
[29 57]
[30 56]
[31 55]
[38 54]
[39 53]
[40 52]
[41 51]
[42 50]
[43 49]
[62 141]
[63 140]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[71 131]
[72 105]
[73 104]
[74 103]
[75 102]
[76 101]
[77 100]
[79 98]
[82 95]
[83 94]
[84 93]
[85 92]
[86 91]
[146 167]
[147 166]
[148 165]
[149 164]
[150 163]
[151 162]
[152 161]
[153 160]
[154 159]
] def

init

% Start Annotations
15 181 0.0 1 colorpair
16 180 0.0 1 colorpair
17 179 0.0 1 colorpair
18 178 0.0 1 colorpair
19 177 0.0 1 colorpair
20 176 0.0 1 colorpair
21 175 0.0 1 colorpair
22 174 0.0 1 colorpair
23 173 0.0 1 colorpair
24 172 0.0 1 colorpair
25 171 0.0 1 colorpair
26 170 0.0 1 colorpair
27 169 0.0 1 colorpair
28 168 0.0 1 colorpair
29 57 0.16 1 colorpair
30 56 0.16 1 colorpair
31 55 0.32 1 colorpair
38 54 0.0 0.6 colorpair
39 53 0.16 1 colorpair
40 52 0.0 1 colorpair
41 51 0.0 0.6 colorpair
42 50 0.32 0.2 colorpair
43 49 0.0 0.6 colorpair
62 141 0.16 0.6 colorpair
63 140 0.0 1 colorpair
66 136 0.0 1 colorpair
67 135 0.0 0.2 colorpair
68 134 0.0 0.2 colorpair
69 133 0.0 0.2 colorpair
70 132 0.0 0.2 colorpair
71 131 0.0 0.2 colorpair
72 105 0.0 1 colorpair
73 104 0.16 1 colorpair
74 103 0.0 1 colorpair
75 102 0.0 1 colorpair
76 101 0.16 1 colorpair
77 100 0.0 1 colorpair
79 98 0.0 1 colorpair
82 95 0.0 1 colorpair
83 94 0.16 1 colorpair
84 93 0.16 1 colorpair
85 92 0.16 1 colorpair
86 91 0.0 1 colorpair
146 167 0.0 1 colorpair
147 166 0.0 1 colorpair
148 165 0.0 1 colorpair
149 164 0.0 1 colorpair
150 163 0.0 1 colorpair
151 162 0.0 1 colorpair
152 161 0.0 1 colorpair
153 160 0.16 1 colorpair
154 159 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
57 cmark
56 cmark
31 cmark
55 cmark
38 54 1 gmark
53 cmark
41 51 1 gmark
42 50 2 gmark
42 cmark
50 cmark
43 49 1 gmark
62 141 1 gmark
141 cmark
67 135 2 gmark
68 134 2 gmark
69 133 2 gmark
70 132 2 gmark
71 131 2 gmark
73 cmark
104 cmark
101 cmark
83 cmark
94 cmark
93 cmark
85 cmark
92 cmark
153 cmark
160 cmark
154 cmark
159 cmark

% End Annotations
showpage
end
%%EOF
