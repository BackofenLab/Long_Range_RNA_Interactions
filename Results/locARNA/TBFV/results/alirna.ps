%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.5.1
%%CreationDate: Tue Dec 19 16:54:51 2023
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGACAGCUUAGGAGAACAAGAGCUGGGG______AUGGCCAGGAAGGCCAUCCUGAAAGGAAAGGGGGGCGGUCCCCCUCGACGAGUGUCGAAAGAGACCGCAA_______________UUUUUCCUCCUCCUAUACCAAA_UUCCCCCUCGACAGAGGGGGGGCGGUUCUUGUUCUC_______________\
) } def
/len { sequence length } bind def

/coor [
[70.38373566 481.39590454]
[56.99543762 474.51562500]
[45.26641846 465.08084106]
[35.67695999 453.47793579]
[28.61975098 440.18206787]
[24.38377953 425.73764038]
[23.14250374 410.73617554]
[24.94675446 395.79196167]
[29.72264862 381.51693726]
[37.27461624 368.49569702]
[47.29341125 357.26144409]
[59.36876678 348.27420044]
[73.00620270 341.90197754]
[87.64727783 338.40573120]
[87.16650391 323.41345215]
[86.68573761 308.42114258]
[86.20496368 293.42886353]
[85.72418976 278.43655396]
[85.24341583 263.44427490]
[84.76264191 248.45196533]
[84.28186798 233.45967102]
[83.80109406 218.46737671]
[83.32032013 203.47509766]
[82.83954620 188.48280334]
[82.35877228 173.49050903]
[81.87799835 158.49821472]
[81.39722443 143.50592041]
[74.90104675 157.02626038]
[65.17028046 168.44169617]
[52.84902191 176.99661255]
[38.75284958 182.12475586]
[23.81480408 183.48667908]
[9.02366638 180.99223328]
[-4.64150906 174.80651855]
[-16.27620125 165.33900452]
[-25.11028481 153.21633911]
[-30.55901909 139.24095154]
[-32.26174164 124.33791351]
[-30.10574341 109.49366760]
[-24.23373604 95.69078827]
[-15.03439808 83.84291077]
[-3.11665154 74.73426819]
[10.73064613 68.96778107]
[25.59091759 66.92514801]
[40.48052979 68.74156952]
[54.41391754 74.29681396]
[66.46880341 83.22316742]
[75.84724426 94.92978668]
[81.92846680 108.64177704]
[84.31003571 123.45432281]
[89.03665924 109.21849060]
[86.40577698 95.48640442]
[96.72750854 86.05488586]
[101.45412445 71.81905365]
[106.18074799 57.58321381]
[110.90737152 43.34737778]
[99.46652222 34.71087265]
[91.26600647 22.97974777]
[87.09737396 9.30947685]
[87.35582733 -4.95846415]
[92.00282288 -18.42822075]
[100.57112885 -29.78612709]
[112.21176147 -37.92881393]
[125.77811432 -42.07040024]
[139.93885803 -41.81832123]
[144.89303589 -55.97657013]
[149.84722900 -70.13481903]
[154.80140686 -84.29307556]
[159.75559998 -98.45132446]
[164.70979309 -112.60957336]
[169.66397095 -126.76782227]
[155.95515442 -132.87747192]
[142.79768372 -140.09832764]
[130.28146362 -148.38105774]
[118.49198151 -157.66908264]
[107.50976562 -167.89897156]
[97.40984344 -179.00082397]
[88.26120758 -190.89880371]
[80.12636566 -203.51164246]
[73.06086731 -216.75318909]
[67.11298370 -230.53295898]
[62.32335663 -244.75685120]
[58.72469711 -259.32769775]
[56.34158707 -274.14593506]
[55.19030380 -289.11035156]
[55.27871704 -304.11874390]
[56.60622025 -319.06857300]
[59.16374588 -333.85769653]
[62.93382263 -348.38513184]
[67.89069366 -362.55160522]
[74.00050354 -376.26034546]
[81.22151184 -389.41772461]
[89.50439453 -401.93383789]
[98.79256439 -413.72323608]
[109.02258301 -424.70532227]
[120.12455750 -434.80511475]
[132.02264404 -443.95361328]
[144.63558960 -452.08828735]
[157.87721252 -459.15362549]
[171.65705872 -465.10134888]
[185.88099670 -469.89080811]
[200.45187378 -473.48928833]
[215.27015686 -475.87222290]
[230.23458862 -477.02334595]
[245.24298096 -476.93475342]
[260.19277954 -475.60705566]
[274.98190308 -473.04934692]
[289.50927734 -469.27911377]
[303.67568970 -464.32208252]
[317.38436890 -458.21209717]
[330.54165649 -450.99093628]
[343.05767822 -442.70788574]
[354.84695435 -433.41958618]
[365.82891846 -423.18945312]
[375.92855835 -412.08734131]
[385.07693481 -400.18914795]
[393.21145630 -387.57611084]
[400.27664185 -374.33441162]
[406.22421265 -360.55447388]
[411.01348877 -346.33047485]
[414.61181641 -331.75955200]
[416.99456787 -316.94125366]
[418.14547729 -301.97680664]
[418.05670166 -286.96841431]
[416.72885132 -272.01861572]
[414.17098999 -257.22955322]
[410.40054321 -242.70222473]
[405.44335938 -228.53585815]
[399.33322144 -214.82725525]
[392.11187744 -201.67005920]
[383.82870483 -189.15412903]
[374.54025269 -177.36497498]
[364.30996704 -166.38313293]
[353.20776367 -156.28359985]
[341.30944824 -147.13539124]
[328.69631958 -139.00099182]
[315.45452881 -131.93597412]
[301.67453003 -125.98858643]
[287.45046997 -121.19947052]
[272.87951660 -117.60132599]
[258.06118774 -115.21874237]
[243.09672546 -114.06800079]
[228.08833313 -114.15695190]
[213.13856506 -115.48498535]
[198.34951782 -118.04303741]
[183.82221985 -121.81363678]
[178.86804199 -107.65538788]
[173.91384888 -93.49713898]
[168.95967102 -79.33888245]
[164.00547791 -65.18063354]
[159.05130005 -51.02238464]
[154.09710693 -36.86413574]
[166.40432739 -27.05383301]
[174.62414551 -13.60061264]
[177.74786377 1.87981260]
[175.38011169 17.52087784]
[167.78877258 31.43023109]
[155.87484741 41.91868210]
[141.06550598 47.70533752]
[125.14321136 48.07400131]
[120.41658783 62.30983734]
[115.68996429 76.54567719]
[110.96334076 90.78150940]
[113.59422302 104.51359558]
[103.27249146 113.94511414]
[98.54587555 128.18095398]
[96.38951874 143.02514648]
[96.87029266 158.01744080]
[97.35106659 173.00973511]
[97.83184052 188.00202942]
[98.31261444 202.99432373]
[98.79338837 217.98661804]
[99.27416229 232.97889709]
[99.75493622 247.97119141]
[100.23570251 262.96350098]
[100.71647644 277.95578003]
[101.19725037 292.94808960]
[101.67802429 307.94036865]
[102.15879822 322.93267822]
[102.63957214 337.92495728]
[117.47457886 340.47595215]
[131.49226379 345.96133423]
[144.11862183 354.15643311]
[154.83660889 364.72570801]
[163.20733643 377.23635864]
[168.88803101 391.17602539]
[171.64604187 405.97393799]
[171.36846924 421.02410889]
[168.06666565 435.71026611]
[161.87582397 449.43099976]
[153.04946899 461.62445068]
[141.94903564 471.79132080]
[129.02906799 479.51528931]
[114.81864166 484.48001099]
[99.89966583 486.48226929]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 180]
[15 179]
[16 178]
[17 177]
[18 176]
[19 175]
[20 174]
[21 173]
[22 172]
[23 171]
[24 170]
[25 169]
[26 168]
[27 167]
[50 166]
[51 165]
[53 163]
[54 162]
[55 161]
[56 160]
[65 152]
[66 151]
[67 150]
[68 149]
[69 148]
[70 147]
[71 146]
] def

init

% Start Annotations
14 180 0.0 1 colorpair
15 179 0.0 1 colorpair
16 178 0.0 1 colorpair
17 177 0.0 1 colorpair
18 176 0.0 1 colorpair
19 175 0.0 1 colorpair
20 174 0.0 1 colorpair
21 173 0.0 1 colorpair
22 172 0.0 1 colorpair
23 171 0.0 1 colorpair
24 170 0.0 1 colorpair
25 169 0.0 1 colorpair
26 168 0.0 1 colorpair
27 167 0.0 1 colorpair
50 166 0.0 1 colorpair
51 165 0.0 1 colorpair
53 163 0.16 1 colorpair
54 162 0.16 1 colorpair
55 161 0.16 1 colorpair
56 160 0.16 1 colorpair
65 152 0.0 0.6 colorpair
66 151 0.0 1 colorpair
67 150 0.0 1 colorpair
68 149 0.0 1 colorpair
69 148 0.0 1 colorpair
70 147 0.0 1 colorpair
71 146 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
53 cmark
54 cmark
55 cmark
56 cmark
65 152 1 gmark

% End Annotations
showpage
end
%%EOF
