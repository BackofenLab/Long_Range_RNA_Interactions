%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Feb 15 17:10:19 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUUGAGAAAAAGACAGCUUAGGAGAACAAGAGCUGGGG______AUGGCCAGGAAGGCCAUCCUGAAAGGAAAGGGGGGCGGUCCCCCUCGACGAGUGUCGAAAGAGACCGCAA_____________UAUACAAAAUUCCCCCUCGACAGAGGGGGGGCGGUUCUUGUUCUCCCUGAGCCACCAUCA\
) } def
/len { sequence length } bind def

/coor [
[72.77828979 541.60003662]
[59.73852158 549.14404297]
[45.34683228 553.59680176]
[30.32510185 554.73492432]
[15.42681408 552.50134277]
[1.39926255 547.00811768]
[-11.05393791 538.53076172]
[-21.30813980 527.49450684]
[-28.84899712 514.45294189]
[-33.29826355 500.06015015]
[-34.43276215 485.03814697]
[-32.19559479 470.14041138]
[-26.69896889 456.11419678]
[-18.21859741 443.66305542]
[-7.17985010 433.41152954]
[5.86357260 425.87380981]
[20.25741768 421.42803955]
[35.27969742 420.29718018]
[37.50365448 405.46295166]
[39.72760773 390.62875366]
[41.95156097 375.79452515]
[44.17551804 360.96029663]
[46.39947128 346.12609863]
[48.62342453 331.29187012]
[50.72466660 316.43978882]
[52.70304871 301.57083130]
[54.68143082 286.70184326]
[56.65981293 271.83288574]
[58.63819885 256.96392822]
[60.61658096 242.09497070]
[62.59496307 227.22601318]
[64.57334137 212.35705566]
[66.55172729 197.48808289]
[68.53011322 182.61912537]
[70.50849152 167.75016785]
[72.48687744 152.88121033]
[74.46525574 138.01223755]
[65.76067352 150.22822571]
[54.22848129 159.82034302]
[40.63135147 166.15422058]
[25.86850548 168.81098938]
[10.91626644 167.61492920]
[-3.23652387 162.64517212]
[-15.65388966 154.23036194]
[-25.51462746 142.92700195]
[-32.16661072 129.48263550]
[-35.16992188 114.78637695]
[-34.32593918 99.81013489]
[-29.69048119 85.54435730]
[-21.57010460 72.93247986]
[-10.50183964 62.80856705]
[2.78233099 55.84216309]
[17.40387726 52.49396896]
[32.39582443 52.98542023]
[46.76670074 57.28400803]
[59.56611252 65.10546112]
[69.94758606 75.93251038]
[77.22456360 89.04912567]
[80.91577911 103.58786011]
[80.77736664 118.58557129]
[87.91658020 105.39346313]
[75.46103668 113.75165558]
[61.38595963 118.93743134]
[46.48500824 120.65837860]
[31.59840202 118.81745148]
[17.56555748 113.51846313]
[5.17774677 105.06020355]
[-4.86651754 93.91960907]
[-12.00086689 80.72487640]
[-15.82301617 66.22000885]
[-16.11744499 51.22290039]
[-12.86754990 36.57918930]
[-6.25658464 23.11460304]
[3.34267688 11.58836460]
[15.38895988 2.65040779]
[29.20300865 -3.19528055]
[44.00588608 -5.61907864]
[58.96290207 -4.48431540]
[73.23066711 0.14502330]
[86.00467682 8.00790215]
[96.56462097 18.66095352]
[104.31506348 31.50348473]
[108.81898499 45.81134033]
[109.82241058 60.77774048]
[107.26876068 75.55877686]
[101.30056763 89.32349396]
[112.98372650 79.91585541]
[124.66688538 70.50820923]
[136.35005188 61.10056305]
[148.03320312 51.69291687]
[159.71636963 42.28527069]
[171.39952087 32.87762451]
[172.95141602 15.46181583]
[186.34944153 4.76033926]
[203.00845337 7.00613117]
[214.53446960 -2.59339690]
[226.06048584 -12.19292450]
[237.58650208 -21.79245377]
[242.18881226 -29.70403481]
[249.38337708 -31.45350647]
[251.22190857 -46.92145920]
[263.20431519 -56.29571915]
[277.93930054 -54.44763565]
[289.62246704 -63.85528183]
[301.30563354 -73.26292419]
[294.11245728 -86.47270966]
[289.39379883 -100.75465393]
[287.30133057 -115.64966583]
[287.90231323 -130.67892456]
[291.17739868 -145.35929871]
[297.02133179 -159.21888733]
[305.24627686 -171.81214905]
[315.58776855 -182.73428345]
[327.71343994 -191.63415527]
[341.23348999 -198.22569275]
[355.71328735 -202.29701233]
[370.68734741 -203.71720886]
[385.67434692 -202.44065857]
[400.19250488 -198.50839233]
[413.77511597 -192.04679871]
[425.98559570 -183.26361084]
[436.43136597 -172.44116211]
[444.77667236 -159.92733765]
[450.75326538 -146.12443542]
[454.16897583 -131.47613525]
[454.91403198 -116.45333099]
[452.96447754 -101.53894043]
[448.38299561 -87.21240234]
[441.31686401 -73.93424988]
[431.99319458 -62.13132858]
[420.71173096 -52.18304825]
[407.83511353 -44.40920258]
[393.77728271 -39.05969620]
[378.99014282 -36.30648804]
[363.94900513 -36.23808289]
[349.13745117 -38.85668182]
[335.03155518 -44.07810593]
[322.08474731 -51.73450851]
[310.71325684 -61.57976913]
[299.03012085 -52.17212296]
[287.34695435 -42.76447678]
[286.00952148 -27.97438240]
[274.29516602 -18.26726151]
[258.79101562 -19.77034760]
[247.18603516 -10.26643658]
[235.66001892 -0.66690826]
[224.13400269 8.93262005]
[212.60798645 18.53214836]
[213.24272156 31.41219521]
[206.23377991 42.46809387]
[193.95408630 47.53786469]
[180.80717468 44.56078339]
[169.12400818 53.96842957]
[157.44085693 63.37607574]
[145.75769043 72.78372192]
[134.07452393 82.19136810]
[122.39137268 91.59901428]
[110.70821381 101.00666046]
[101.10868835 112.53267670]
[93.96947479 125.72477722]
[89.33422089 139.99063110]
[87.35583496 154.85958862]
[85.37745667 169.72854614]
[83.39907074 184.59750366]
[81.42068481 199.46647644]
[79.44230652 214.33543396]
[77.46392059 229.20439148]
[75.48554230 244.07334900]
[73.50715637 258.94232178]
[71.52877808 273.81127930]
[69.55039215 288.68023682]
[67.57201385 303.54919434]
[65.59362793 318.41815186]
[67.56596375 327.35595703]
[63.45764542 333.51583862]
[61.23368835 348.35003662]
[59.00973511 363.18426514]
[56.78578186 378.01849365]
[54.56182480 392.85269165]
[52.33787155 407.68692017]
[50.11391449 422.52114868]
[64.14412689 428.00756836]
[76.60143280 436.47888184]
[86.86098480 447.51016235]
[94.40815735 460.54812622]
[98.86440277 474.93872070]
[100.00617981 489.96017456]
[97.77622986 504.85900879]
[92.28639984 518.88787842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 181]
[19 180]
[20 179]
[21 178]
[22 177]
[23 176]
[24 175]
[25 173]
[26 172]
[27 171]
[28 170]
[29 169]
[30 168]
[31 167]
[32 166]
[33 165]
[34 164]
[35 163]
[36 162]
[37 161]
[60 160]
[61 159]
[86 158]
[87 157]
[88 156]
[89 155]
[90 154]
[91 153]
[92 152]
[95 148]
[96 147]
[97 146]
[98 145]
[100 144]
[103 141]
[104 140]
[105 139]
] def

init

% Start Annotations
18 181 0.0 1 colorpair
19 180 0.0 1 colorpair
20 179 0.0 1 colorpair
21 178 0.0 1 colorpair
22 177 0.0 1 colorpair
23 176 0.0 1 colorpair
24 175 0.0 1 colorpair
25 173 0.0 1 colorpair
26 172 0.0 1 colorpair
27 171 0.0 1 colorpair
28 170 0.0 1 colorpair
29 169 0.0 1 colorpair
30 168 0.0 1 colorpair
31 167 0.0 1 colorpair
32 166 0.0 1 colorpair
33 165 0.0 1 colorpair
34 164 0.0 1 colorpair
35 163 0.0 1 colorpair
36 162 0.0 1 colorpair
37 161 0.0 1 colorpair
60 160 0.0 1 colorpair
61 159 0.0 1 colorpair
86 158 0.0 1 colorpair
87 157 0.0 1 colorpair
88 156 0.0 1 colorpair
89 155 0.0 1 colorpair
90 154 0.0 1 colorpair
91 153 0.0 0.6 colorpair
92 152 0.0 0.6 colorpair
95 148 0.0 0.6 colorpair
96 147 0.0 0.6 colorpair
97 146 0.0 0.6 colorpair
98 145 0.0 0.6 colorpair
100 144 0.0 1 colorpair
103 141 0.0 0.6 colorpair
104 140 0.0 1 colorpair
105 139 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
91 153 1 gmark
92 152 1 gmark
95 148 1 gmark
96 147 1 gmark
97 146 1 gmark
98 145 1 gmark
103 141 1 gmark

% End Annotations
showpage
end
%%EOF
