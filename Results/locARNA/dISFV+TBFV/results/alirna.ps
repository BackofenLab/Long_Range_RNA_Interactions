%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Fri Jan 26 12:42:55 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAG____ACAGCUUAGGAGAACAAGAGCUGGG_______AUG_____GAAGGCCAUUCUAAAAGGAAAGGGGGGCGGUCCCC__CUCGACGAGAGUCGAAAGCGACCG____CAA_____________C_UAUUU_CUCAUACUAUACCAAAUUUCCCCCUCGGCAAAGGGGGGGCGGUUCUUG_UUCUC_______________\
) } def
/len { sequence length } bind def

/coor [
[129.47331238 356.20770264]
[130.79248047 371.27804565]
[127.38811493 386.01797485]
[119.59375000 398.98342896]
[108.17299652 408.90420532]
[94.24473572 414.80831909]
[79.17352295 416.11740112]
[64.43587494 412.70315552]
[51.47564316 404.90011597]
[41.56253815 393.47271729]
[35.66774368 379.54049683]
[34.36877060 364.46841431]
[37.79288101 349.73306274]
[45.60461426 336.77804565]
[57.03865433 326.87261963]
[70.97481537 320.98715210]
[86.04776764 319.69827271]
[87.97744751 304.82290649]
[88.43267822 289.82983398]
[88.88791656 274.83673096]
[89.34314728 259.84362793]
[89.79837799 244.85055542]
[90.13983154 229.85443115]
[90.36746979 214.85617065]
[90.59511566 199.85789490]
[90.82275391 184.85961914]
[91.05039978 169.86134338]
[91.27804565 154.86306763]
[91.50568390 139.86480713]
[91.73332977 124.86653137]
[91.96097565 109.86825562]
[84.98648071 123.14818573]
[74.85232544 134.20706177]
[62.23035431 142.31175232]
[47.95735550 146.92494202]
[32.97956085 147.74078369]
[18.28992653 144.70521545]
[4.86231518 138.01947021]
[-6.41308594 128.12677002]
[-14.78876781 115.68298340]
[-19.70945930 101.51306152]
[-20.84894180 86.55640411]
[-18.13167381 71.80457306]
[-11.73779583 58.23555374]
[-2.09119391 46.74890518]
[10.16860485 38.10614395]
[24.22883224 32.88024521]
[39.15735626 31.41766357]
[53.96448517 33.81536102]
[67.66857147 39.91437912]
[79.36109924 49.31037903]
[88.26689911 61.38045502]
[93.79556274 75.32440948]
[95.58059692 90.21366882]
[100.71089935 76.11828613]
[98.16015625 60.50405121]
[109.78382111 51.19063950]
[114.91412354 37.09524918]
[120.04442596 22.99986076]
[125.17472839 8.90447140]
[114.35755920 0.62369448]
[106.32099152 -10.35528851]
[101.70825958 -23.13769722]
[100.88403320 -36.68506622]
[103.90560913 -49.89962387]
[110.51905060 -61.71323395]
[120.18045807 -71.17373657]
[132.10072327 -77.52169800]
[145.30999756 -80.25135803]
[158.73651123 -79.15091705]
[164.29222107 -93.08411407]
[169.84794617 -107.01731110]
[175.40367126 -120.95050812]
[180.95938110 -134.88371277]
[186.51510620 -148.81690979]
[173.03535461 -155.41340637]
[160.09310913 -163.01048279]
[147.76248169 -171.56460571]
[136.11410522 -181.02677917]
[125.21471405 -191.34281921]
[115.12673187 -202.45362854]
[105.90794373 -214.29556274]
[97.61115265 -226.80078125]
[90.28388977 -239.89767456]
[83.96810913 -253.51121521]
[78.70000458 -267.56341553]
[74.50973511 -281.97378540]
[71.42131805 -296.65982056]
[69.45243835 -311.53735352]
[68.61437225 -326.52117920]
[68.91192627 -341.52545166]
[70.34338379 -356.46426392]
[72.90055084 -371.25204468]
[76.56878662 -385.80407715]
[81.32707214 -400.03698730]
[87.14815521 -413.86929321]
[93.99868774 -427.22174072]
[101.83943939 -440.01782227]
[110.62548828 -452.18429565]
[120.30651855 -463.65142822]
[130.82707214 -474.35354614]
[142.12689209 -484.22933960]
[154.14123535 -493.22225952]
[166.80130005 -501.28082275]
[180.03457642 -508.35879517]
[193.76524353 -514.41571045]
[207.91467285 -519.41680908]
[222.40180969 -523.33349609]
[237.14367676 -526.14331055]
[252.05581665 -527.83013916]
[267.05282593 -528.38433838]
[282.04879761 -527.80279541]
[296.95782471 -526.08874512]
[311.69454956 -523.25201416]
[326.17449951 -519.30895996]
[340.31478882 -514.28204346]
[354.03439331 -508.20010376]
[367.25473022 -501.09799194]
[379.90008545 -493.01635742]
[391.89801025 -484.00152588]
[403.17977905 -474.10513306]
[413.68078613 -463.38385010]
[423.34088135 -451.89907837]
[432.10473633 -439.71661377]
[439.92211914 -426.90621948]
[446.74829102 -413.54132080]
[452.54412842 -399.69842529]
[457.27645874 -385.45684814]
[460.91812134 -370.89816284]
[463.44833374 -356.10574341]
[464.85253906 -341.16433716]
[465.12271118 -326.15951538]
[464.25732422 -311.17724609]
[462.26129150 -296.30334473]
[459.14608765 -281.62298584]
[454.92956543 -267.22027588]
[449.63580322 -253.17770386]
[443.29522705 -239.57569885]
[435.94406128 -226.49220276]
[427.62448120 -214.00213623]
[418.38409424 -202.17703247]
[408.27587891 -191.08465576]
[397.35769653 -180.78851318]
[385.69207764 -171.34759521]
[373.34585571 -162.81597900]
[360.38977051 -155.24252319]
[346.89801025 -148.67062378]
[332.94787598 -143.13792419]
[318.61926270 -138.67608643]
[303.99423218 -135.31069946]
[289.15655518 -133.06103516]
[274.19125366 -131.93997192]
[259.18399048 -131.95393372]
[244.22079468 -133.10284424]
[229.38734436 -135.38011169]
[214.76860046 -138.77270508]
[200.44830322 -143.26118469]
[194.89257812 -129.32798767]
[189.33686829 -115.39479065]
[183.78114319 -101.46159363]
[178.22543335 -87.52839661]
[172.66970825 -73.59519958]
[185.16140747 -62.88247299]
[193.24420166 -48.51866913]
[195.92626953 -32.23051453]
[192.86622620 -15.98300266]
[184.41650391 -1.74231482]
[171.58283997 8.76210308]
[155.90460205 14.24756813]
[139.27011108 14.03477383]
[134.13981628 28.13016319]
[129.00950623 42.22555161]
[123.87921143 56.32094193]
[126.79691315 70.92697906]
[114.80628967 81.24858856]
[109.67598724 95.34397125]
[106.95924377 110.09590149]
[106.73160553 125.09416962]
[106.50395966 140.09243774]
[106.27631378 155.09071350]
[106.04867554 170.08898926]
[105.82102966 185.08726501]
[105.59338379 200.08554077]
[105.36574554 215.08380127]
[105.13809967 230.08207703]
[108.13765717 238.71337891]
[104.79147339 245.30578613]
[104.33623505 260.29888916]
[103.88100433 275.29196167]
[103.42577362 290.28506470]
[102.97053528 305.27813721]
[111.23903656 292.76287842]
[123.83826447 284.62289429]
[138.64604187 282.22924805]
[153.16821289 285.98513794]
[164.95869446 295.25790405]
[172.03155518 308.48571777]
[173.19543457 323.44049072]
[168.25431824 337.60330200]
[158.04046631 348.58862305]
[144.27427673 354.54611206]
[129.27445984 354.47232056]
[115.56753540 348.37966919]
[105.46227264 337.29437256]
[100.66075897 323.08361816]
[113.63143158 330.86929321]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 205]
[18 191]
[19 190]
[20 189]
[21 188]
[22 187]
[23 185]
[24 184]
[25 183]
[26 182]
[27 181]
[28 180]
[29 179]
[30 178]
[31 177]
[54 176]
[55 175]
[57 173]
[58 172]
[59 171]
[60 170]
[70 162]
[71 161]
[72 160]
[73 159]
[74 158]
[75 157]
] def

init

% Start Annotations
18 191 0.16 0.6 colorpair
19 190 0.32 1 colorpair
20 189 0.48 1 colorpair
21 188 0.48 0.6 colorpair
22 187 0.48 0.6 colorpair
27 181 0.16 0.6 colorpair
28 180 0.32 0.6 colorpair
29 179 0.16 0.6 colorpair
54 176 0.16 0.6 colorpair
58 172 0.32 0.6 colorpair
70 162 0.16 0.2 colorpair
74 158 0.0 1 colorpair
75 157 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
17 205 5 gmark
205 cmark
18 191 1 gmark
18 cmark
191 cmark
19 cmark
190 cmark
20 cmark
189 cmark
21 188 1 gmark
21 cmark
188 cmark
22 187 1 gmark
22 cmark
187 cmark
23 185 3 gmark
23 cmark
185 cmark
24 184 4 gmark
25 183 3 gmark
26 182 3 gmark
27 181 1 gmark
27 cmark
181 cmark
28 180 1 gmark
28 cmark
180 cmark
29 179 1 gmark
29 cmark
179 cmark
30 178 4 gmark
31 177 5 gmark
54 176 1 gmark
54 cmark
55 175 3 gmark
55 cmark
57 173 4 gmark
57 cmark
173 cmark
58 172 1 gmark
58 cmark
172 cmark
59 171 3 gmark
59 cmark
60 170 5 gmark
60 cmark
70 162 2 gmark
162 cmark
71 161 5 gmark
72 160 4 gmark
73 159 5 gmark
75 157 2 gmark
75 cmark
157 cmark

% End Annotations
showpage
end
%%EOF
