%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Jan 25 16:50:25 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGACAGCUUAGGAGAACAAGAGC_UGGGG______AUG_GCUGAAAGACC_UUCUGAAAGG_AAGGGGGGCGGUCCCCCUCGACGAGAGUCGAAAGAGACCGCAA_________________CAUAUUAAAUUCUCCUAUACCAUAUUGA___CCCGGGGAAAGAGCGGAGGCAGU__UCUUGUUUU_\
) } def
/len { sequence length } bind def

/coor [
[113.84569550 261.17309570]
[110.64545441 275.95867920]
[103.03108978 289.03067017]
[91.74858093 299.10836792]
[77.90328217 305.20449829]
[62.85160446 306.72180176]
[48.06816483 303.51165771]
[35.00128937 295.88854980]
[24.93114281 284.59927368]
[18.84428978 270.74990845]
[17.33706093 255.69720459]
[20.55711937 240.91592407]
[28.18899727 227.85415649]
[39.48499680 217.79158020]
[53.33845520 211.71400452]
[68.39215088 210.21687317]
[71.57514954 195.55847168]
[74.75815582 180.90008545]
[77.94115448 166.24168396]
[81.12415314 151.58329773]
[84.30715179 136.92489624]
[87.49015045 122.26650238]
[90.67314911 107.60810852]
[93.61463165 92.89934540]
[96.31378937 78.14419556]
[94.77851868 69.12202454]
[99.18058777 63.16941833]
[102.12207031 48.46065521]
[105.06354523 33.75189209]
[108.00502014 19.04312897]
[93.43622589 15.46234226]
[79.03748322 11.24948120]
[64.83621216 6.41256523]
[50.85944366 0.96080136]
[37.13377762 -5.09543276]
[23.68534470 -11.74460793]
[10.53974438 -18.97406769]
[-2.27799845 -26.77005196]
[-14.74348545 -35.11771774]
[-26.83298683 -44.00117493]
[-38.52349091 -53.40351486]
[-49.79274368 -63.30683899]
[-60.61929321 -73.69229889]
[-70.98252869 -84.54011536]
[-80.86272430 -95.82965088]
[-90.24107361 -107.53940582]
[-99.09973145 -119.64709473]
[-107.42182159 -132.12966919]
[-115.19150543 -144.96337891]
[-122.39399719 -158.12376404]
[-129.01557922 -171.58580017]
[-135.04365540 -185.32386780]
[-140.46675110 -199.31178284]
[-145.27455139 -213.52293396]
[-149.45787048 -227.93028259]
[-153.00878906 -242.50639343]
[-155.92051697 -257.22351074]
[-158.18751526 -272.05364990]
[-159.80548096 -286.96853638]
[-160.77131653 -301.93981934]
[-161.08320618 -316.93896484]
[-160.74053955 -331.93743896]
[-159.74397278 -346.90670776]
[-158.09541321 -361.81823730]
[-155.79797363 -376.64367676]
[-152.85606384 -391.35479736]
[-149.27523804 -405.92358398]
[-145.06236267 -420.32232666]
[-140.22541809 -434.52359009]
[-134.77363586 -448.50036621]
[-128.71737671 -462.22601318]
[-122.06817627 -475.67443848]
[-114.83869171 -488.82000732]
[-107.04268646 -501.63775635]
[-98.69499969 -514.10321045]
[-89.81151581 -526.19268799]
[-80.40915680 -537.88317871]
[-70.50581360 -549.15240479]
[-60.12033844 -559.97894287]
[-49.27249908 -570.34216309]
[-37.98294830 -580.22235107]
[-26.27317619 -589.60070801]
[-14.16546917 -598.45928955]
[-1.68287873 -606.78137207]
[11.15083504 -614.55102539]
[24.31124306 -621.75354004]
[37.77329254 -628.37506104]
[51.51135635 -634.40313721]
[65.49928284 -639.82623291]
[79.71045685 -644.63397217]
[94.11780548 -648.81726074]
[108.69392395 -652.36816406]
[123.41104889 -655.27984619]
[138.24118042 -657.54681396]
[153.15608215 -659.16479492]
[168.12734985 -660.13061523]
[183.12651062 -660.44244385]
[198.12498474 -660.09973145]
[213.09423828 -659.10314941]
[228.00578308 -657.45458984]
[242.83122253 -655.15710449]
[257.54232788 -652.21514893]
[272.11111450 -648.63433838]
[286.50985718 -644.42144775]
[300.71109009 -639.58447266]
[314.68783569 -634.13262939]
[328.41348267 -628.07635498]
[341.86190796 -621.42712402]
[355.00747681 -614.19763184]
[367.82519531 -606.40161133]
[380.29064941 -598.05389404]
[392.38012695 -589.17041016]
[404.07058716 -579.76800537]
[415.33981323 -569.86462402]
[426.16632080 -559.47918701]
[436.52951050 -548.63128662]
[446.40966797 -537.34173584]
[455.78799438 -525.63195801]
[464.64660645 -513.52423096]
[472.96865845 -501.04162598]
[480.73828125 -488.20788574]
[487.94073486 -475.04748535]
[494.56228638 -461.58541870]
[500.59030151 -447.84732056]
[506.01336670 -433.85940552]
[510.82110596 -419.64822388]
[515.00439453 -405.24084473]
[518.55523682 -390.66473389]
[521.46691895 -375.94760132]
[523.73382568 -361.11746216]
[525.35174561 -346.20257568]
[526.31756592 -331.23129272]
[526.62939453 -316.23214722]
[526.28668213 -301.23367310]
[525.29003906 -286.26440430]
[523.64141846 -271.35287476]
[521.34393311 -256.52743530]
[518.40197754 -241.81632996]
[514.82110596 -227.24754333]
[510.60818481 -212.84883118]
[505.77117920 -198.64758301]
[500.31936646 -184.67083740]
[494.26306152 -170.94520569]
[487.61380005 -157.49681091]
[480.38427734 -144.35124207]
[472.58822632 -131.53353882]
[464.24050903 -119.06809998]
[455.35696411 -106.97864532]
[445.95455933 -95.28819275]
[436.05117798 -84.01898956]
[425.66567993 -73.19249725]
[414.81781006 -62.82931519]
[403.52822876 -52.94917679]
[391.81842041 -43.57088852]
[379.71066284 -34.71229935]
[367.22805786 -26.39027596]
[354.39431763 -18.62065697]
[341.23388672 -11.41823483]
[327.77182007 -4.79671764]
[314.03372192 1.23128939]
[300.04577637 6.65431166]
[285.83459473 11.46202564]
[271.42721558 15.64527988]
[256.85110474 19.19611168]
[242.13395691 22.10776138]
[227.30381775 24.37468719]
[212.38891602 25.99257088]
[197.41763306 26.95833778]
[182.41848755 27.27014542]
[167.41999817 26.92740059]
[152.45074463 25.93075943]
[137.53921509 24.28211403]
[122.71378326 21.98460579]
[119.77230835 36.69337082]
[116.83083344 51.40213394]
[113.88935089 66.11089325]
[111.06893921 80.84335327]
[108.36978149 95.59850311]
[110.30465698 100.49374390]
[109.34931183 106.12392426]
[105.33154297 110.79110718]
[102.14854431 125.44950104]
[98.96554565 140.10789490]
[95.78254700 154.76629639]
[92.59954834 169.42468262]
[89.41654968 184.08308411]
[86.23354340 198.74147034]
[83.05054474 213.39987183]
[96.12762451 221.00547791]
[106.21289062 232.28121948]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 188]
[17 187]
[18 186]
[19 185]
[20 184]
[21 183]
[22 182]
[23 181]
[24 178]
[25 177]
[27 176]
[28 175]
[29 174]
[30 173]
] def

init

% Start Annotations
16 188 0.48 0.2 colorpair
17 187 0.32 0.2 colorpair
19 185 0.48 0.2 colorpair
20 184 0.16 0.2 colorpair
22 182 0.65 0.6 colorpair
28 175 0.32 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
16 188 2 gmark
16 cmark
188 cmark
17 187 2 gmark
17 cmark
187 cmark
18 186 3 gmark
18 cmark
186 cmark
19 185 2 gmark
19 cmark
185 cmark
20 184 2 gmark
20 cmark
184 cmark
21 183 3 gmark
21 cmark
183 cmark
22 182 1 gmark
22 cmark
182 cmark
23 181 5 gmark
23 cmark
24 178 5 gmark
24 cmark
25 177 3 gmark
25 cmark
177 cmark
27 176 4 gmark
176 cmark
28 cmark
175 cmark
29 174 5 gmark
29 cmark
174 cmark
30 173 4 gmark
30 cmark
173 cmark

% End Annotations
showpage
end
%%EOF
