%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.5.1
%%CreationDate: Thu Dec 14 17:56:11 2023
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
-YHDWRWWWBBKHWKSWRMWWWHKKKWHVDWAUGRAKMRRWWGRaagSWHKDWDKHVSKRSVKRVRGGMSSHsgDWSSVRBCBYMCWDCSRkkCKDKSRVrrR--------kurMSRMCMCCCYCYG-WaaUGUKWAWWRDDWYRKgGcWWRVWHBMMRYMKMADRYYYCCacc-\
) } def
/len { sequence length } bind def

/coor [
[100.66913605 436.51040649]
[86.85134888 436.25411987]
[73.05574036 435.43063354]
[59.30557632 434.04141235]
[45.62405014 432.08880615]
[32.03423691 429.57604980]
[18.55905914 426.50741577]
[5.22124434 422.88806152]
[-7.95671034 418.72412109]
[-20.95257950 414.02258301]
[-33.74444199 408.79141235]
[-46.31072235 403.03939819]
[-58.63022614 396.77627563]
[-70.68217468 390.01260376]
[-82.44624329 382.75976562]
[-93.90258789 375.02999878]
[-105.03187561 366.83636475]
[-115.81535339 358.19265747]
[-126.23481750 349.11346436]
[-136.27270508 339.61410522]
[-145.91207886 329.71060181]
[-155.13668823 319.41964722]
[-163.93095398 308.75860596]
[-172.28007507 297.74548340]
[-180.16993713 286.39880371]
[-187.58726501 274.73773193]
[-194.51951599 262.78195190]
[-200.95501709 250.55162048]
[-206.88290405 238.06735229]
[-212.29319763 225.35020447]
[-217.17674255 212.42163086]
[-221.52532959 199.30345154]
[-225.33160400 186.01777649]
[-228.58915710 172.58702087]
[-231.29249573 159.03382874]
[-233.43705750 145.38107300]
[-235.01921082 131.65176392]
[-236.03631592 117.86907959]
[-236.48663330 104.05625153]
[-236.36941528 90.23658752]
[-235.68486023 76.43338776]
[-234.43411255 62.66993713]
[-232.61929321 48.96944809]
[-230.24345398 35.35503006]
[-227.31060791 21.84964943]
[-223.82569885 8.47607994]
[-219.79460144 -4.74311972]
[-215.22412109 -17.78565407]
[-210.12197876 -30.62952232]
[-204.49674988 -43.25306320]
[-198.35794067 -55.63498688]
[-191.71591187 -67.75440216]
[-184.58184814 -79.59088135]
[-176.96778870 -91.12444305]
[-168.88658142 -102.33564758]
[-160.35186768 -113.20558167]
[-151.37800598 -123.71590424]
[-141.98016357 -133.84889221]
[-132.17419434 -143.58746338]
[-121.97661591 -152.91519165]
[-111.40464020 -161.81632996]
[-100.47609711 -170.27586365]
[-89.20941925 -178.27954102]
[-77.62360382 -185.81385803]
[-65.73820496 -192.86610413]
[-53.57325745 -199.42439270]
[-41.14928436 -205.47764587]
[-47.13597870 -219.23117065]
[-53.12266922 -232.98469543]
[-59.10935974 -246.73822021]
[-65.09605408 -260.49176025]
[-71.08274841 -274.24526978]
[-86.26185608 -277.46615601]
[-96.62379456 -289.01647949]
[-98.18417358 -304.45492554]
[-90.34300232 -317.84503174]
[-76.11536407 -324.03811646]
[-60.97208405 -320.65274048]
[-50.73605728 -308.99069214]
[-49.34325027 -293.53625488]
[-57.32921600 -280.23196411]
[-51.34252548 -266.47845459]
[-45.35583496 -252.72491455]
[-39.36914062 -238.97138977]
[-33.38245010 -225.21786499]
[-27.39575768 -211.46434021]
[-10.62774754 -217.80688477]
[6.45424318 -223.24743652]
[23.80173302 -227.77055359]
[41.36548615 -231.36340332]
[59.09565353 -234.01577759]
[76.94191742 -235.72016907]
[94.85362244 -236.47172546]
[112.77993774 -236.26832581]
[130.66996765 -235.11051941]
[148.47296143 -233.00161743]
[166.13838196 -229.94760132]
[183.61608887 -225.95713806]
[200.85647583 -221.04154968]
[217.81062317 -215.21479797]
[234.43038940 -208.49340820]
[250.66864014 -200.89645386]
[266.47924805 -192.44549561]
[281.81735229 -183.16453552]
[296.63943481 -173.07991028]
[310.90344238 -162.22023010]
[324.56884766 -150.61633301]
[337.59689331 -138.30113220]
[349.95059204 -125.30959320]
[361.59487915 -111.67858124]
[372.49673462 -97.44680023]
[382.62518311 -82.65462494]
[391.95150757 -67.34403992]
[400.44921875 -51.55850983]
[408.09417725 -35.34282684]
[414.86474609 -18.74301720]
[420.74166870 -1.80619609]
[425.70825195 15.41956902]
[429.75042725 32.88538742]
[444.51208496 30.22209167]
[459.27374268 27.55879211]
[463.80642700 12.93984890]
[474.62185669 2.11004233]
[489.23477173 -2.44201541]
[504.28723145 0.32970446]
[516.32025146 9.78828144]
[522.56878662 23.76020241]
[521.59692383 39.03482437]
[513.62799072 52.10214996]
[500.49322510 59.95940399]
[485.21087646 60.80104446]
[471.29272461 54.43367386]
[461.93704224 42.32046127]
[447.17538452 44.98375702]
[432.41372681 47.64705658]
[434.28302002 61.34021759]
[435.58847046 75.09858704]
[436.32794189 88.89895630]
[436.50012207 102.71804810]
[436.10473633 116.53255463]
[435.14245605 130.31918335]
[433.61489868 144.05465698]
[431.52465820 157.71583557]
[428.87524414 171.27967834]
[425.67111206 184.72328186]
[421.91769409 198.02398682]
[417.62133789 211.15936279]
[412.78921509 224.10725403]
[407.42956543 236.84580994]
[401.55136108 249.35356140]
[395.16455078 261.60940552]
[388.27990723 273.59265137]
[380.90902710 285.28311157]
[373.06433105 296.66107178]
[364.75909424 307.70733643]
[356.00726318 318.40325928]
[346.82366943 328.73080444]
[337.22375488 338.67257690]
[327.22372437 348.21179199]
[316.84045410 357.33233643]
[306.09143066 366.01885986]
[294.99481201 374.25668335]
[283.56930542 382.03195190]
[271.83416748 389.33151245]
[259.80923462 396.14306641]
[247.51472473 402.45513916]
[234.97142029 408.25708008]
[222.20045471 413.53909302]
[209.22338867 418.29226685]
[196.06210327 422.50857544]
[182.73878479 426.18093872]
[169.27592468 429.30313110]
[155.69621277 431.86990356]
[142.02255249 433.87695312]
[128.27801514 435.32083130]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 86]
[68 85]
[69 84]
[70 83]
[71 82]
[72 81]
[119 135]
[120 134]
[121 133]
] def

init

% Start Annotations
67 86 0.32 0.2 colorpair
119 135 0.0 0.2 colorpair
121 133 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
67 86 2 gmark
67 cmark
86 cmark
68 85 5 gmark
68 cmark
85 cmark
69 84 5 gmark
69 cmark
84 cmark
70 83 5 gmark
70 cmark
83 cmark
71 82 5 gmark
71 cmark
82 cmark
72 81 5 gmark
72 cmark
81 cmark
119 135 2 gmark
120 134 3 gmark
121 cmark

% End Annotations
showpage
end
%%EOF
