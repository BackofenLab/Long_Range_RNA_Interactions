%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.5.1
%%CreationDate: Tue Dec 19 16:54:49 2023
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAACGACAACCAACUCGAUCUAAAGAAAAUG___AAAAAUAAAAGGAAAAACACCCAUAAAAAGGGUGCAAAAAAAAAAAAGAAAAAUCC___AAGCAAAA_______U_UGCCUAAAUUUC_CAAUACGGCGGCAUGGGUGAAUAACCAAGCCAGAAAAGAUUCAGAU_\
) } def
/len { sequence length } bind def

/coor [
[80.90428925 364.71002197]
[75.10176086 350.85308838]
[71.19801331 336.34640503]
[69.26271820 321.44882202]
[69.33041382 306.42620850]
[71.39987946 291.54666138]
[75.43419647 277.07574463]
[81.36135864 263.27166748]
[89.07559204 250.38082886]
[98.43923187 238.63323975]
[109.28517151 228.23857117]
[121.41984558 219.38232422]
[134.62669373 212.22254944]
[129.29783630 198.20103455]
[123.96896362 184.17950439]
[118.64009857 170.15797424]
[113.31123352 156.13645935]
[107.98236084 142.11492920]
[102.65349579 128.09339905]
[97.32462311 114.07187653]
[86.61042786 105.08869171]
[88.65384674 91.25698853]
[83.32498169 77.23546600]
[77.99610901 63.21393967]
[72.66724396 49.19241333]
[67.33837891 35.17088699]
[62.00951004 21.14936256]
[56.55355072 7.17680025]
[50.97095108 -6.74564886]
[45.38835144 -20.66809845]
[39.80575562 -34.59054565]
[34.22315598 -48.51299667]
[19.93566704 -43.92424774]
[5.36008310 -40.35475540]
[-9.43098354 -37.82230759]
[-24.36384201 -36.33951950]
[-39.36409760 -35.91378021]
[-54.35701752 -36.54720688]
[-69.26791382 -38.23664856]
[-84.02249146 -40.97368240]
[-98.54724121 -44.74467468]
[-112.76981354 -49.53084183]
[-126.61934662 -55.30833817]
[-140.02684021 -62.04837799]
[-152.92549133 -69.71738434]
[-165.25105286 -78.27714539]
[-176.94210815 -87.68502045]
[-187.94041443 -97.89414215]
[-198.19117737 -108.85364532]
[-207.64334106 -120.50892639]
[-216.24980164 -132.80192566]
[-223.96766663 -145.67140198]
[-230.75852966 -159.05322266]
[-236.58851624 -172.88073730]
[-241.42858887 -187.08505249]
[-245.25465393 -201.59539795]
[-248.04763794 -216.33949280]
[-249.79364014 -231.24386597]
[-250.48393250 -246.23426819]
[-250.11509705 -261.23602295]
[-248.68896484 -276.17440796]
[-246.21264648 -290.97497559]
[-242.69847107 -305.56399536]
[-238.16395569 -319.86877441]
[-232.63166809 -333.81808472]
[-226.12921143 -347.34237671]
[-218.68894958 -360.37432861]
[-210.34794617 -372.84896851]
[-201.14778137 -384.70416260]
[-191.13427734 -395.88085938]
[-180.35731506 -406.32339478]
[-168.87059021 -415.97967529]
[-156.73133850 -424.80166626]
[-144.00001526 -432.74536133]
[-130.74006653 -439.77124023]
[-117.01755524 -445.84423828]
[-102.90084076 -450.93417358]
[-88.46024323 -455.01562500]
[-73.76772308 -458.06826782]
[-58.89646530 -460.07690430]
[-43.92056656 -461.03155518]
[-28.91463089 -460.92742920]
[-13.95342159 -459.76504517]
[0.88852692 -457.55020142]
[15.53727055 -454.29394531]
[29.91983032 -450.01248169]
[43.96455002 -444.72714233]
[57.60146332 -438.46429443]
[70.76262665 -431.25506592]
[83.38247681 -423.13543701]
[95.39813232 -414.14584351]
[106.74974060 -404.33105469]
[117.38074493 -393.73999023]
[127.23818207 -382.42541504]
[136.27293396 -370.44366455]
[144.44000244 -357.85446167]
[151.69869995 -344.72055054]
[158.01284790 -331.10729980]
[163.35099792 -317.08258057]
[167.68656921 -302.71621704]
[170.99794006 -288.07983398]
[173.26861572 -273.24633789]
[174.48730469 -258.28961182]
[174.64790344 -243.28416443]
[173.74964905 -228.30477905]
[171.79698181 -213.42607117]
[168.79965210 -198.72215271]
[164.77258301 -184.26631165]
[159.73583984 -170.13053894]
[153.71450806 -156.38525391]
[146.73860168 -143.09896851]
[138.84286499 -130.33784485]
[130.06663513 -118.16546631]
[120.45364380 -106.64247894]
[110.05176544 -95.82628632]
[98.91283417 -85.77078247]
[87.09234619 -76.52606201]
[74.64918518 -68.13817596]
[61.64533997 -60.64891815]
[48.14560318 -54.09559631]
[53.72820282 -40.17314529]
[59.31080246 -26.25069618]
[64.89340210 -12.32824802]
[70.47599792 1.59420109]
[75.90334320 6.65036917]
[76.03103638 15.82049561]
[81.35990143 29.84202003]
[86.68876648 43.86354446]
[92.01763916 57.88507080]
[97.34650421 71.90659332]
[102.67537689 85.92812347]
[113.38957214 94.91130829]
[111.34615326 108.74301147]
[116.67501831 122.76453400]
[122.00389099 136.78605652]
[127.33275604 150.80758667]
[132.66162109 164.82911682]
[137.99049377 178.85063171]
[143.31935120 192.87216187]
[148.64822388 206.89369202]
[163.27674866 203.47465515]
[178.23046875 202.03598022]
[193.24250793 202.60334778]
[208.04498291 205.16662598]
[222.37370300 209.68006897]
[235.97296143 216.06312561]
[248.60006714 224.20188904]
[260.02969360 233.95112610]
[270.05783081 245.13682556]
[278.50552368 257.55938721]
[285.22201538 270.99710083]
[290.08746338 285.21014404]
[293.01501465 299.94488525]
[293.95242310 314.93838501]
[292.88296509 329.92303467]
[289.82574463 344.63143921]
[284.83529663 358.80105591]
[278.00067139 372.17910767]
[269.44387817 384.52676392]
[259.31759644 395.62368774]
[247.80255127 405.27185059]
[235.10424805 413.29907227]
[221.44927979 419.56210327]
[207.08135986 423.94915771]
[192.25688171 426.38192749]
[177.24043274 426.81704712]
[162.29995728 425.24670410]
[147.70211792 421.69894409]
[133.70742798 416.23706055]
[120.56563568 408.95858765]
[108.51126099 399.99334717]
[97.75943756 389.50134277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 140]
[14 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[22 131]
[23 130]
[24 129]
[25 128]
[26 127]
[27 126]
[28 124]
[29 123]
[30 122]
[31 121]
[32 120]
] def

init

% Start Annotations
13 140 0.0 0.6 colorpair
14 139 0.32 1 colorpair
15 138 0.32 1 colorpair
16 137 0.16 0.6 colorpair
17 136 0.0 0.6 colorpair
18 135 0.16 0.6 colorpair
19 134 0.32 1 colorpair
20 133 0.32 1 colorpair
22 131 0.16 0.6 colorpair
23 130 0.16 0.6 colorpair
24 129 0.32 1 colorpair
25 128 0.16 0.6 colorpair
26 127 0.16 0.6 colorpair
27 126 0.16 1 colorpair
28 124 0.32 1 colorpair
29 123 0.16 0.6 colorpair
30 122 0.16 1 colorpair
31 121 0.0 0.6 colorpair
32 120 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
13 140 1 gmark
14 cmark
139 cmark
15 cmark
138 cmark
16 137 1 gmark
16 cmark
137 cmark
17 136 1 gmark
18 135 1 gmark
18 cmark
19 cmark
134 cmark
20 cmark
133 cmark
22 131 1 gmark
22 cmark
131 cmark
23 130 1 gmark
130 cmark
24 cmark
129 cmark
25 128 1 gmark
25 cmark
128 cmark
26 127 1 gmark
26 cmark
127 cmark
27 cmark
126 cmark
28 cmark
124 cmark
29 123 1 gmark
29 cmark
123 cmark
30 cmark
31 121 1 gmark
32 120 1 gmark

% End Annotations
showpage
end
%%EOF
