%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Jan 25 15:58:24 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAACGACAACCAACUCGAUCUAAAGAAAAUGAAAAAAAGUAA_ACGAAAAACACGAAUAAAAAGAGUCCAAAAAAAAAAA_AGAAUACUAAAAGCAAAA_______U_UGCCUAAAUUUC_CAAUACGGCGGCAUGGGUGAUAAACCACGGCCACAAAGGUCACGG__\
) } def
/len { sequence length } bind def

/coor [
[133.19467163 246.04649353]
[129.64611816 231.47227478]
[126.09755707 216.89805603]
[115.56898499 206.36247253]
[119.82194519 191.12361145]
[116.27339172 176.54939270]
[112.72483826 161.97518921]
[109.17627716 147.40097046]
[104.69855499 133.08489990]
[99.31018066 119.08612823]
[86.11088562 113.10910797]
[80.90587616 99.58674622]
[86.69106293 86.30224609]
[81.30268097 72.30348969]
[75.91429901 58.30472565]
[70.52591705 44.30596161]
[65.13753510 30.30719948]
[59.74915695 16.30843735]
[54.36077499 2.30967402]
[48.97239304 -11.68908882]
[36.79418182 -21.78867722]
[39.44306183 -36.44584656]
[34.05468369 -50.44461060]
[28.66630173 -64.44337463]
[23.27792168 -78.44213867]
[17.88954163 -92.44089508]
[12.50115967 -106.43965912]
[6.98441648 -120.38833618]
[1.33977616 -134.28575134]
[-4.30486441 -148.18315125]
[-9.94950485 -162.08056641]
[-15.59414577 -175.97798157]
[-29.86883163 -171.34860229]
[-44.44035339 -167.76133728]
[-59.23273849 -165.23486328]
[-74.16886902 -163.78237915]
[-89.17087555 -163.41143799]
[-104.16053772 -164.12397766]
[-119.05971527 -165.91629028]
[-133.79072571 -168.77902222]
[-148.27674866 -172.69725037]
[-162.44229126 -177.65055847]
[-176.21348572 -183.61311340]
[-189.51853943 -190.55383301]
[-202.28807068 -198.43650818]
[-214.45552063 -207.22007751]
[-225.95744324 -216.85871887]
[-236.73387146 -227.30220032]
[-246.72863770 -238.49606323]
[-255.88961792 -250.38194275]
[-264.16903687 -262.89788818]
[-271.52377319 -275.97860718]
[-277.91543579 -289.55596924]
[-283.31072998 -303.55914307]
[-287.68151855 -317.91510010]
[-291.00500488 -332.54904175]
[-293.26388550 -347.38464355]
[-294.44638062 -362.34457397]
[-294.54626465 -377.35083008]
[-293.56311035 -392.32519531]
[-291.50198364 -407.18954468]
[-288.37362671 -421.86645508]
[-284.19439697 -436.27935791]
[-278.98602295 -450.35311890]
[-272.77572632 -464.01437378]
[-265.59582520 -477.19186401]
[-257.48376465 -489.81695557]
[-248.48187256 -501.82376099]
[-238.63705444 -513.14971924]
[-228.00062561 -523.73577881]
[-216.62806702 -533.52667236]
[-204.57865906 -542.47149658]
[-191.91520691 -550.52349854]
[-178.70376587 -557.64074707]
[-165.01318359 -563.78619385]
[-150.91485596 -568.92767334]
[-136.48228455 -573.03845215]
[-121.79070282 -576.09704590]
[-106.91670990 -578.08758545]
[-91.93786621 -578.99969482]
[-76.93225098 -578.82855225]
[-61.97810364 -577.57501221]
[-47.15338516 -575.24578857]
[-32.53538895 -571.85284424]
[-18.20032883 -567.41394043]
[-4.22293711 -561.95220947]
[9.32391167 -555.49615479]
[22.36958885 -548.07946777]
[34.84608078 -539.74066162]
[46.68834305 -530.52337646]
[57.83462906 -520.47558594]
[68.22682953 -509.64968872]
[77.81076050 -498.10214233]
[86.53646088 -485.89312744]
[94.35843658 -473.08633423]
[101.23590851 -459.74847412]
[107.13301849 -445.94912720]
[112.01902008 -431.76025391]
[115.86843872 -417.25576782]
[118.66120911 -402.51135254]
[120.38276672 -387.60382080]
[121.02413940 -372.61096191]
[120.58198547 -357.61087036]
[119.05860901 -342.68179321]
[116.46194458 -327.90158081]
[112.80553436 -313.34725952]
[108.10844421 -299.09469604]
[102.39516449 -285.21823120]
[95.69548035 -271.79022217]
[88.04431152 -258.88061523]
[79.48155975 -246.55679321]
[70.05186462 -234.88294983]
[59.80438995 -223.91995239]
[48.79256058 -213.72499084]
[37.07378387 -204.35119629]
[24.70916367 -195.84744263]
[11.76315880 -188.25805664]
[-1.69673455 -181.62261963]
[3.94790602 -167.72520447]
[9.59254646 -153.82780457]
[15.23718739 -139.93038940]
[20.88182831 -126.03297424]
[26.33299446 -120.99991608]
[26.49992180 -111.82804108]
[31.88830376 -97.82927704]
[37.27668381 -83.83051300]
[42.66506577 -69.83175659]
[48.05344391 -55.83299255]
[53.44182587 -41.83422852]
[65.23462677 -32.73592758]
[62.97115707 -17.07746887]
[68.35953522 -3.07870674]
[73.74791718 10.92005634]
[79.13629913 24.91881752]
[84.52468109 38.91757965]
[89.91306305 52.91634369]
[95.30144501 66.91510773]
[100.68981934 80.91387177]
[113.88911438 86.89089203]
[119.09412384 100.41325378]
[113.30893707 113.69775391]
[118.69731903 127.69651031]
[124.96543884 114.06893921]
[138.45985413 107.51907349]
[153.04431152 111.02531433]
[162.08686829 122.99327850]
[161.47564697 137.98081970]
[151.48857117 149.17271423]
[136.66705322 151.47970581]
[123.75049591 143.85241699]
[127.29904938 158.42663574]
[130.84761047 173.00083923]
[134.39616394 187.57505798]
[145.17854309 199.15309143]
[140.67176819 213.34950256]
[144.22032166 227.92372131]
[147.76889038 242.49794006]
[162.79556274 244.79301453]
[175.79751587 252.66813660]
[184.79206848 264.92239380]
[188.40757751 279.68707275]
[186.09272766 294.71072388]
[178.20051575 307.70233154]
[165.93444824 316.68072510]
[151.16499329 320.27682495]
[136.14440918 317.94223022]
[123.16321564 310.03292847]
[114.20095062 297.75506592]
[110.62429047 282.98089600]
[112.97865295 267.96337891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 157]
[2 156]
[3 155]
[5 153]
[6 152]
[7 151]
[8 150]
[9 142]
[10 141]
[13 138]
[14 137]
[15 136]
[16 135]
[17 134]
[18 133]
[19 132]
[20 131]
[22 129]
[23 128]
[24 127]
[25 126]
[26 125]
[27 124]
[28 122]
[29 121]
[30 120]
[31 119]
[32 118]
] def

init

% Start Annotations
1 157 0.16 0.6 colorpair
2 156 0.16 0.6 colorpair
3 155 0.16 1 colorpair
5 153 0.16 0.6 colorpair
6 152 0.16 0.6 colorpair
7 151 0.16 0.6 colorpair
8 150 0.16 0.6 colorpair
9 142 0.0 0.6 colorpair
10 141 0.0 0.6 colorpair
13 138 0.0 0.6 colorpair
14 137 0.32 1 colorpair
15 136 0.32 1 colorpair
16 135 0.16 0.6 colorpair
17 134 0.0 0.6 colorpair
18 133 0.16 0.6 colorpair
19 132 0.32 1 colorpair
20 131 0.32 1 colorpair
22 129 0.16 0.6 colorpair
23 128 0.16 0.6 colorpair
24 127 0.32 1 colorpair
25 126 0.16 0.6 colorpair
26 125 0.16 0.6 colorpair
27 124 0.16 1 colorpair
28 122 0.32 1 colorpair
29 121 0.16 0.6 colorpair
30 120 0.16 1 colorpair
31 119 0.0 0.6 colorpair
32 118 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 157 1 gmark
1 cmark
157 cmark
2 156 1 gmark
2 cmark
156 cmark
155 cmark
5 153 1 gmark
5 cmark
153 cmark
6 152 1 gmark
6 cmark
152 cmark
7 151 1 gmark
151 cmark
8 150 1 gmark
8 cmark
150 cmark
9 142 1 gmark
10 141 1 gmark
13 138 1 gmark
14 cmark
137 cmark
15 cmark
136 cmark
16 135 1 gmark
16 cmark
135 cmark
17 134 1 gmark
18 133 1 gmark
18 cmark
19 cmark
132 cmark
20 cmark
131 cmark
22 129 1 gmark
22 cmark
129 cmark
23 128 1 gmark
128 cmark
24 cmark
127 cmark
25 126 1 gmark
25 cmark
126 cmark
26 125 1 gmark
26 cmark
125 cmark
27 cmark
124 cmark
28 cmark
122 cmark
29 121 1 gmark
29 cmark
121 cmark
30 cmark
31 119 1 gmark
32 118 1 gmark

% End Annotations
showpage
end
%%EOF
