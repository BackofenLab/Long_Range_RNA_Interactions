%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.5.1
%%CreationDate: Fri Jan 19 13:15:47 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________GAACAGUUUUUUUGAAAAGAAAGA_UU_CCG_____AUGUCU___AAAAAACCAGGAAGGCCC___GGUAAAAACCGGGCUGUCAAUAUGCUAAAACGCGGAGUACCCCGCG_____________CAACCGAAAA_AAAAAACAGCAUAUUGACA_CCUGGGA__AAGACCAGGAGAU_CCUCUGCUCU__________________\
) } def
/len { sequence length } bind def

/coor [
[69.95478821 635.26782227]
[54.94295883 634.61541748]
[40.17678452 631.83312988]
[25.95689583 626.97766113]
[12.57278824 620.14788818]
[0.29694289 611.48272705]
[-10.62071800 601.15869141]
[-19.95792389 589.38598633]
[-27.52458382 576.40423584]
[-33.16664886 562.47766113]
[-36.76925278 547.88995361]
[-38.25905228 532.93798828]
[-37.60571671 517.92620850]
[-34.82254410 503.16018677]
[-29.96620369 488.94061279]
[-23.13555908 475.55691528]
[-14.46967411 463.28161621]
[-4.14497566 452.36459351]
[7.62833929 443.02810669]
[20.61058044 435.46224976]
[34.53744507 429.82104492]
[49.12540436 426.21936035]
[64.07746124 424.73046875]
[64.72873688 409.74462891]
[65.38002014 394.75875854]
[66.03129578 379.77291870]
[66.68257141 364.78704834]
[67.33384705 349.80120850]
[67.98513031 334.81536865]
[68.63640594 319.82949829]
[69.28768158 304.84365845]
[57.95826721 302.02239990]
[47.30041122 297.24444580]
[37.64923096 290.65832520]
[29.30849457 282.46942139]
[22.54105186 272.93365479]
[17.56056404 262.34930420]
[14.52474976 251.04795837]
[13.53039360 239.38381958]
[14.61026096 227.72283936]
[17.73201942 216.43110657]
[22.79920769 205.86343384]
[29.65421104 196.35211182]
[38.08316803 188.19656372]
[47.82264328 181.65386963]
[58.56784821 176.93063354]
[69.98220062 174.17654419]
[81.70783997 173.47953796]
[83.87187195 158.63645935]
[86.03590393 143.79338074]
[75.20560455 138.70521545]
[66.05558014 130.99406433]
[59.20590973 121.18250275]
[55.12079239 109.93543243]
[54.07706070 98.01505280]
[56.14545441 86.22919464]
[61.18579865 75.37655640]
[68.85651398 66.19261169]
[78.63777161 59.29973221]
[89.86672211 55.16504669]
[101.78237915 54.06875229]
[104.80185699 39.37580490]
[107.82133484 24.68285561]
[110.84081268 9.98990631]
[113.86029053 -4.70304298]
[104.59226227 7.09118080]
[92.81359863 16.37896729]
[79.18313599 22.64079857]
[64.46331024 25.52640915]
[49.47748566 24.87439537]
[35.06391144 20.72122574]
[22.02881622 13.29921150]
[11.10133076 3.02350807]
[2.89269376 -9.53110409]
[-2.13793898 -23.66237068]
[-3.70917511 -38.57985306]
[-1.73312593 -53.44912338]
[3.67967677 -67.43846130]
[12.22646332 -79.76535797]
[23.42916107 -89.74030304]
[36.66114044 -96.80534363]
[51.18225861 -100.56527710]
[66.18026733 -100.80979919]
[80.81623840 -97.52523041]
[94.27149200 -90.89529419]
[105.79341125 -81.29084778]
[114.73749542 -69.24911499]
[120.60345459 -55.44366074]
[123.06317139 -40.64670944]
[121.97929382 -25.68712807]
[129.63546753 -38.58608246]
[137.29164124 -51.48503494]
[144.94781494 -64.38398743]
[152.60398865 -77.28294373]
[160.26016235 -90.18190002]
[167.91632080 -103.08085632]
[175.57249451 -115.97980499]
[183.22866821 -128.87875366]
[190.88484192 -141.77770996]
[198.54101562 -154.67666626]
[206.19718933 -167.57562256]
[194.27949524 -176.71372986]
[183.52626038 -187.19725037]
[174.08847046 -198.87904358]
[166.09858704 -211.59510803]
[159.66879272 -225.16691589]
[154.88934326 -239.40396118]
[151.82733154 -254.10635376]
[150.52577209 -269.06771851]
[151.00289917 -284.07800293]
[153.25202942 -298.92648315]
[157.24160767 -313.40475464]
[162.91558838 -327.30950928]
[170.19435120 -340.44555664]
[178.97569275 -352.62850952]
[189.13635254 -363.68731689]
[200.53367615 -373.46676636]
[213.00767517 -381.82949829]
[226.38322449 -388.65820312]
[240.47256470 -393.85696411]
[255.07789612 -397.35278320]
[269.99417114 -399.09661865]
[285.01199341 -399.06399536]
[299.92056274 -397.25534058]
[314.51055908 -393.69604492]
[328.57714844 -388.43609619]
[341.92291260 -381.54934692]
[354.36044312 -373.13244629]
[365.71514893 -363.30355835]
[375.82763672 -352.20068359]
[384.55593872 -339.97967529]
[391.77755737 -326.81210327]
[397.39105225 -312.88284302]
[401.31765747 -298.38739014]
[403.50222778 -283.52923584]
[403.91409302 -268.51702881]
[402.54751587 -253.56146240]
[399.42163086 -238.87251282]
[394.58035278 -224.65638733]
[388.09161377 -211.11265564]
[380.04653931 -198.43144226]
[370.55807495 -186.79078674]
[359.75936890 -176.35409546]
[347.80206299 -167.26788330]
[334.85400391 -159.65969849]
[321.09698486 -153.63636780]
[306.72409058 -149.28245544]
[291.93713379 -146.65904236]
[276.94369507 -145.80300903]
[261.95422363 -146.72633362]
[247.17919922 -149.41606140]
[232.82600403 -153.83444214]
[219.09614563 -159.91944885]
[211.43997192 -147.02049255]
[203.78379822 -134.12153625]
[196.12762451 -121.22258759]
[188.47145081 -108.32363129]
[180.81527710 -95.42468262]
[173.15910339 -82.52572632]
[165.50292969 -69.62677002]
[157.84677124 -56.72781754]
[150.19059753 -43.82886124]
[142.53442383 -30.92990875]
[134.87825012 -18.03095436]
[135.13078308 -9.17403603]
[128.55323792 -1.68356538]
[125.53376007 13.00938416]
[122.51428223 27.70233345]
[119.49480438 42.39528275]
[116.47532654 57.08823013]
[131.67613220 66.69116211]
[142.03028870 81.39057159]
[145.95353699 98.93733978]
[142.84558105 116.64670563]
[133.18196106 131.80902100]
[118.44129181 142.10433960]
[100.87898254 145.95741272]
[98.71495056 160.80049133]
[96.55091858 175.64356995]
[113.66349792 182.89913940]
[128.08018494 194.61233521]
[138.67199707 209.85736084]
[144.61181641 227.43214417]
[145.43904114 245.95315552]
[141.09527588 263.96432495]
[131.92839050 280.05145264]
[118.66464996 292.95336914]
[102.35123444 301.66073608]
[84.27353668 305.49493408]
[83.62226105 320.48077393]
[82.97097778 335.46664429]
[82.31970215 350.45248413]
[81.66842651 365.43835449]
[81.01715088 380.42419434]
[80.36586761 395.41003418]
[79.71459198 410.39590454]
[79.06331635 425.38174438]
[93.82983398 428.16220093]
[108.05032349 433.01589966]
[121.43527985 439.84405518]
[133.71218872 448.50765991]
[144.63113403 458.83032227]
[153.96980286 470.60189819]
[161.53805542 483.58273315]
[167.18185425 497.50857544]
[170.78625488 512.09582520]
[172.27790833 527.04760742]
[171.62643433 542.05950928]
[168.84509277 556.82586670]
[163.99050903 571.04602051]
[157.16151428 584.43054199]
[148.49714661 596.70697021]
[138.17381287 607.62524414]
[126.40164948 616.96319580]
[113.42034149 624.53063965]
[99.49417114 630.17358398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 197]
[24 196]
[25 195]
[26 194]
[27 193]
[28 192]
[29 191]
[30 190]
[31 189]
[48 179]
[49 178]
[50 177]
[61 170]
[62 169]
[63 168]
[64 167]
[65 166]
[90 164]
[91 163]
[92 162]
[93 161]
[94 160]
[95 159]
[96 158]
[97 157]
[98 156]
[99 155]
[100 154]
[101 153]
] def

init

% Start Annotations
48 179 0.0 0.6 colorpair
92 162 0.0 1 colorpair
93 161 0.16 1 colorpair
94 160 0.16 1 colorpair
95 159 0.0 1 colorpair
96 158 0.0 1 colorpair
97 157 0.0 1 colorpair
98 156 0.0 1 colorpair
99 155 0.16 1 colorpair
100 154 0.32 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
23 197 10 gmark
23 cmark
197 cmark
24 196 6 gmark
24 cmark
196 cmark
25 195 5 gmark
25 cmark
195 cmark
26 194 9 gmark
26 cmark
194 cmark
27 193 14 gmark
27 cmark
193 cmark
28 192 3 gmark
28 cmark
192 cmark
29 191 4 gmark
29 cmark
191 cmark
30 190 7 gmark
30 cmark
190 cmark
31 189 12 gmark
31 cmark
189 cmark
48 179 1 gmark
49 178 12 gmark
49 cmark
178 cmark
50 177 13 gmark
50 cmark
177 cmark
61 170 10 gmark
61 cmark
62 169 8 gmark
62 cmark
169 cmark
63 168 3 gmark
63 cmark
168 cmark
64 167 10 gmark
64 cmark
167 cmark
65 166 9 gmark
65 cmark
166 cmark
90 164 12 gmark
90 cmark
164 cmark
91 163 8 gmark
93 cmark
94 cmark
160 cmark
99 cmark
155 cmark
100 154 1 gmark
100 cmark
154 cmark
101 153 3 gmark

% End Annotations
showpage
end
%%EOF
