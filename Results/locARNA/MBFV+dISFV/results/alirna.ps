%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Feb 15 17:10:52 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________AACACAGUUUGAACAGUUUUU_UUGAACAGAGGA_UUUUCU______AUGUCUA___AAAAACCAGGAAG______GCCCGGUAAAAACCGGGCUGUCAAUAUGCUAAAACGCGGAGUACCCCGCG_____________C_AACAACAAAC_AAAAACAGCAUAUUGACA_CCUGGGA__AAGACCGGGGAAUC__CUCUGUUCU__\
) } def
/len { sequence length } bind def

/coor [
[50.96746826 380.45181274]
[53.51013947 395.26837158]
[53.64299393 410.30096436]
[51.36260223 425.16018677]
[46.72802353 439.46112061]
[39.85930634 452.83334351]
[30.93436813 464.93054199]
[20.18438721 475.43930054]
[7.88781261 484.08743286]
[-5.63684511 490.65097046]
[-20.03926468 494.95983887]
[-34.94638824 496.90249634]
[-49.97208405 496.42855835]
[-64.72714996 493.55035400]
[-78.82939911 488.34240723]
[-91.91355133 480.93960571]
[-103.64068604 471.53375244]
[-113.70704651 460.36840820]
[-121.85189056 447.73284912]
[-127.86425018 433.95431519]
[-131.58837891 419.38973999]
[-132.92782593 404.41635132]
[-131.84790039 389.42202759]
[-128.37655640 374.79513550]
[-122.60372162 360.91455078]
[-114.67892456 348.13983154]
[-104.80744171 336.80184937]
[-93.24495697 327.19427490]
[-80.29097748 319.56600952]
[-66.28103638 314.11462402]
[-51.57802582 310.98129272]
[-36.56278992 310.24722290]
[-21.62425804 311.93139648]
[-7.14937639 315.99020386]
[-0.83745086 302.38287354]
[5.47447491 288.77554321]
[11.78640079 275.16821289]
[18.09832573 261.56088257]
[24.41025162 247.95353699]
[30.72217751 234.34620667]
[37.03410339 220.73886108]
[28.59124184 206.65827942]
[30.22277260 190.15466309]
[41.48269653 177.75361633]
[58.07885742 174.47702026]
[64.19313049 160.77973938]
[70.30740356 147.08244324]
[76.42167664 133.38516235]
[82.53594971 119.68787384]
[88.65022278 105.99058533]
[77.15084839 115.62201691]
[63.70185471 122.26464081]
[49.06438065 125.54251099]
[34.06685638 125.27011108]
[19.55807114 121.46285248]
[6.35916471 114.33621979]
[-4.78286028 104.29354858]
[-13.23741341 91.90321350]
[-18.52600288 77.86643982]
[-20.34931564 62.97767258]
[-18.60416031 48.07953644]
[-13.38930607 34.01520920]
[-4.99989080 21.58067131]
[6.08927965 11.47966766]
[19.25060463 4.28386879]
[33.73920822 0.40052852]
[48.73509979 0.04942719]
[63.38957214 3.25043559]
[76.87324524 9.82239056]
[88.42299652 19.39334679]
[97.38516235 31.42162704]
[103.25252533 45.22648621]
[105.69300842 60.02662277]
[104.56850433 74.98441315]
[99.94059753 89.25771332]
[110.35353088 78.46091461]
[104.64664459 70.50728607]
[100.11936188 61.83080292]
[96.86149597 52.60514832]
[94.93742371 43.01488495]
[94.38486481 33.25175476]
[95.21412659 23.51085091]
[97.40790558 13.98672009]
[100.92165375 4.86947441]
[105.68447876 -3.65900421]
[111.60058594 -11.42868900]
[118.55120087 -18.28480148]
[126.39692688 -24.09089279]
[134.98059082 -28.73155785]
[144.13035583 -32.11473465]
[153.66316223 -34.17352295]
[163.38841248 -34.86751175]
[173.11174011 -34.18357086]
[182.63896179 -32.13610840]
[191.77987671 -28.76674080]
[200.35212708 -24.14347839]
[208.18479919 -18.35933876]
[215.12185669 -11.53047180]
[227.37095642 -20.18838882]
[239.62005615 -28.84630585]
[251.86915588 -37.50422287]
[264.11825562 -46.16213989]
[270.92163086 -60.44585419]
[285.78076172 -61.47363281]
[298.02984619 -70.13154602]
[310.27896118 -78.78946686]
[322.52804565 -87.44738007]
[334.77716064 -96.10530090]
[347.02624512 -104.76321411]
[359.27536011 -113.42113495]
[371.52444458 -122.07904816]
[383.77355957 -130.73696899]
[396.02264404 -139.39488220]
[408.27175903 -148.05279541]
[420.52087402 -156.71072388]
[413.33444214 -169.89675903]
[407.72744751 -183.82795715]
[403.77572632 -198.31590271]
[401.53268433 -213.16464233]
[401.02871704 -228.17340088]
[402.27056885 -243.13916016]
[405.24151611 -257.85955811]
[409.90130615 -272.13552856]
[416.18698120 -285.77395630]
[424.01351929 -298.59042358]
[433.27505493 -310.41162109]
[443.84634399 -321.07763672]
[455.58444214 -330.44427490]
[468.33056641 -338.38482666]
[481.91238403 -344.79193115]
[496.14620972 -349.57888794]
[510.83950806 -352.68103027]
[525.79357910 -354.05636597]
[540.80627441 -353.68630981]
[555.67443848 -351.57583618]
[570.19702148 -347.75350952]
[584.17767334 -342.27102661]
[597.42730713 -335.20254517]
[609.76678467 -326.64361572]
[621.02911377 -316.71002197]
[631.06201172 -305.53607178]
[639.72985840 -293.27291870]
[646.91540527 -280.08639526]
[652.52148438 -266.15484619]
[656.47222900 -251.66662598]
[658.71429443 -236.81773376]
[659.21722412 -221.80894470]
[657.97436523 -206.84326172]
[655.00250244 -192.12306213]
[650.34173584 -177.84742737]
[644.05511475 -164.20941162]
[636.22772217 -151.39346313]
[626.96545410 -139.57289124]
[616.39343262 -128.90756226]
[604.65472412 -119.54171753]
[591.90802002 -111.60201263]
[578.32580566 -105.19582367]
[564.09167480 -100.40979004]
[549.39813232 -97.30863953]
[534.44396973 -95.93430328]
[519.43133545 -96.30537415]
[504.56329346 -98.41683197]
[490.04095459 -102.24011993]
[476.06063843 -107.72353363]
[462.81149292 -114.79291534]
[450.47262573 -123.35266113]
[439.21096802 -133.28701782]
[429.17877197 -144.46160889]
[416.92968750 -135.80369568]
[404.68057251 -127.14578247]
[392.43148804 -118.48786926]
[380.18237305 -109.82994843]
[367.93325806 -101.17203522]
[355.68417358 -92.51411438]
[343.43505859 -83.85620117]
[331.18597412 -75.19828033]
[318.93685913 -66.54036713]
[306.68777466 -57.88245010]
[294.43865967 -49.22453308]
[288.51141357 -35.56008911]
[272.77618408 -33.91303635]
[260.52706909 -25.25512123]
[248.27796936 -16.59720421]
[236.02886963 -7.93928766]
[223.77976990 0.71862888]
[231.05546570 20.26647949]
[232.14733887 41.10955429]
[226.94708252 61.33714294]
[215.92358398 79.09250641]
[200.08064270 92.74330902]
[180.86553955 101.03166199]
[160.03692627 103.19006348]
[139.50372314 99.01245880]
[121.15032959 88.87384796]
[110.73740387 99.67064667]
[102.34750366 112.10485840]
[96.23323059 125.80214691]
[90.11896515 139.49943542]
[84.00469208 153.19671631]
[77.89041901 166.89401245]
[71.77614594 180.59129333]
[79.52503204 191.98757935]
[80.62339783 205.61633301]
[74.89102173 217.91027832]
[63.92161942 225.70445251]
[50.64144135 227.05079651]
[44.32951355 240.65812683]
[38.01758957 254.26545715]
[31.70566177 267.87280273]
[25.39373589 281.48013306]
[19.08181000 295.08746338]
[12.76988506 308.69479370]
[6.45795918 322.30215454]
[18.90546608 330.73159790]
[29.83950424 341.04873657]
[38.97686005 352.98626709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 213]
[35 212]
[36 211]
[37 210]
[38 209]
[39 208]
[40 207]
[41 206]
[45 201]
[46 200]
[47 199]
[48 198]
[49 197]
[50 196]
[75 195]
[76 194]
[98 185]
[99 184]
[100 183]
[101 182]
[102 181]
[104 179]
[105 178]
[106 177]
[107 176]
[108 175]
[109 174]
[110 173]
[111 172]
[112 171]
[113 170]
[114 169]
[115 168]
] def

init

% Start Annotations
40 207 0.81 0.2 colorpair
99 184 0.0 0.6 colorpair
106 177 0.0 1 colorpair
107 176 0.16 1 colorpair
108 175 0.16 1 colorpair
109 174 0.0 1 colorpair
110 173 0.0 1 colorpair
111 172 0.0 1 colorpair
112 171 0.0 1 colorpair
113 170 0.16 1 colorpair
114 169 0.32 1 colorpair
115 168 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
34 213 11 gmark
34 cmark
213 cmark
35 212 8 gmark
35 cmark
212 cmark
36 211 7 gmark
36 cmark
211 cmark
37 210 7 gmark
37 cmark
210 cmark
38 209 9 gmark
38 cmark
209 cmark
39 208 9 gmark
39 cmark
208 cmark
40 207 2 gmark
40 cmark
207 cmark
41 206 7 gmark
41 cmark
206 cmark
45 201 10 gmark
45 cmark
201 cmark
46 200 7 gmark
46 cmark
200 cmark
47 199 8 gmark
47 cmark
199 cmark
48 198 10 gmark
48 cmark
198 cmark
49 197 13 gmark
49 cmark
50 196 10 gmark
50 cmark
196 cmark
75 195 10 gmark
195 cmark
76 194 9 gmark
98 185 10 gmark
98 cmark
99 184 1 gmark
100 183 9 gmark
100 cmark
183 cmark
101 182 3 gmark
101 cmark
182 cmark
102 181 10 gmark
181 cmark
104 179 6 gmark
104 cmark
179 cmark
105 178 8 gmark
107 cmark
108 cmark
175 cmark
113 cmark
170 cmark
114 cmark
169 cmark
115 168 2 gmark

% End Annotations
showpage
end
%%EOF
