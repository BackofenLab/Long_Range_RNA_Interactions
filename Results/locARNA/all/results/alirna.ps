%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Feb 15 17:09:43 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________AACACAUUUUGAACGGUUUUU_UUAGACAAAGAAGAUUACA_____________AUGACUA___AAAAACCAGGAAA________CCGGAAAAAGCCGGGGUGUCAAUAUGCUAAAACGCGGAGUGCCCCGCG_____________C_AAGCACAAAC_CCAAACAGCAUAUUGACA_CCGGGGA___AGACCAGAGGAUC__CUCUACCC____U__\
) } def
/len { sequence length } bind def

/coor [
[-58.18173218 632.93505859]
[-71.42481232 639.98437500]
[-84.96277618 646.44927979]
[-98.76985168 652.31756592]
[-112.81975555 657.57800293]
[-127.08574677 662.22058105]
[-141.54066467 666.23645020]
[-156.15699768 669.61798096]
[-170.90690613 672.35870361]
[-185.76234436 674.45349121]
[-200.69500732 675.89831543]
[-215.67648315 676.69036865]
[-230.67823792 676.82818604]
[-245.67173767 676.31152344]
[-260.62841797 675.14129639]
[-275.51983643 673.31982422]
[-290.31762695 670.85052490]
[-304.99362183 667.73809814]
[-319.51986694 663.98852539]
[-333.86874390 659.60882568]
[-348.01293945 654.60742188]
[-361.92550659 648.99383545]
[-375.57995605 642.77868652]
[-388.95031738 635.97393799]
[-402.01113892 628.59240723]
[-414.73754883 620.64819336]
[-427.10531616 612.15643311]
[-439.09091187 603.13323975]
[-450.67150879 593.59588623]
[-461.82507324 583.56243896]
[-472.53036499 573.05206299]
[-482.76702881 562.08465576]
[-492.51553345 550.68127441]
[-501.75735474 538.86346436]
[-510.47491455 526.65374756]
[-518.65155029 514.07543945]
[-526.27178955 501.15243530]
[-533.32110596 487.90936279]
[-539.78601074 474.37136841]
[-545.65423584 460.56430054]
[-550.91461182 446.51437378]
[-555.55718994 432.24838257]
[-559.57299805 417.79345703]
[-562.95452881 403.17712402]
[-565.69525146 388.42718506]
[-567.79003906 373.57174683]
[-569.23480225 358.63909912]
[-570.02679443 343.65762329]
[-570.16461182 328.65585327]
[-569.64794922 313.66235352]
[-568.47772217 298.70568848]
[-566.65618896 283.81427002]
[-564.18688965 269.01647949]
[-561.07440186 254.34049988]
[-557.32476807 239.81425476]
[-552.94506836 225.46537781]
[-547.94366455 211.32119751]
[-542.33001709 197.40864563]
[-536.11492920 183.75419617]
[-529.31005859 170.38385010]
[-521.92852783 157.32304382]
[-513.98431396 144.59664917]
[-505.49252319 132.22889709]
[-496.46932983 120.24331665]
[-486.93194580 108.66273499]
[-476.89846802 97.50918579]
[-466.38806152 86.80390930]
[-455.42068481 76.56727600]
[-444.01724243 66.81877899]
[-432.19940186 57.57697678]
[-419.98971558 48.85945511]
[-407.41137695 40.68280792]
[-394.48837280 33.06260300]
[-381.24526978 26.01334763]
[-367.70727539 19.54845619]
[-353.90017700 13.68023872]
[-339.85025024 8.41986465]
[-325.58425903 3.77734590]
[-311.12933350 -0.23847868]
[-296.51296997 -3.61996508]
[-281.76306152 -6.36067677]
[-266.90762329 -8.45539570]
[-251.97494507 -9.90013599]
[-236.99346924 -10.69214630]
[-221.99171448 -10.82991886]
[-206.99821472 -10.31319237]
[-192.04153442 -9.14295006]
[-177.15013123 -7.32141924]
[-162.35235596 -4.85206699]
[-147.67637634 -1.73959494]
[-133.15013123 2.01007295]
[-118.80126190 6.38979864]
[-104.65709686 11.39124489]
[-90.74455261 17.00489235]
[-77.09011841 23.22005272]
[-63.71977615 30.02489662]
[-50.65898514 37.40647125]
[-37.93260574 45.35072327]
[-25.56486511 53.84253311]
[-13.57930183 62.86573410]
[-1.99873292 72.40315247]
[9.15479660 82.43663025]
[19.86005592 92.94706726]
[30.09666824 103.91445923]
[39.84514236 115.31792450]
[49.08692932 127.13576508]
[61.29465866 118.41960907]
[73.50238800 109.70346069]
[85.71012115 100.98730469]
[91.67668915 88.34247589]
[105.57372284 86.80496216]
[117.78145599 78.08881378]
[129.98918152 69.37265778]
[142.19691467 60.65650558]
[154.40464783 51.94035339]
[166.61238098 43.22420120]
[178.82011414 34.50804901]
[191.02784729 25.79189873]
[203.23556519 17.07574654]
[215.44329834 8.35959435]
[227.65103149 -0.35655823]
[239.85876465 -9.07271004]
[232.60963440 -22.22438431]
[226.93635559 -36.12871933]
[222.91567993 -50.59767532]
[220.60197449 -65.43557739]
[220.02650452 -80.44174957]
[221.19709778 -95.41326904]
[224.09788513 -110.14764404]
[228.68965149 -124.44562531]
[234.91030884 -138.11383057]
[242.67570496 -150.96743774]
[251.88084412 -162.83259583]
[262.40121460 -173.54884338]
[274.09457397 -182.97126770]
[286.80276489 -190.97244263]
[300.35391235 -197.44413757]
[314.56475830 -202.29885864]
[329.24313354 -205.47093201]
[344.19049072 -206.91746521]
[359.20474243 -206.61889648]
[374.08279419 -204.57925415]
[388.62344360 -200.82614136]
[402.63006592 -195.41030884]
[415.91320801 -188.40498352]
[428.29324341 -179.90492249]
[439.60275269 -170.02507019]
[449.68878174 -158.89904785]
[458.41494751 -146.67730713]
[465.66320801 -133.52514648]
[471.33554077 -119.62043762]
[475.35525513 -105.15121460]
[477.66796875 -90.31315613]
[478.24243164 -75.30694580]
[477.07086182 -60.33550644]
[474.16906738 -45.60131836]
[469.57635498 -31.30364799]
[463.35479736 -17.63585091]
[455.58853149 -4.78276825]
[446.38259888 7.08177614]
[435.86151123 17.79732704]
[424.16751099 27.21896935]
[411.45880127 35.21928787]
[397.90722656 41.69008255]
[383.69604492 46.54384995]
[369.01748657 49.71494293]
[354.07000732 51.16048050]
[339.05578613 50.86090851]
[324.17785645 48.82028198]
[309.63745117 45.06619644]
[295.63122559 39.64942169]
[282.34854126 32.64321518]
[269.96905518 24.14232635]
[258.66021729 14.26172066]
[248.57492065 3.13502026]
[236.36718750 11.85117245]
[224.15945435 20.56732559]
[211.95172119 29.28347778]
[199.74398804 37.99962997]
[187.53627014 46.71578217]
[175.32853699 55.43193436]
[163.12080383 64.14808655]
[150.91307068 72.86423492]
[138.70533752 81.58039093]
[126.49761200 90.29653931]
[114.28987885 99.01269531]
[108.32331085 111.65752411]
[94.42627716 113.19503784]
[82.21854401 121.91118622]
[70.01081085 130.62733459]
[57.80308151 139.34349060]
[65.97978973 151.92178345]
[73.60006714 164.84475708]
[80.64939117 178.08782959]
[87.11434937 191.62577820]
[92.98264313 205.43284607]
[98.24308777 219.48274231]
[102.88568115 233.74871826]
[106.90158081 248.20362854]
[110.28314209 262.81994629]
[113.02393341 277.56985474]
[115.11872864 292.42529297]
[116.56355286 307.35794067]
[117.35563660 322.33941650]
[117.49349213 337.34118652]
[116.97683716 352.33468628]
[115.80667877 367.29138184]
[113.98522186 382.18280029]
[111.51594543 396.98059082]
[108.40355682 411.65658569]
[104.65396118 426.18283081]
[100.27430725 440.53173828]
[95.27294159 454.67593384]
[89.65936279 468.58850098]
[83.44427490 482.24295044]
[76.63950348 495.61334229]
[69.25799561 508.67416382]
[61.31380844 521.40057373]
[52.82206345 533.76837158]
[43.79892349 545.75396729]
[34.26156998 557.33459473]
[24.22815132 568.48815918]
[13.71776867 579.19348145]
[2.75043130 589.43017578]
[-8.65298557 599.17871094]
[-20.47077560 608.42053223]
[-32.68043900 617.13812256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[106 191]
[107 190]
[108 189]
[109 188]
[111 186]
[112 185]
[113 184]
[114 183]
[115 182]
[116 181]
[117 180]
[118 179]
[119 178]
[120 177]
[121 176]
[122 175]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
106 191 15 gmark
106 cmark
191 cmark
107 190 22 gmark
107 cmark
190 cmark
108 189 12 gmark
108 cmark
189 cmark
109 188 14 gmark
188 cmark
111 186 18 gmark
111 cmark
186 cmark
112 185 19 gmark
112 cmark
185 cmark
113 184 10 gmark
113 cmark
184 cmark
114 183 12 gmark
114 cmark
183 cmark
115 182 7 gmark
115 cmark
182 cmark
116 181 9 gmark
116 cmark
181 cmark
117 180 10 gmark
117 cmark
180 cmark
118 179 10 gmark
118 cmark
179 cmark
119 178 13 gmark
119 cmark
178 cmark
120 177 15 gmark
120 cmark
177 cmark
121 176 12 gmark
121 cmark
176 cmark
122 175 21 gmark

% End Annotations
showpage
end
%%EOF
