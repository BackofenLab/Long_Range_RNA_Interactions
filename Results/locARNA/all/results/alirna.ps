%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Jan 25 15:56:59 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____AGUUUGUUUAUGAAAACGAAAAUUGGCA______AUGACUAAAAAAA____CCAGGAAGACCCGGC__GGAAACCGGGUUGUCAAUAUGCUAAAACGCGGAGUACC__CCG_______________CAACCCAACA_CCACAACAGCAUAUUGACA_CCUGGGA__AAGACCA_GAGGAUCCUCUGCUCCCC\
) } def
/len { sequence length } bind def

/coor [
[214.69689941 375.49310303]
[200.71008301 380.90798950]
[186.46887207 385.61331177]
[172.00921631 389.59713745]
[157.36767578 392.84939575]
[142.58120728 395.36190796]
[127.68717957 397.12832642]
[112.72321320 398.14416504]
[97.72710419 398.40686035]
[82.73674011 397.91577148]
[67.78997803 396.67208862]
[52.92458725 394.67901611]
[38.17811203 391.94155884]
[23.58780289 388.46664429]
[9.19051838 384.26300049]
[-4.97737455 379.34130859]
[-18.88008690 373.71398926]
[-32.48249817 367.39523315]
[-45.75024414 360.40100098]
[-58.64981842 352.74899292]
[-71.14862823 344.45852661]
[-83.21510315 335.55053711]
[-94.81875610 326.04751587]
[-105.93028259 315.97348022]
[-116.52161407 305.35388184]
[-126.56600189 294.21551514]
[-136.03805542 282.58657837]
[-144.91386414 270.49639893]
[-153.17098999 257.97552490]
[-160.78858948 245.05561829]
[-167.74742126 231.76927185]
[-174.02989197 218.15007019]
[-179.62014771 204.23240662]
[-184.50405884 190.05143738]
[-188.66928101 175.64300537]
[-192.10531616 161.04348755]
[-194.80345154 146.28976440]
[-196.75691223 131.41911316]
[-197.96072388 116.46909332]
[-198.41186523 101.47747040]
[-198.10919189 86.48211670]
[-197.05346680 71.52091217]
[-195.24736023 56.63164520]
[-192.69544983 41.85192871]
[-189.40414429 27.21910286]
[-185.38180542 12.77012634]
[-180.63854980 -1.45850050]
[-175.18638611 -15.43083477]
[-169.03906250 -29.11158180]
[-162.21214294 -42.46618271]
[-154.72285461 -55.46089935]
[-146.59010315 -68.06291199]
[-137.83445740 -80.24037933]
[-128.47801208 -91.96254730]
[-118.54441071 -103.19980621]
[-108.05875397 -113.92375946]
[-97.04752350 -124.10733032]
[-85.53853607 -133.72477722]
[-73.56085968 -142.75183105]
[-61.14475632 -151.16566467]
[-48.32158661 -158.94503784]
[-35.12374496 -166.07028198]
[-21.58456802 -172.52342224]
[-7.73826027 -178.28814697]
[6.38020325 -183.34988403]
[20.73515892 -187.69586182]
[35.29034424 -191.31509399]
[50.00899124 -194.19844055]
[64.85391998 -196.33860779]
[79.78762817 -197.73020935]
[94.77239227 -198.36972046]
[109.77037048 -198.25552368]
[124.74365997 -197.38790894]
[139.65444946 -195.76907349]
[154.46507263 -193.40309143]
[169.13810730 -190.29595947]
[183.63648987 -186.45550537]
[197.92359924 -181.89144897]
[211.96334839 -176.61531067]
[225.72027588 -170.64041138]
[239.15962219 -163.98185730]
[252.24742126 -156.65646362]
[264.95065308 -148.68273926]
[277.23718262 -140.08081055]
[289.07601929 -130.87242126]
[300.43722534 -121.08084106]
[310.78842163 -131.93684387]
[321.13958740 -142.79286194]
[331.49078369 -153.64886475]
[341.84197998 -164.50488281]
[352.19314575 -175.36088562]
[362.54434204 -186.21690369]
[372.89553833 -197.07290649]
[383.24670410 -207.92892456]
[393.59790039 -218.78492737]
[403.94909668 -229.64094543]
[394.33245850 -241.17430115]
[386.09326172 -253.72871399]
[379.33886719 -267.14050293]
[374.15737915 -281.23483276]
[370.61633301 -295.82794189]
[368.76190186 -310.72958374]
[368.61822510 -325.74548340]
[370.18722534 -340.67987061]
[373.44842529 -355.33804321]
[378.35928345 -369.52893066]
[384.85583496 -383.06750488]
[392.85333252 -395.77725220]
[402.24752808 -407.49249268]
[412.91595459 -418.06048584]
[424.71951294 -427.34344482]
[437.50433350 -435.22039795]
[451.10372925 -441.58859253]
[465.34042358 -446.36502075]
[480.02880859 -449.48742676]
[494.97735596 -450.91510010]
[509.99124146 -450.62942505]
[524.87463379 -448.63412476]
[539.43359375 -444.95523071]
[553.47833252 -439.64068604]
[566.82562256 -432.75976562]
[579.30157471 -424.40216064]
[590.74340820 -414.67691040]
[601.00213623 -403.71072388]
[609.94384766 -391.64660645]
[617.45208740 -378.64181519]
[623.42889404 -364.86590576]
[627.79638672 -350.49847412]
[630.49761963 -335.72683716]
[631.49731445 -320.74359131]
[630.78253174 -305.74401855]
[628.36260986 -290.92370605]
[624.26898193 -276.47586060]
[618.55505371 -262.58886719]
[611.29541016 -249.44372559]
[602.58453369 -237.21182251]
[592.53613281 -226.05264282]
[581.28118896 -216.11164856]
[568.96636963 -207.51846313]
[555.75225830 -200.38508606]
[541.81109619 -194.80455017]
[527.32470703 -190.84959412]
[512.48187256 -188.57177734]
[497.47613525 -188.00077820]
[482.50314331 -189.14407349]
[467.75808716 -191.98674011]
[453.43316650 -196.49172974]
[439.71517944 -202.60029602]
[426.78295898 -210.23280334]
[414.80508423 -219.28976440]
[404.45391846 -208.43374634]
[394.10272217 -197.57774353]
[383.75152588 -186.72172546]
[373.40036011 -175.86572266]
[363.04916382 -165.00970459]
[352.69799805 -154.15370178]
[342.34680176 -143.29768372]
[331.99560547 -132.44168091]
[321.64443970 -121.58566284]
[311.29324341 -110.72965240]
[321.61431885 -99.84722137]
[331.37561035 -88.45995331]
[340.55239868 -76.59661865]
[349.12155151 -64.28719330]
[357.06137085 -51.56275558]
[364.35186768 -38.45546341]
[370.97457886 -24.99842072]
[376.91278076 -11.22562218]
[382.15145874 2.82814145]
[386.67742920 17.12736893]
[390.47921753 31.63594055]
[393.54724121 46.31720734]
[395.87371826 61.13407898]
[397.45281982 76.04912567]
[398.28051758 91.02468109]
[398.35473633 106.02290344]
[397.67529297 121.00591278]
[396.24386597 135.93586731]
[394.06414795 150.77503967]
[391.14157104 165.48594666]
[387.48355103 180.03143311]
[383.09933472 194.37474060]
[377.99996948 208.47967529]
[372.19836426 222.31056213]
[365.70916748 235.83248901]
[358.54876709 249.01129150]
[350.73522949 261.81369019]
[342.28833008 274.20730591]
[333.22940063 286.16088867]
[323.58129883 297.64419556]
[313.36840820 308.62823486]
[302.61654663 319.08526611]
[291.35284424 328.98889160]
[279.60577393 338.31405640]
[267.40502930 347.03720093]
[254.78137207 355.13632202]
[241.76673889 362.59097290]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[86 160]
[87 159]
[88 158]
[89 157]
[90 156]
[91 155]
[92 154]
[93 153]
[94 152]
[95 151]
[96 150]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
86 160 17 gmark
86 cmark
160 cmark
87 159 15 gmark
87 cmark
159 cmark
88 158 14 gmark
88 cmark
158 cmark
89 157 15 gmark
89 cmark
157 cmark
90 156 15 gmark
90 cmark
156 cmark
91 155 15 gmark
91 cmark
155 cmark
92 154 10 gmark
92 cmark
154 cmark
93 153 16 gmark
93 cmark
153 cmark
94 152 17 gmark
94 cmark
152 cmark
95 151 18 gmark
95 cmark
151 cmark
96 150 20 gmark
96 cmark
150 cmark

% End Annotations
showpage
end
%%EOF
