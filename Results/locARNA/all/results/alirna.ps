%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Fri Jan 26 12:21:58 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________UUUUUUUGAGAAGAAGAAUUU_CCG_____AUGACUA__AAAA_AACCAGGAAGGCCC___GGGAGAAGCCGGGCUGUCAAUAUGCUAAAGCGCGGGGCACCCC________________CAACCCAACACACAAAACAGCAUAUUGACA_CCUGGGA__AAGACCGGGGGAU_CUUCUGCUC___________________\
) } def
/len { sequence length } bind def

/coor [
[-11.01024342 740.46429443]
[-25.43242264 744.59771729]
[-40.03371048 748.04541016]
[-54.78152084 750.79974365]
[-69.64295197 752.85455322]
[-84.58483887 754.20526123]
[-99.57383728 754.84881592]
[-114.57650757 754.78381348]
[-129.55937195 754.01037598]
[-144.48898315 752.53021240]
[-159.33204651 750.34667969]
[-174.05543518 747.46466064]
[-188.62629700 743.89056396]
[-203.01211548 739.63226318]
[-217.18078613 734.69946289]
[-231.10069275 729.10296631]
[-244.74078369 722.85540771]
[-258.07061768 715.97064209]
[-271.06045532 708.46411133]
[-283.68130493 700.35247803]
[-295.90499878 691.65386963]
[-307.70428467 682.38769531]
[-319.05279541 672.57470703]
[-329.92523193 662.23669434]
[-340.29733276 651.39678955]
[-350.14596558 640.07916260]
[-359.44912720 628.30902100]
[-368.18609619 616.11273193]
[-376.33734131 603.51745605]
[-383.88467407 590.55126953]
[-390.81124878 577.24310303]
[-397.10165405 563.62268066]
[-402.74182129 549.72045898]
[-407.71914673 535.56732178]
[-412.02258301 521.19494629]
[-415.64245605 506.63540649]
[-418.57073975 491.92114258]
[-420.80087280 477.08502197]
[-422.32791138 462.16012573]
[-423.14840698 447.17977905]
[-423.26055908 432.17736816]
[-422.66409302 417.18643188]
[-421.36035156 402.24038696]
[-419.35226440 387.37255859]
[-416.64425659 372.61618042]
[-413.24243164 358.00411987]
[-409.15435791 343.56903076]
[-404.38916016 329.34310913]
[-398.95745850 315.35806274]
[-392.87136841 301.64517212]
[-386.14450073 288.23495483]
[-378.79183960 275.15740967]
[-370.82980347 262.44165039]
[-362.27615356 250.11608887]
[-353.14999390 238.20822144]
[-343.47164917 226.74461365]
[-333.26275635 215.75086975]
[-322.54608154 205.25148010]
[-311.34552002 195.26989746]
[-299.68609619 185.82839966]
[-287.59378052 176.94804382]
[-275.09561157 168.64865112]
[-262.21945190 160.94873047]
[-248.99403381 153.86547852]
[-235.44886780 147.41468811]
[-221.61416626 141.61076355]
[-207.52082825 136.46664429]
[-193.20027161 131.99382019]
[-178.68447876 128.20227051]
[-164.00581360 125.10044098]
[-149.19705200 122.69527435]
[-134.29122925 120.99212646]
[-119.32160950 119.99479675]
[-104.32158661 119.70550537]
[-89.32463837 120.12491608]
[-74.36422729 121.25207520]
[-59.47374344 123.08448029]
[-44.68640518 125.61802673]
[-30.03520775 128.84707642]
[-15.55284882 132.76441956]
[-1.27164161 137.36131287]
[12.77654552 142.62750244]
[26.56036568 148.55123901]
[40.04906464 155.11929321]
[53.21253586 162.31701660]
[61.02235031 149.51051331]
[68.83216095 136.70399475]
[76.64197540 123.89747620]
[84.45178986 111.09096527]
[81.14092255 96.98477936]
[88.68495941 84.61409760]
[102.74169159 81.09922028]
[110.55150604 68.29270935]
[118.36132050 55.48619461]
[126.17113495 42.67967987]
[133.98094177 29.87316513]
[141.79075623 17.06665039]
[149.60057068 4.26013613]
[157.41038513 -8.54637814]
[165.22019958 -21.35289192]
[173.03001404 -34.15940857]
[180.83982849 -46.96591949]
[169.03221130 -56.24582672]
[158.40507507 -66.85714722]
[149.10758972 -78.65091705]
[141.27027893 -91.46157837]
[135.00317383 -105.10927582]
[130.39424133 -119.40242767]
[127.50820923 -134.14038086]
[126.38556671 -149.11622620]
[127.04209137 -164.11973572]
[129.46856689 -178.94029236]
[133.63090515 -193.36981201]
[139.47070312 -207.20574951]
[146.90596008 -220.25386047]
[155.83232117 -232.33097839]
[166.12443542 -243.26754761]
[177.63784790 -252.91003418]
[190.21092224 -261.12310791]
[203.66714478 -267.79141235]
[217.81761169 -272.82138062]
[232.46368408 -276.14236450]
[247.39974976 -277.70776367]
[262.41610718 -277.49563599]
[277.30197144 -275.50888062]
[291.84838867 -271.77545166]
[305.85110474 -266.34774780]
[319.11358643 -259.30194092]
[331.44961548 -250.73698425]
[342.68603516 -240.77307129]
[352.66506958 -229.55010986]
[361.24667358 -217.22564697]
[368.31036377 -203.97270203]
[373.75695801 -189.97731018]
[377.51000977 -175.43594360]
[379.51681519 -160.55276489]
[379.74920654 -145.53669739]
[378.20394897 -130.59854126]
[374.90270996 -115.94800568]
[369.89184570 -101.79076385]
[363.24169922 -88.32556152]
[355.04559326 -75.74142456]
[345.41864014 -64.21501923]
[334.49597168 -53.90814972]
[322.43090820 -44.96551895]
[309.39282227 -37.51266479]
[295.56478882 -31.65421104]
[281.14089966 -27.47240257]
[266.32363892 -25.02594757]
[251.32101440 -24.34918594]
[236.34367371 -25.45162201]
[221.60183716 -28.31777763]
[207.30249023 -32.90741730]
[193.64634705 -39.15610886]
[185.83653259 -26.34959412]
[178.02671814 -13.54307938]
[170.21690369 -0.73656452]
[162.40708923 12.06995010]
[154.59727478 24.87646484]
[146.78746033 37.68297958]
[138.97764587 50.48949432]
[131.16783142 63.29600906]
[123.35802460 76.10252380]
[115.54821014 88.90903473]
[118.85907745 103.01522064]
[111.31504059 115.38590240]
[97.25830841 118.90077972]
[89.44849396 131.70729065]
[81.63867950 144.51380920]
[73.82886505 157.32032776]
[66.01905060 170.12683105]
[78.44482422 178.53424072]
[90.45970154 187.51905823]
[102.03687286 197.06124878]
[113.15050507 207.13952637]
[123.77578735 217.73138428]
[133.88902283 228.81321716]
[143.46763611 240.36026001]
[152.49028015 252.34677124]
[160.93678284 264.74600220]
[168.78831482 277.53027344]
[176.02735901 290.67108154]
[182.63775635 304.13906860]
[188.60476685 317.90420532]
[193.91505432 331.93579102]
[198.55679321 346.20248413]
[202.51962280 360.67245483]
[205.79467773 375.31344604]
[208.37467957 390.09274292]
[210.25384521 404.97741699]
[211.42800903 419.93420410]
[211.89451599 434.92974854]
[211.65235901 449.93060303]
[210.70205688 464.90328979]
[209.04574585 479.81439209]
[206.68711853 494.63064575]
[203.63142395 509.31896973]
[199.88548279 523.84661865]
[195.45767212 538.18115234]
[190.35784912 552.29058838]
[184.59741211 566.14343262]
[178.18920898 579.70880127]
[171.14753723 592.95642090]
[163.48811340 605.85668945]
[155.22802734 618.38085938]
[146.38569641 630.50103760]
[136.98088074 642.19006348]
[127.03453827 653.42193604]
[116.56887054 664.17150879]
[105.60724640 674.41491699]
[94.17410278 684.12921143]
[82.29496765 693.29272461]
[69.99633789 701.88507080]
[57.30566788 709.88702393]
[44.25126266 717.28070068]
[30.86226273 724.04968262]
[17.16853905 730.17883301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[85 171]
[86 170]
[87 169]
[88 168]
[89 167]
[92 164]
[93 163]
[94 162]
[95 161]
[96 160]
[97 159]
[98 158]
[99 157]
[100 156]
[101 155]
[102 154]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
85 171 17 gmark
85 cmark
171 cmark
86 170 16 gmark
86 cmark
87 169 21 gmark
87 cmark
169 cmark
88 168 17 gmark
88 cmark
168 cmark
89 167 21 gmark
89 cmark
167 cmark
92 164 17 gmark
92 cmark
164 cmark
93 163 17 gmark
93 cmark
163 cmark
94 162 14 gmark
94 cmark
162 cmark
95 161 12 gmark
95 cmark
161 cmark
96 160 15 gmark
96 cmark
97 159 13 gmark
97 cmark
159 cmark
98 158 13 gmark
98 cmark
158 cmark
99 157 11 gmark
99 cmark
157 cmark
100 156 16 gmark
100 cmark
156 cmark
101 155 19 gmark
101 cmark
155 cmark
102 154 19 gmark
102 cmark
154 cmark

% End Annotations
showpage
end
%%EOF
