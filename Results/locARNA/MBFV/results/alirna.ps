%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Feb 15 17:10:13 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AU______UAACACAGUUUGAACAGUUUUUUUGAACAGAAG__UUUUCU______AUGUCUA____AAAAACCAGGAAGGCCCGGAGGAAACCGGGCUGUCAAUAUGCUAAAACGCGGAGCAACCCGCG_____________C_AAGCACAAA_A_A_AAACAGCAUAUUGACACCUGGGA__AAGACCAGAGGAUCUUCUGCUUUCC\
) } def
/len { sequence length } bind def

/coor [
[50.40132904 371.79150391]
[52.54298782 386.67315674]
[52.20584869 401.70431519]
[49.39910889 416.47497559]
[44.19933319 430.58215332]
[36.74838257 443.64096069]
[27.24952126 455.29522705]
[15.96188450 465.22695923]
[3.19340777 473.16519165]
[-10.70757484 478.89343262]
[-25.36183548 482.25534058]
[-40.36959457 483.15924072]
[-55.32142639 481.58047485]
[-69.80944061 477.56210327]
[-83.43839264 471.21374512]
[-95.83646393 462.70858765]
[-106.66544342 452.27868652]
[-115.62989044 440.20852661]
[-122.48526001 426.82745361]
[-127.04453278 412.50042725]
[-129.18331909 397.61837769]
[-128.84329224 382.58728027]
[-126.03370667 367.81716919]
[-120.83121490 353.71099854]
[-113.37774658 340.65359497]
[-103.87664032 329.00119019]
[-92.58708954 319.07165527]
[-79.81708527 311.13583374]
[-65.91499329 305.41030884]
[-51.26008987 302.05120850]
[-36.25215530 301.15017700]
[-21.30062675 302.73184204]
[-6.81338835 306.75299072]
[-0.47979116 293.15573120]
[-2.11957049 278.35168457]
[10.72115135 269.10903931]
[17.05474854 255.51176453]
[23.38834572 241.91450500]
[29.72194290 228.31724548]
[36.05553818 214.71998596]
[42.38913727 201.12272644]
[38.54307556 189.65284729]
[43.70967865 178.27238464]
[55.61552429 173.30853271]
[62.15278625 159.80799866]
[68.69004822 146.30747986]
[75.22731018 132.80694580]
[81.76457214 119.30641937]
[88.30183411 105.80589294]
[76.44514465 114.99387360]
[62.80905914 121.24345398]
[48.10874557 124.22687531]
[33.11517715 123.78765869]
[18.61471176 119.94885254]
[5.36783981 112.91178131]
[-5.93068743 103.04550934]
[-14.68830490 90.86749268]
[-20.44570923 77.01641846]
[-22.90094376 62.21871948]
[-21.92524529 47.25048447]
[-17.56978226 32.89674377]
[-10.06298161 19.91028976]
[0.20145074 8.97221756]
[12.68518543 0.65618682]
[26.73349762 -4.60165834]
[41.60960388 -6.52556324]
[56.53331375 -5.01462698]
[70.72193146 -0.14809173]
[83.43131256 7.81881046]
[93.99491119 18.46824646]
[101.85868835 31.24169159]
[106.61023712 45.46923065]
[108.00034332 60.40467834]
[105.95610809 75.26472473]
[100.58711243 89.26548767]
[111.62297058 79.10626221]
[105.87345886 69.18167877]
[102.07678223 58.36429596]
[100.36417389 47.03407669]
[100.79369354 35.58860397]
[103.34826660 24.42912292]
[107.93636322 13.94648266]
[114.39527130 4.50743866]
[122.49684906 -3.55817604]
[131.95561218 -9.96897411]
[142.43875122 -14.50183201]
[153.57791138 -16.99965668]
[164.98207092 -17.37682533]
[176.25126648 -15.62212276]
[186.99069214 -11.79906368]
[196.82443237 -6.04359341]
[205.40872192 1.44074416]
[217.45053101 -7.50323248]
[229.49234009 -16.44720840]
[241.53416443 -25.39118576]
[253.57597351 -34.33516312]
[265.61779785 -43.27913666]
[270.64208984 -50.90956497]
[277.90847778 -52.26543427]
[290.08337402 -61.02740097]
[302.25827026 -69.78936768]
[314.43316650 -78.55133057]
[326.60806274 -87.31330109]
[338.78295898 -96.07526398]
[350.95782471 -104.83723450]
[363.13272095 -113.59919739]
[375.30761719 -122.36116028]
[387.48251343 -131.12312317]
[399.65740967 -139.88510132]
[392.33148193 -152.99343872]
[386.54760742 -166.85145569]
[382.38116455 -181.27845764]
[379.88644409 -196.08636475]
[379.09600830 -211.08213806]
[380.02014160 -226.07025146]
[382.64678955 -240.85533142]
[386.94174194 -255.24459839]
[392.84899902 -269.05047607]
[400.29150391 -282.09298706]
[409.17227173 -294.20205688]
[419.37548828 -305.21984863]
[430.76815796 -315.00271606]
[443.20178223 -323.42312622]
[456.51419067 -330.37130737]
[470.53189087 -335.75665283]
[485.07211304 -339.50897217]
[499.94528198 -341.57931519]
[514.95751953 -341.94073486]
[529.91308594 -340.58850098]
[544.61706543 -337.54022217]
[558.87762451 -332.83566284]
[572.50903320 -326.53616333]
[585.33337402 -318.72384644]
[597.18365479 -309.50051880]
[607.90527344 -298.98648071]
[617.35845947 -287.31878662]
[625.41992188 -274.64953613]
[631.98468018 -261.14392090]
[636.96710205 -246.97799683]
[640.30218506 -232.33645630]
[641.94653320 -217.41017151]
[641.87860107 -202.39373779]
[640.09936523 -187.48292542]
[636.63195801 -172.87214661]
[631.52166748 -158.75186157]
[624.83502197 -145.30616760]
[616.65930176 -132.71034241]
[607.10095215 -121.12862396]
[596.28472900 -110.71197510]
[584.35150146 -101.59622192]
[571.45697021 -93.90019226]
[557.76922607 -87.72422791]
[543.46667480 -83.14884186]
[528.73571777 -80.23368073]
[513.76855469 -79.01675415]
[498.76019287 -79.51392365]
[483.90634155 -81.71871185]
[469.40066528 -85.60237122]
[455.43225098 -91.11427307]
[442.18319702 -98.18255615]
[429.82626343 -106.71507263]
[418.52252197 -116.60057831]
[408.41937256 -127.71020508]
[396.24447632 -118.94823456]
[384.06958008 -110.18627167]
[371.89468384 -101.42430878]
[359.71978760 -92.66233826]
[347.54492188 -83.90037537]
[335.37002563 -75.13841248]
[323.19512939 -66.37644196]
[311.02023315 -57.61447525]
[298.84533691 -48.85251236]
[286.67047119 -40.09054565]
[274.56176758 -31.23732376]
[262.51995850 -22.29334831]
[250.47813416 -13.34937096]
[238.43632507 -4.40539455]
[226.39450073 4.53858185]
[214.35269165 13.48255825]
[221.01979065 31.04185295]
[222.01329041 49.81380081]
[217.22883606 68.00931549]
[207.11323547 83.89129639]
[192.62271118 95.94047546]
[175.13252258 103.00075531]
[156.30645752 104.39009857]
[137.93856812 99.96643829]
[121.78219604 90.14212036]
[110.74633789 100.30134583]
[101.80236053 112.34315491]
[95.26509857 125.84368134]
[88.72783661 139.34420776]
[82.19057465 152.84474182]
[75.65331268 166.34526062]
[69.11605072 179.84579468]
[70.87915039 198.17463684]
[55.98640060 207.45631409]
[49.65280151 221.05357361]
[43.31920624 234.65084839]
[36.98560715 248.24810791]
[30.65201187 261.84536743]
[24.31841469 275.44262695]
[25.50517273 291.21926880]
[13.11747169 299.48934937]
[6.78387451 313.08660889]
[19.18358803 321.58935547]
[30.01457214 332.01718140]
[38.98134995 344.08560181]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 205]
[34 204]
[36 202]
[37 201]
[38 200]
[39 199]
[40 198]
[41 197]
[44 195]
[45 194]
[46 193]
[47 192]
[48 191]
[49 190]
[75 189]
[76 188]
[92 179]
[93 178]
[94 177]
[95 176]
[96 175]
[97 174]
[99 173]
[100 172]
[101 171]
[102 170]
[103 169]
[104 168]
[105 167]
[106 166]
[107 165]
[108 164]
[109 163]
] def

init

% Start Annotations
40 198 0.32 0.2 colorpair
93 178 0.0 0.6 colorpair
95 176 0.16 0.2 colorpair
100 172 0.16 1 colorpair
101 171 0.32 1 colorpair
102 170 0.16 1 colorpair
103 169 0.16 1 colorpair
104 168 0.16 1 colorpair
105 167 0.0 1 colorpair
106 166 0.0 1 colorpair
107 165 0.16 1 colorpair
108 164 0.16 1 colorpair
109 163 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
33 205 4 gmark
33 cmark
205 cmark
34 204 8 gmark
34 cmark
204 cmark
36 202 9 gmark
36 cmark
202 cmark
37 201 4 gmark
37 cmark
201 cmark
38 200 3 gmark
38 cmark
200 cmark
39 199 5 gmark
39 cmark
199 cmark
40 198 2 gmark
40 cmark
198 cmark
41 197 6 gmark
41 cmark
197 cmark
44 195 9 gmark
44 cmark
195 cmark
45 194 5 gmark
45 cmark
194 cmark
46 193 7 gmark
46 cmark
193 cmark
47 192 9 gmark
47 cmark
192 cmark
48 191 7 gmark
48 cmark
49 190 7 gmark
49 cmark
190 cmark
75 189 6 gmark
189 cmark
76 188 8 gmark
92 179 8 gmark
92 cmark
179 cmark
93 178 1 gmark
94 177 4 gmark
94 cmark
177 cmark
95 176 2 gmark
95 cmark
176 cmark
96 175 10 gmark
96 cmark
175 cmark
97 174 8 gmark
97 cmark
174 cmark
99 173 7 gmark
100 cmark
172 cmark
101 cmark
171 cmark
102 cmark
170 cmark
103 cmark
169 cmark
104 cmark
168 cmark
107 cmark
165 cmark
108 cmark
164 cmark
109 cmark
163 cmark

% End Annotations
showpage
end
%%EOF
