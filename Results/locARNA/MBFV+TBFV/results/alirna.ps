%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Jan 25 16:53:33 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____AAUUUGUUUUUGGAGA_GCAGAAUCUCUG_______AUGUCUAAAAAAA__CCAGG_AAAACCCGGAGGAAACCGGGUUGUCAAUAUGCUAAAACGCGGAGAACCCCGCG____________CA_ACCCCAAA__CAAAACAGCAUAUUGAC_ACCUGGGA__AAGACCA_GGGAACCUGCUGUCUUUC\
) } def
/len { sequence length } bind def

/coor [
[99.52108765 371.08135986]
[91.81833649 384.06481934]
[80.89753723 394.48782349]
[67.56907654 401.57687378]
[52.82202530 404.80593872]
[37.75070190 403.93542480]
[23.47350502 399.02990723]
[11.04989338 390.45339966]
[1.40178502 378.84234619]
[-4.75486851 365.05834961]
[-6.96320152 350.12429810]
[-5.05934143 335.14840698]
[0.81543267 321.24194336]
[10.22517395 309.43688965]
[22.47161674 300.60925293]
[36.64599228 295.41409302]
[51.69647217 294.23693848]
[54.59304047 279.51925659]
[57.48960876 264.80157471]
[60.38617706 250.08390808]
[58.59056473 242.90362549]
[63.45065308 235.15223694]
[66.58516693 220.48339844]
[69.71968079 205.81455994]
[72.85419464 191.14572144]
[75.98870850 176.47688293]
[71.08181000 162.41374207]
[81.53208160 150.53509521]
[84.66659546 135.86625671]
[87.80110931 121.19741821]
[90.93562317 106.52857971]
[93.95126343 91.83483887]
[84.60761261 103.56924438]
[72.84160614 112.87306213]
[59.26902008 119.25937653]
[44.60019684 122.39394379]
[29.60283279 122.11272430]
[15.06183052 118.43043518]
[1.73820698 111.53978729]
[-9.67073536 101.80140686]
[-18.56790161 89.72496033]
[-24.48764801 75.94248962]
[-27.12016106 61.17530060]
[-26.32766724 46.19625092]
[-22.15164185 31.78927994]
[-14.81063938 18.70838928]
[-4.68885756 7.63817930]
[7.68397045 -0.84198129]
[21.66030312 -6.28827667]
[36.50867462 -8.41567039]
[51.45198822 -7.11282349]
[65.70816803 -2.44792151]
[78.53111267 5.33489418]
[89.24971008 15.82830334]
[97.30300140 28.48312378]
[102.26950836 42.63705444]
[103.88930511 57.54934311]
[102.07817841 72.43721008]
[110.53753662 60.05015182]
[101.65668488 46.65519714]
[98.60050964 30.91616058]
[101.80754852 15.24648476]
[110.75822449 2.03745198]
[124.05876160 -6.70674658]
[139.65815735 -9.67308044]
[155.16445923 -6.43677902]
[163.42211914 -18.95919991]
[171.67977905 -31.48162079]
[179.93743896 -44.00403976]
[188.19509888 -56.52646255]
[183.42518616 -62.49990082]
[179.98703003 -69.31465149]
[178.02270508 -76.67882538]
[177.61128235 -84.27806854]
[178.76562500 -91.78896332]
[181.43208313 -98.89282227]
[185.49291992 -105.28916931]
[190.77156067 -110.70848083]
[197.04017639 -114.92353058]
[204.02964783 -117.75890350]
[211.44096375 -119.09832001]
[218.95817566 -118.88937378]
[226.26171875 -117.14557648]
[233.04206848 -113.94559479]
[243.21069336 -124.97278595]
[253.37931824 -135.99998474]
[263.54794312 -147.02717590]
[273.71658325 -158.05438232]
[283.88519287 -169.08157349]
[294.05383301 -180.10876465]
[304.22244263 -191.13595581]
[314.39108276 -202.16316223]
[324.55969238 -213.19035339]
[334.72833252 -224.21754456]
[324.96881104 -235.63194275]
[316.62786865 -248.12052917]
[309.82254028 -261.50799561]
[304.64840698 -275.60638428]
[301.17810059 -290.21780396]
[299.46032715 -305.13708496]
[299.51919556 -320.15484619]
[301.35388184 -335.06021118]
[304.93865967 -349.64398193]
[310.22314453 -363.70138550]
[317.13320923 -377.03506470]
[325.57183838 -389.45788574]
[335.42053223 -400.79541016]
[346.54104614 -410.88848877]
[358.77728271 -419.59542847]
[371.95745850 -426.79400635]
[385.89651489 -432.38317871]
[400.39880371 -436.28445435]
[415.26074219 -438.44305420]
[430.27365112 -438.82873535]
[445.22680664 -437.43600464]
[459.91027832 -434.28448486]
[474.11791992 -429.41836548]
[487.65029907 -422.90600586]
[500.31744385 -414.83877563]
[511.94149780 -405.32998657]
[522.35931396 -394.51306152]
[531.42462158 -382.53991699]
[539.01019287 -369.57858276]
[545.00946045 -355.81106567]
[549.33825684 -341.43060303]
[551.93585205 -326.63906860]
[552.76568604 -311.64416504]
[551.81616211 -296.65634155]
[549.10064697 -281.88601685]
[544.65722656 -267.54055786]
[538.54821777 -253.82135010]
[530.85949707 -240.92097473]
[521.69891357 -229.02055359]
[511.19506836 -218.28713989]
[499.49548340 -208.87141418]
[486.76434326 -200.90554810]
[473.18041992 -194.50138855]
[458.93438721 -189.74884033]
[444.22622681 -186.71459961]
[429.26245117 -185.44128418]
[414.25308228 -185.94674683]
[399.40887451 -188.22392273]
[384.93817139 -192.24081421]
[371.04415894 -197.94104004]
[357.92187500 -205.24459839]
[345.75552368 -214.04891968]
[335.58688354 -203.02172852]
[325.41827393 -191.99453735]
[315.24963379 -180.96733093]
[305.08102417 -169.94013977]
[294.91238403 -158.91294861]
[284.74377441 -147.88575745]
[274.57513428 -136.85855103]
[264.40652466 -125.83135986]
[254.23788452 -114.80416107]
[244.06925964 -103.77696991]
[250.96903992 -81.84832764]
[243.32254028 -60.04066467]
[224.03872681 -47.08774567]
[200.71752930 -48.26879883]
[192.45986938 -35.74637985]
[184.20219421 -23.22395897]
[175.94453430 -10.70153809]
[167.68687439 1.82088256]
[175.99435425 13.14029789]
[179.94525146 26.64487457]
[179.04496765 40.71663666]
[173.38139343 53.66238403]
[163.61674500 63.91741562]
[150.91032410 70.23466492]
[136.78074646 71.83631134]
[122.92459869 68.50950623]
[114.46524048 80.89656830]
[108.66893768 94.73140717]
[110.32740021 102.63217926]
[105.60446167 109.66308594]
[102.46994781 124.33192444]
[99.33543396 139.00076294]
[96.20092010 153.66960144]
[100.88361359 168.78195190]
[90.65754700 179.61138916]
[87.52303314 194.28022766]
[84.38851929 208.94906616]
[81.25400543 223.61790466]
[78.11949158 238.28674316]
[75.10385132 252.98048401]
[72.20728302 267.69815063]
[69.31071472 282.41583252]
[66.41414642 297.13351440]
[79.89610291 303.92608643]
[91.04472351 314.10504150]
[99.03269196 326.91497803]
[103.26725769 341.40536499]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 189]
[18 188]
[19 187]
[20 186]
[22 185]
[23 184]
[24 183]
[25 182]
[26 181]
[28 179]
[29 178]
[30 177]
[31 176]
[32 174]
[58 173]
[59 172]
[66 164]
[67 163]
[68 162]
[69 161]
[70 160]
[84 156]
[85 155]
[86 154]
[87 153]
[88 152]
[89 151]
[90 150]
[91 149]
[92 148]
[93 147]
[94 146]
] def

init

% Start Annotations
92 148 0.48 0.2 colorpair
94 146 0.48 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
17 189 10 gmark
17 cmark
189 cmark
18 188 13 gmark
18 cmark
188 cmark
19 187 10 gmark
19 cmark
187 cmark
20 186 11 gmark
20 cmark
186 cmark
22 185 6 gmark
22 cmark
185 cmark
23 184 8 gmark
23 cmark
184 cmark
24 183 8 gmark
24 cmark
183 cmark
25 182 9 gmark
25 cmark
182 cmark
26 181 10 gmark
26 cmark
181 cmark
28 179 8 gmark
28 cmark
179 cmark
29 178 4 gmark
29 cmark
178 cmark
30 177 10 gmark
30 cmark
177 cmark
31 176 7 gmark
31 cmark
176 cmark
32 174 14 gmark
32 cmark
174 cmark
58 173 12 gmark
58 cmark
173 cmark
59 172 9 gmark
59 cmark
172 cmark
66 164 8 gmark
66 cmark
164 cmark
67 163 13 gmark
67 cmark
68 162 6 gmark
68 cmark
162 cmark
69 161 8 gmark
69 cmark
70 160 10 gmark
160 cmark
84 156 6 gmark
84 cmark
156 cmark
85 155 4 gmark
85 cmark
155 cmark
86 154 4 gmark
86 cmark
154 cmark
87 153 5 gmark
87 cmark
153 cmark
88 152 5 gmark
88 cmark
152 cmark
89 151 6 gmark
89 cmark
151 cmark
90 150 7 gmark
90 cmark
150 cmark
91 149 6 gmark
91 cmark
149 cmark
92 148 2 gmark
92 cmark
148 cmark
93 147 7 gmark
93 cmark
147 cmark
94 146 1 gmark
94 cmark
146 cmark

% End Annotations
showpage
end
%%EOF
