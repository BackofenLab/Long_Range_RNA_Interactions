%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Feb 15 17:11:22 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________AA____GUGUGAACAGUUUUUUAGAACAGGAGA_AUAACUG____________AUGUCUA____AAAAACCAGGAAG_CCCGGAAAAAGCCGGGCUGUCAAUAUGCUAAAACGCGGAGUAACCCGCG_____________C_AAGACCAAA_A_ACAAACAGCAUAUUGACACCUGGGA__AAGACUAGAGGAUCUC_CUGCUC_____UCA\
) } def
/len { sequence length } bind def

/coor [
[86.39300537 449.82284546]
[80.87360382 463.79977417]
[73.37788391 476.82406616]
[64.06562042 488.61810303]
[53.13530731 498.93054199]
[40.81991959 507.54150391]
[27.38195801 514.26751709]
[13.10785961 518.96514893]
[-1.69812548 521.53436279]
[-16.72040558 521.92028809]
[-31.63878059 520.11474609]
[-46.13526535 516.15625000]
[-59.90086365 510.12911987]
[-72.64216614 502.16186523]
[-84.08758545 492.42428589]
[-93.99315643 481.12396240]
[-102.14775848 468.50173950]
[-108.37756348 454.82669067]
[-112.54978180 440.39025879]
[-114.57549286 425.50018311]
[-114.41150665 410.47384644]
[-112.06132507 395.63153076]
[-107.57503510 381.28958130]
[-101.04827881 367.75372314]
[-92.62015533 355.31250000]
[-82.47032166 344.23101807]
[-70.81511688 334.74557495]
[-57.90297699 327.05825806]
[-44.00912094 321.33300781]
[-29.42969894 317.69180298]
[-14.47547436 316.21228027]
[0.53480577 316.92596436]
[15.28119564 319.81765747]
[20.27829170 305.67449951]
[25.27538872 291.53134155]
[30.27248573 277.38818359]
[35.26958466 263.24499512]
[40.26668167 249.10185242]
[45.16358185 234.92367554]
[49.96004105 220.71122742]
[54.75649643 206.49876404]
[59.55295563 192.28630066]
[58.71421051 184.94950867]
[64.51915741 177.90750122]
[69.51625061 163.76434326]
[74.51335144 149.62118530]
[79.51044464 135.47801208]
[84.50754547 121.33485413]
[89.50463867 107.19169617]
[77.85715485 116.64347076]
[63.63225174 121.40290070]
[48.64194489 120.86371613]
[34.79574585 115.09460449]
[23.85741615 104.83044434]
[17.22031784 91.37871552]
[15.72990513 76.45294952]
[19.57602882 61.95441818]
[28.26875877 49.72999573]
[40.70079041 41.33686829]
[55.28849030 37.84417343]
[70.17364502 39.69681931]
[83.46012878 46.65881348]
[93.45546722 57.84331512]
[98.88644409 71.82560730]
[99.06162262 86.82225037]
[90.01103973 78.24580383]
[82.82976532 68.06000519]
[77.79706573 56.66501236]
[75.10787201 44.50791550]
[74.86518860 32.06521606]
[77.07621002 19.82413101]
[81.65206146 8.26353455]
[88.41142273 -2.16479039]
[97.08769226 -11.05380154]
[107.33949280 -18.05708694]
[118.76412201 -22.90236092]
[130.91334534 -25.40205765]
[143.31101990 -25.46058273]
[155.47171021 -23.07796860]
[166.91972351 -18.34979057]
[175.49436951 -30.65732956]
[184.06901550 -42.96486664]
[192.64366150 -55.27240753]
[179.50688171 -48.03187561]
[164.91590881 -44.55291367]
[149.92541504 -45.08699417]
[135.61900330 -49.59551620]
[123.03083038 -57.75257874]
[113.07080841 -68.96854401]
[106.45890045 -82.43267822]
[103.67306519 -97.17170715]
[104.91466522 -112.12023926]
[110.09394836 -126.19770050]
[118.83654022 -138.38650513]
[130.51048279 -147.80560303]
[144.27191162 -153.77410889]
[159.12608337 -155.86061096]
[173.99926758 -153.91426086]
[187.81636047 -148.07577515]
[199.57858276 -138.76716614]
[208.43571472 -126.66133881]
[213.74751282 -112.63333130]
[215.13000488 -97.69718170]
[212.48326111 -82.93253326]
[205.99618530 -69.40298462]
[217.79890442 -78.66019440]
[229.60162354 -87.91740417]
[241.40432739 -97.17461395]
[253.20704651 -106.43182373]
[265.00976562 -115.68903351]
[276.81246948 -124.94623566]
[288.61520386 -134.20344543]
[300.41790771 -143.46066284]
[312.22061157 -152.71786499]
[324.02334595 -161.97506714]
[335.82604980 -171.23228455]
[327.96514893 -184.02696228]
[321.61398315 -197.63432312]
[316.85537720 -211.87698364]
[313.75134277 -226.56925964]
[312.34237671 -241.51959229]
[312.64685059 -256.53308105]
[314.66079712 -271.41400146]
[318.35794067 -285.96835327]
[323.69006348 -300.00637817]
[330.58767700 -313.34506226]
[338.96087646 -325.81051636]
[348.70046997 -337.24023438]
[359.67947388 -347.48516846]
[371.75479126 -356.41180420]
[384.76898193 -363.90371704]
[398.55233765 -369.86328125]
[412.92523193 -374.21276855]
[427.70022583 -376.89550781]
[442.68475342 -377.87646484]
[457.68341064 -377.14291382]
[472.50067139 -374.70440674]
[486.94335938 -370.59268188]
[500.82321167 -364.86141968]
[513.95922852 -357.58526611]
[526.18023682 -348.85913086]
[537.32684326 -338.79678345]
[547.25372314 -327.52935791]
[555.83148193 -315.20379639]
[562.94830322 -301.98074341]
[568.51135254 -288.03265381]
[572.44818115 -273.54129028]
[574.70745850 -258.69561768]
[575.25964355 -243.68920898]
[574.09759521 -228.71765137]
[571.23645020 -213.97615051]
[566.71356201 -199.65690613]
[560.58782959 -185.94656372]
[552.93914795 -173.02391052]
[543.86718750 -161.05738831]
[533.49023438 -150.20301819]
[521.94366455 -140.60229492]
[509.37789917 -132.38040161]
[495.95681763 -125.64451599]
[481.85537720 -120.48246002]
[467.25738525 -116.96153259]
[452.35321045 -115.12763214]
[437.33712769 -115.00466156]
[422.40490723 -116.59423828]
[407.75125122 -119.87563324]
[393.56713867 -124.80606079]
[380.03753662 -131.32124329]
[367.33883667 -139.33625793]
[355.63653564 -148.74658203]
[345.08325195 -159.42956543]
[333.28054810 -150.17236328]
[321.47784424 -140.91514587]
[309.67510986 -131.65794373]
[297.87240601 -122.40073395]
[286.06970215 -113.14352417]
[274.26696777 -103.88631439]
[262.46426392 -94.62910461]
[250.66154480 -85.37189484]
[238.85882568 -76.11469269]
[227.05610657 -66.85748291]
[215.25340271 -57.60027313]
[204.95120239 -46.69776535]
[196.37655640 -34.39022446]
[187.80191040 -22.08268547]
[179.22726440 -9.77514744]
[190.65014648 3.70172167]
[197.85823059 19.84478760]
[200.27102661 37.37134552]
[197.68940735 54.88661194]
[190.31196594 70.99468994]
[178.71980286 84.40985870]
[163.83074951 94.05915070]
[146.82664490 99.16821289]
[129.05964661 99.32341003]
[111.94456482 94.50532532]
[111.78766632 105.32676697]
[103.64780426 112.18878937]
[98.65070343 126.33195496]
[93.65361023 140.47511292]
[88.65650940 154.61827087]
[83.65941620 168.76144409]
[78.66231537 182.90460205]
[73.76541901 197.08276367]
[68.96895599 211.29522705]
[64.17250061 225.50767517]
[59.37603760 239.72013855]
[59.59769058 248.84362793]
[54.40984344 254.09893799]
[49.41274643 268.24209595]
[44.41564941 282.38525391]
[39.41855240 296.52844238]
[34.42145538 310.67160034]
[29.42435646 324.81475830]
[42.71419144 331.82888794]
[54.84107971 340.70336914]
[65.54653168 351.24905396]
[74.60237122 363.24111938]
[81.81555939 376.42398071]
[87.03235626 390.51663208]
[90.14155579 405.21868896]
[91.07689667 420.21679688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 213]
[34 212]
[35 211]
[36 210]
[37 209]
[38 208]
[39 206]
[40 205]
[41 204]
[42 203]
[44 202]
[45 201]
[46 200]
[47 199]
[48 198]
[49 197]
[65 195]
[80 185]
[81 184]
[82 183]
[83 182]
[105 181]
[106 180]
[107 179]
[108 178]
[109 177]
[110 176]
[111 175]
[112 174]
[113 173]
[114 172]
[115 171]
[116 170]
] def

init

% Start Annotations
40 205 0.32 0.2 colorpair
81 184 0.32 0.2 colorpair
107 179 0.16 1 colorpair
108 178 0.32 1 colorpair
109 177 0.32 1 colorpair
110 176 0.16 1 colorpair
111 175 0.16 0.6 colorpair
112 174 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
33 213 4 gmark
33 cmark
213 cmark
34 212 8 gmark
34 cmark
212 cmark
35 211 12 gmark
35 cmark
211 cmark
36 210 9 gmark
36 cmark
210 cmark
37 209 4 gmark
37 cmark
209 cmark
38 208 3 gmark
38 cmark
208 cmark
39 206 5 gmark
39 cmark
206 cmark
40 205 2 gmark
40 cmark
205 cmark
41 204 6 gmark
41 cmark
204 cmark
42 203 14 gmark
42 cmark
203 cmark
44 202 9 gmark
44 cmark
202 cmark
45 201 5 gmark
45 cmark
201 cmark
46 200 7 gmark
46 cmark
200 cmark
47 199 9 gmark
47 cmark
199 cmark
48 198 7 gmark
48 cmark
198 cmark
49 197 7 gmark
49 cmark
197 cmark
65 195 6 gmark
80 185 9 gmark
80 cmark
81 184 2 gmark
81 cmark
184 cmark
82 183 14 gmark
83 182 12 gmark
83 cmark
182 cmark
105 181 5 gmark
105 cmark
181 cmark
106 180 7 gmark
106 cmark
180 cmark
107 cmark
179 cmark
108 cmark
178 cmark
109 cmark
177 cmark
110 cmark
176 cmark
111 175 1 gmark
111 cmark
175 cmark
112 174 1 gmark
112 cmark
174 cmark
113 173 5 gmark
113 cmark
173 cmark
114 172 5 gmark
114 cmark
172 cmark
115 171 5 gmark
115 cmark
171 cmark
116 170 6 gmark
116 cmark
170 cmark

% End Annotations
showpage
end
%%EOF
