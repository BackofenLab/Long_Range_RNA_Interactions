%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Jun 17 09:14:09 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 -140 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

/ConsLegend { % xloc yloc tics range ConsLegend -> []
  /STR 8 string def
  /colshift 0.16 def
  /sep 0.1 def
  /range exch def
  % precompute number of tics but leave one tics for range numbers
  dup /tics exch dup 1 le { pop 42 } if def
  /lasttick exch dup 1 eq { pop 1.0 } { dup 1 gt { cvi } if  } ifelse def
  
  gsave
    /Helvetica findfont 10 scalefont setfont
    xmin xmax add size sub 2 div
    ymin ymax add size sub 2 div translate
    size dup scale
    translate
    0.015 dup scale
    % legend lines
    gsave 
    0.5 setgray
    0.05 setlinewidth
    newpath
    -1.5 2.5 moveto 10.1 2.5 lineto
    stroke
    newpath
    -1.5 1.1 moveto 10.1 1.1 lineto
    stroke
    newpath
    -1.5 2.5 moveto -1.5 -5 -6 sep mul add lineto
    stroke
    newpath
    10.1 1.1 moveto 10.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 1.1 moveto -0.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 -5 -6 sep mul add moveto 10.1 -5 -6 sep mul add lineto
    stroke
    grestore
    % color gradients
      6 -1 1
      {
        % get current number of different base pairs
        dup 1 sub 6 exch sub /curnum exch STR cvs def
        % compute y-position
        dup 6 sub dup sep mul add /ypos exch def
        % draw number of different base pairs
        -1 ypos moveto gsave 0.1 dup scale curnum show grestore
        % compute current color
        6 exch sub colshift mul
        /curcol exch def
        % draw gradient for counter examples
        gsave
        10 tics 1 add div 1 scale
        0 1 tics
        {
            dup ypos moveto
            tics div range mul 1 exch sub
            curcol exch hsb
            1 0 rlineto 0 1 rlineto -1 0 rlineto closepath fill
        } for
        grestore
      } for
    0 setgray
    % legend labels
    0.1 1.2 sep add moveto (0) gsave 0.1 dup scale show grestore
    9.4 1.2 sep add moveto lasttick STR cvs gsave 0.1 dup scale show grestore
    1 3 moveto (counter examples) gsave 0.1 dup scale show grestore
    -2 -4.5 moveto 90 rotate (base pairs)  gsave 0.1 dup scale show grestore
%    gsave 0.1 dup scale dup stringwidth pop -2 div 0 rmoveto show grestore
  grestore
} bind def

%%EndProlog

% data start here
/cutpoint 110 def
/sequence { (\
UUUCUACUGAAAGGAGUAGAAGAAAGGAGAUUCAUUCCCAAUGGCAACAAAGGGGAUGAAUAAGUCUCGGGCUCGAUCCCGAGGCGUCAAUAUGGUAGCGGCUAGAGUGA CCCAUUCCCUCCCGAGCACACAUAGCGGACCAUAUUGACGCCAGGGAAAGACCGGAGACACUCCUUGAUUCUCACCUUUCUCGCCCUAAAGCACAGAUUGCUUGAAUGCAGGGCGGGGAAGUUGAGAACCAACUAGUGUCU\
) } def
/len { sequence length } bind def

/coor [
[133.73196411 216.94389343]
[129.50596619 231.33628845]
[125.27998352 245.72868347]
[121.05399323 260.12106323]
[116.82801056 274.51345825]
[112.60202026 288.90585327]
[108.37602997 303.29824829]
[104.15003967 317.69064331]
[111.94325256 331.43988037]
[107.65124512 346.65020752]
[93.82038879 354.29763794]
[78.65628052 349.84503174]
[71.15552521 335.93411255]
[75.76818085 320.81793213]
[89.75764465 313.46466064]
[93.98363495 299.07226562]
[98.20962524 284.67987061]
[102.43561554 270.28747559]
[106.66159821 255.89508057]
[110.88758850 241.50268555]
[115.11357880 227.11029053]
[119.33956909 212.71789551]
[130.25767517 196.85403442]
[145.08323669 191.37695312]
[136.05683899 179.39678955]
[127.03044128 167.41664124]
[118.00404358 155.43647766]
[108.97763824 143.45632935]
[99.95124054 131.47616577]
[85.38883209 127.87947845]
[71.82277679 134.27964783]
[58.25672150 140.67982483]
[44.69066620 147.07998657]
[31.12461281 153.48014832]
[17.55855751 159.88032532]
[3.99250317 166.28048706]
[-9.57355118 172.68066406]
[-23.13960648 179.08082581]
[-36.70566177 185.48100281]
[-42.12603378 200.08433533]
[-55.97511673 206.38175964]
[-69.86375427 201.12426758]
[-83.42980957 207.52442932]
[-92.32593536 221.30090332]
[-108.68907928 220.21472168]
[-115.68623352 205.38327026]
[-106.11933136 192.06387329]
[-89.82997894 193.95837402]
[-76.26392365 187.55821228]
[-71.48986816 173.49606323]
[-57.82313538 166.81213379]
[-43.10583115 171.91494751]
[-29.53977585 165.51477051]
[-15.97372055 159.11460876]
[-2.40766573 152.71443176]
[11.15838909 146.31427002]
[24.72444344 139.91409302]
[38.29049683 133.51393127]
[51.85655212 127.11376190]
[65.42260742 120.71359253]
[78.98866272 114.31342316]
[76.83279419 102.07855225]
[80.72832489 91.41567993]
[88.64403534 84.84954071]
[85.13782501 70.26507568]
[81.63161469 55.68061829]
[78.12540436 41.09615707]
[74.61920166 26.51169395]
[63.87049103 14.90239525]
[68.41847992 0.71912968]
[64.91227722 -13.86533165]
[59.87652969 -21.45316696]
[61.45427322 -28.65264702]
[58.12942886 -43.27951813]
[45.03815460 -51.72086334]
[41.87465668 -66.60195923]
[50.00286484 -79.03046417]
[46.67802429 -93.65734100]
[43.35317993 -108.28421021]
[40.02833939 -122.91108704]
[29.56128120 -130.41761780]
[27.08211327 -142.64895630]
[33.38330460 -152.95487976]
[30.24034309 -167.62191772]
[27.09737968 -182.28894043]
[23.95441628 -196.95597839]
[20.81145477 -211.62300110]
[17.66849136 -226.29003906]
[14.52552795 -240.95706177]
[11.38256454 -255.62409973]
[8.23960209 -270.29113770]
[5.09663868 -284.95816040]
[1.95367539 -299.62518311]
[-1.18928766 -314.29220581]
[-4.33225060 -328.95925903]
[-7.47521400 -343.62628174]
[-11.58922768 -348.74615479]
[-12.39910984 -354.33697510]
[-10.50933743 -358.69638062]
[-20.66839981 -370.82504272]
[-15.42183018 -384.76501465]
[-18.19960976 -399.50555420]
[-20.97739029 -414.24612427]
[-23.75516891 -428.98666382]
[-33.93539810 -436.87783813]
[-35.95730591 -449.19299316]
[-29.27665710 -459.25711060]
[-31.87118721 -474.03100586]
[-34.46572113 -488.80493164]
[-49.47853851 -490.47583008]
[-63.41194916 -496.30993652]
[-75.13642883 -505.83428955]
[-83.70153809 -518.27679443]
[-88.41292572 -532.62878418]
[-88.88867188 -547.72680664]
[-85.09020996 -562.34692383]
[-77.32545471 -575.30395508]
[-66.22386932 -585.54760742]
[-52.68540573 -592.24737549]
[-37.80756760 -594.86010742]
[-22.79643631 -593.17413330]
[-8.86889362 -587.32604980]
[2.84601521 -577.78991699]
[11.39861488 -565.33880615]
[16.09558487 -550.98211670]
[16.55616379 -535.88360596]
[12.74301243 -521.26733398]
[4.96524715 -508.31805420]
[-6.14662361 -498.08560181]
[-19.69181061 -491.39944458]
[-17.09727859 -476.62554932]
[-14.50274658 -461.85162354]
[-2.52480221 -449.01037598]
[-9.01461506 -431.76443481]
[-6.23683548 -417.02389526]
[-3.45905590 -402.28332520]
[-0.68127608 -387.54278564]
[9.27910042 -376.46847534]
[4.23121691 -361.47418213]
[7.19181681 -346.76925659]
[10.33477974 -332.10220337]
[13.47774315 -317.43518066]
[16.62070656 -302.76815796]
[19.76366997 -288.10113525]
[22.90663147 -273.43408203]
[26.04959488 -258.76705933]
[29.19255829 -244.10003662]
[32.33552170 -229.43299866]
[35.47848511 -214.76597595]
[38.62144852 -200.09893799]
[41.76441193 -185.43190002]
[44.90737534 -170.76487732]
[48.05033875 -156.09783936]
[60.49822617 -143.71159363]
[54.65521240 -126.23592377]
[57.98005295 -111.60905457]
[61.30489731 -96.98217773]
[64.62973785 -82.35530853]
[77.33190155 -74.66175842]
[80.91212463 -59.87539291]
[72.75630188 -46.60436249]
[76.08114624 -31.97748756]
[79.49673462 -17.37154007]
[83.00294495 -2.78707838]
[93.50086975 7.77904272]
[89.20365906 23.00548744]
[92.70986938 37.58994675]
[96.21607971 52.17440796]
[99.72228241 66.75887299]
[103.22849274 81.34333038]
[121.90040588 96.49768066]
[111.93139648 122.44976807]
[120.95779419 134.42993164]
[129.98419189 146.41007996]
[139.01058960 158.39024353]
[148.03698730 170.37039185]
[157.06338501 182.35054016]
[168.46040344 192.10289001]
[184.27828979 191.77841187]
[191.86036682 204.59875488]
[205.09193420 211.66458130]
[218.32350159 218.73039246]
[231.55505371 225.79620361]
[244.78662109 232.86203003]
[258.01818848 239.92784119]
[273.83605957 239.60337830]
[281.41815186 252.42372131]
[294.64971924 259.48953247]
[307.88128662 266.55535889]
[321.11282349 273.62115479]
[334.34439087 280.68698120]
[347.57595825 287.75280762]
[360.80752563 294.81860352]
[374.03909302 301.88442993]
[387.27062988 308.95025635]
[400.50219727 316.01608276]
[413.73376465 323.08187866]
[426.96533203 330.14770508]
[450.01776123 327.52993774]
[461.07046509 347.07189941]
[474.71496582 353.30313110]
[488.35943604 359.53436279]
[502.00390625 365.76556396]
[515.64837646 371.99679565]
[531.12194824 367.76010132]
[543.99645996 377.33227539]
[544.39569092 393.37036133]
[532.01348877 403.57131958]
[516.34826660 400.10983276]
[509.41717529 385.64126587]
[495.77267456 379.41006470]
[482.12820435 373.17883301]
[468.48373413 366.94760132]
[454.83926392 360.71636963]
[449.07202148 364.74362183]
[442.20458984 366.55416870]
[435.06628418 365.88101196]
[428.53582764 362.76007080]
[423.43331909 357.53143311]
[420.41717529 350.80282593]
[419.89950562 343.37927246]
[406.66793823 336.31344604]
[393.43640137 329.24761963]
[380.20483398 322.18182373]
[366.97326660 315.11599731]
[353.74169922 308.05017090]
[340.51013184 300.98437500]
[327.27856445 293.91854858]
[314.04702759 286.85272217]
[300.81546021 279.78692627]
[287.58389282 272.72109985]
[274.35232544 265.65527344]
[259.48086548 266.48513794]
[250.95236206 253.15940857]
[237.72079468 246.09358215]
[224.48924255 239.02777100]
[211.25767517 231.96195984]
[198.02612305 224.89613342]
[184.79455566 217.83032227]
[169.92308044 218.66018677]
[161.39459229 205.33444214]
[154.47892761 208.23680115]
[162.70318604 220.78118896]
[170.92744446 233.32557678]
[183.25659180 241.86911011]
[186.99777222 256.39508057]
[180.32955933 269.83139038]
[166.49842834 275.63653564]
[152.23814392 270.98419189]
[144.49142456 258.13940430]
[147.03047180 243.35464478]
[143.83905029 228.69808960]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[4 19]
[5 18]
[6 17]
[7 16]
[8 15]
[24 177]
[25 176]
[26 175]
[27 174]
[28 173]
[29 172]
[30 61]
[31 60]
[32 59]
[33 58]
[34 57]
[35 56]
[36 55]
[37 54]
[38 53]
[39 52]
[42 49]
[43 48]
[64 170]
[65 169]
[66 168]
[67 167]
[68 166]
[70 164]
[71 163]
[73 162]
[74 161]
[77 158]
[78 157]
[79 156]
[80 155]
[83 153]
[84 152]
[85 151]
[86 150]
[87 149]
[88 148]
[89 147]
[90 146]
[91 145]
[92 144]
[93 143]
[94 142]
[95 141]
[96 140]
[99 139]
[101 137]
[102 136]
[103 135]
[104 134]
[107 132]
[108 131]
[109 130]
[178 241]
[180 239]
[181 238]
[182 237]
[183 236]
[184 235]
[185 234]
[187 232]
[188 231]
[189 230]
[190 229]
[191 228]
[192 227]
[193 226]
[194 225]
[195 224]
[196 223]
[197 222]
[198 221]
[200 214]
[201 213]
[202 212]
[203 211]
[204 210]
] def

init

% Start Annotations
1 110 9  0 0.9 0.2 omark
112 252 9  1 0.1 0.2 omark

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
