%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Jun 17 09:14:08 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 -140 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

/ConsLegend { % xloc yloc tics range ConsLegend -> []
  /STR 8 string def
  /colshift 0.16 def
  /sep 0.1 def
  /range exch def
  % precompute number of tics but leave one tics for range numbers
  dup /tics exch dup 1 le { pop 42 } if def
  /lasttick exch dup 1 eq { pop 1.0 } { dup 1 gt { cvi } if  } ifelse def
  
  gsave
    /Helvetica findfont 10 scalefont setfont
    xmin xmax add size sub 2 div
    ymin ymax add size sub 2 div translate
    size dup scale
    translate
    0.015 dup scale
    % legend lines
    gsave 
    0.5 setgray
    0.05 setlinewidth
    newpath
    -1.5 2.5 moveto 10.1 2.5 lineto
    stroke
    newpath
    -1.5 1.1 moveto 10.1 1.1 lineto
    stroke
    newpath
    -1.5 2.5 moveto -1.5 -5 -6 sep mul add lineto
    stroke
    newpath
    10.1 1.1 moveto 10.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 1.1 moveto -0.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 -5 -6 sep mul add moveto 10.1 -5 -6 sep mul add lineto
    stroke
    grestore
    % color gradients
      6 -1 1
      {
        % get current number of different base pairs
        dup 1 sub 6 exch sub /curnum exch STR cvs def
        % compute y-position
        dup 6 sub dup sep mul add /ypos exch def
        % draw number of different base pairs
        -1 ypos moveto gsave 0.1 dup scale curnum show grestore
        % compute current color
        6 exch sub colshift mul
        /curcol exch def
        % draw gradient for counter examples
        gsave
        10 tics 1 add div 1 scale
        0 1 tics
        {
            dup ypos moveto
            tics div range mul 1 exch sub
            curcol exch hsb
            1 0 rlineto 0 1 rlineto -1 0 rlineto closepath fill
        } for
        grestore
      } for
    0 setgray
    % legend labels
    0.1 1.2 sep add moveto (0) gsave 0.1 dup scale show grestore
    9.4 1.2 sep add moveto lasttick STR cvs gsave 0.1 dup scale show grestore
    1 3 moveto (counter examples) gsave 0.1 dup scale show grestore
    -2 -4.5 moveto 90 rotate (base pairs)  gsave 0.1 dup scale show grestore
%    gsave 0.1 dup scale dup stringwidth pop -2 div 0 rmoveto show grestore
  grestore
} bind def

%%EndProlog

% data start here
/cutpoint 110 def
/sequence { (\
UUUAACACAGUCUGAAUAGUUUUUUAGCAAGGGAUUUCCCAUGUCUAAAAAACCAGGAAAGUCCGCUGCAAAGCGGACUGUCAAUAUGCUAAAACGCCUGGCUAGCGUGU GUGGAGACCCCUCAGCACCAAGCGCGAAACAAACAGCAUAUUGACGCCUGGGAAAGACCGGGAGAUCCUCUGCUUUCCAUCACCAGCCACUAGGCACAGAUCGCCGCAAGUAGUGGCUGGUGGUGAAAAACACAUGGAUCU\
) } def
/len { sequence length } bind def

/coor [
[108.35402679 365.84271240]
[97.85006714 376.91653442]
[83.57852173 382.32818604]
[68.37303162 381.00317383]
[55.25264359 373.20455933]
[46.82242966 360.48080444]
[44.75621033 345.35818481]
[49.46423721 330.83932495]
[60.01172638 319.80694580]
[74.30446625 314.45153809]
[75.60665131 299.50817871]
[76.90883636 284.56481934]
[78.21101379 269.62142944]
[79.51319885 254.67807007]
[68.67565918 246.90687561]
[63.04184723 234.70031738]
[64.17742920 221.19586182]
[71.89274597 209.92301941]
[84.26456451 203.88085938]
[85.75219727 188.95481873]
[87.23983002 174.02876282]
[88.72746277 159.10272217]
[90.21509552 144.17666626]
[91.70273590 129.25061035]
[74.58269501 107.61815643]
[82.84178162 85.19253540]
[75.36868286 72.18666077]
[67.89558411 59.18078995]
[60.42248535 46.17491531]
[46.83845520 38.06413269]
[47.20633316 23.17407227]
[39.73323441 10.16819763]
[32.26013565 -2.83767724]
[24.78703690 -15.84355259]
[17.31393623 -28.84942627]
[9.84083652 -41.85530090]
[2.36773729 -54.86117554]
[-5.10536242 -67.86705017]
[-12.57846165 -80.87292480]
[-20.05156136 -93.87879944]
[-32.26134491 -97.98107147]
[-38.22265625 -108.94530487]
[-35.22529221 -120.64714050]
[-42.53632355 -133.74481201]
[-49.84735107 -146.84248352]
[-57.15837860 -159.94013977]
[-68.55822754 -159.30238342]
[-79.32824707 -162.93598938]
[-87.93383789 -170.28298950]
[-93.16382599 -180.25924683]
[-94.30083466 -191.41426086]
[-91.21946716 -202.14210510]
[-84.39891815 -210.91255188]
[-91.21707153 -224.27340698]
[-98.03522491 -237.63427734]
[-104.85337830 -250.99514771]
[-111.67153168 -264.35601807]
[-124.22461700 -264.20425415]
[-135.91265869 -271.50030518]
[-142.37420654 -285.04336548]
[-157.19387817 -287.36230469]
[-172.01354980 -289.68121338]
[-186.83322144 -292.00012207]
[-201.65289307 -294.31906128]
[-216.47254944 -296.63796997]
[-231.29222107 -298.95687866]
[-246.11189270 -301.27581787]
[-261.20767212 -294.86880493]
[-274.13955688 -304.95336914]
[-271.60433960 -321.15536499]
[-256.21002197 -326.80755615]
[-243.79298401 -316.09548950]
[-228.97331238 -313.77655029]
[-214.15364075 -311.45764160]
[-199.33396912 -309.13873291]
[-184.51429749 -306.81979370]
[-169.69462585 -304.50088501]
[-154.87495422 -302.18197632]
[-140.05528259 -299.86303711]
[-129.74913025 -310.76181030]
[-132.89208984 -325.42883301]
[-136.03504944 -340.09588623]
[-139.17800903 -354.76290894]
[-142.32098389 -369.42993164]
[-145.46394348 -384.09695435]
[-148.60690308 -398.76400757]
[-151.74986267 -413.43103027]
[-154.89283752 -428.09805298]
[-158.03579712 -442.76507568]
[-161.17875671 -457.43212891]
[-179.74453735 -462.58657837]
[-193.03378296 -476.42459106]
[-197.39559937 -495.02352905]
[-191.69345093 -513.17010498]
[-177.59974670 -525.82153320]
[-181.46702576 -540.31439209]
[-185.33432007 -554.80731201]
[-188.98294067 -558.46484375]
[-190.70928955 -562.72711182]
[-190.60263062 -566.76739502]
[-189.06498718 -569.91217041]
[-192.38983154 -584.53906250]
[-195.71467590 -599.16589355]
[-206.31840515 -610.90777588]
[-201.59465027 -625.03350830]
[-206.53578186 -632.68328857]
[-204.86875916 -639.86260986]
[-208.01173401 -654.52960205]
[-211.15469360 -669.19665527]
[-214.29765320 -683.86370850]
[-222.78221130 -687.86572266]
[-228.40350342 -695.20385742]
[-230.00967407 -704.16754150]
[-227.36686707 -712.73852539]
[-221.18385315 -719.04504395]
[-223.77839661 -733.81896973]
[-226.37292480 -748.59289551]
[-237.31442261 -760.80828857]
[-231.94992065 -776.30517578]
[-215.79794312 -779.14172363]
[-205.47427368 -766.39990234]
[-211.59901428 -751.18743896]
[-209.00448608 -736.41351318]
[-206.40994263 -721.63958740]
[-191.85014343 -706.99188232]
[-199.63063049 -687.00665283]
[-196.48765564 -672.33959961]
[-193.34469604 -657.67260742]
[-190.20173645 -643.00555420]
[-186.96777344 -628.35833740]
[-176.60185242 -617.66265869]
[-181.08779907 -602.49072266]
[-177.76295471 -587.86389160]
[-174.43811035 -573.23699951]
[-170.84143066 -558.67462158]
[-166.97413635 -544.18170166]
[-163.10684204 -529.68878174]
[-152.16880798 -528.62640381]
[-142.04386902 -524.28607178]
[-133.69223022 -517.06195068]
[-127.91124725 -507.62240601]
[-125.25928497 -496.84835815]
[-126.00180817 -485.75100708]
[-130.08491516 -475.37695312]
[-137.13891602 -466.70938110]
[-146.51173401 -460.57507324]
[-143.36875916 -445.90805054]
[-140.22579956 -431.24102783]
[-137.08283997 -416.57397461]
[-133.93988037 -401.90695190]
[-130.79690552 -387.23992920]
[-127.65394592 -372.57290649]
[-124.51098633 -357.90585327]
[-121.36801910 -343.23883057]
[-118.22505951 -328.57180786]
[-115.08209229 -313.90478516]
[-91.55056763 -296.05899048]
[-98.31066895 -271.17416382]
[-91.49251556 -257.81329346]
[-84.67436218 -244.45243835]
[-77.85620880 -231.09156799]
[-71.03804779 -217.73069763]
[-52.41490173 -215.86761475]
[-38.58866501 -203.03047180]
[-35.29876328 -184.29965210]
[-44.06071472 -167.25117493]
[-36.74968338 -154.15350342]
[-29.43865585 -141.05583191]
[-22.12762642 -127.95817566]
[-6.59152269 -119.77291107]
[-7.04568624 -101.35189819]
[0.42741311 -88.34602356]
[7.90051270 -75.34014893]
[15.37361240 -62.33427811]
[22.84671211 -49.32840347]
[30.31981087 -36.32252502]
[37.79291153 -23.31665230]
[45.26601028 -10.31077671]
[52.73910904 2.69509792]
[60.21221161 15.70097256]
[73.26171112 22.88148499]
[73.42835999 38.70181274]
[80.90145874 51.70769119]
[88.37455750 64.71356201]
[95.84765625 77.71943665]
[108.46951294 76.90469360]
[120.57291412 83.24198914]
[128.15908813 95.80705261]
[128.14543152 111.50121307]
[140.81434631 119.53232574]
[153.48324585 127.56343842]
[166.15216064 135.59454346]
[178.82107544 143.62565613]
[191.48997498 151.65676880]
[204.15888977 159.68788147]
[216.82778931 167.71899414]
[229.49670410 175.75009155]
[242.16561890 183.78120422]
[254.83451843 191.81231689]
[267.50344849 199.84342957]
[280.17233276 207.87454224]
[292.84124756 215.90565491]
[305.51016235 223.93675232]
[318.42224121 231.57077026]
[331.56503296 238.80035400]
[344.70785522 246.02992249]
[359.22216797 240.21028137]
[374.06539917 245.13090515]
[382.22900391 258.46844482]
[379.85839844 273.92529297]
[368.07287598 284.20318604]
[352.43722534 284.44927979]
[340.33413696 274.54730225]
[337.47827148 259.17272949]
[324.33547974 251.94314575]
[311.19265747 244.71357727]
[312.95843506 259.60928345]
[302.50476074 270.36663818]
[287.56460571 269.02801514]
[279.18975830 256.58364868]
[283.57540894 242.23912048]
[297.47906494 236.60566711]
[284.81015015 228.57455444]
[272.14123535 220.54344177]
[259.47232056 212.51234436]
[246.80342102 204.48123169]
[234.13450623 196.45011902]
[221.46559143 188.41900635]
[208.79669189 180.38789368]
[196.12777710 172.35678101]
[183.45886230 164.32568359]
[170.78996277 156.29457092]
[158.12104797 148.26345825]
[145.45213318 140.23234558]
[132.78323364 132.20123291]
[120.11431885 124.17012787]
[106.62878418 130.73825073]
[105.14115143 145.66430664]
[103.65351105 160.59034729]
[102.16587830 175.51640320]
[100.67824554 190.44244385]
[99.19061279 205.36849976]
[111.97912598 216.45835876]
[115.59190369 232.82522583]
[108.79637909 247.96449280]
[94.45656586 255.98025513]
[93.15438843 270.92361450]
[91.85220337 285.86697388]
[90.55001831 300.81036377]
[89.24784088 315.75372314]
[102.39883423 323.50061035]
[110.87908936 336.19107056]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 250]
[11 249]
[12 248]
[13 247]
[14 246]
[19 242]
[20 241]
[21 240]
[22 239]
[23 238]
[24 237]
[26 185]
[27 184]
[28 183]
[29 182]
[31 180]
[32 179]
[33 178]
[34 177]
[35 176]
[36 175]
[37 174]
[38 173]
[39 172]
[40 171]
[43 169]
[44 168]
[45 167]
[46 166]
[53 162]
[54 161]
[55 160]
[56 159]
[57 158]
[60 79]
[61 78]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
[80 156]
[81 155]
[82 154]
[83 153]
[84 152]
[85 151]
[86 150]
[87 149]
[88 148]
[89 147]
[90 146]
[95 137]
[96 136]
[97 135]
[101 134]
[102 133]
[103 132]
[105 130]
[107 129]
[108 128]
[109 127]
[110 126]
[115 124]
[116 123]
[117 122]
[189 236]
[190 235]
[191 234]
[192 233]
[193 232]
[194 231]
[195 230]
[196 229]
[197 228]
[198 227]
[199 226]
[200 225]
[201 224]
[202 223]
[203 222]
[204 216]
[205 215]
[206 214]
] def

init

% Start Annotations
1 110 9  0 0.9 0.2 omark
112 252 9  1 0.1 0.2 omark

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
