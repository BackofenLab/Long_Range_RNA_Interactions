%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Jun 17 09:14:09 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 -140 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

/ConsLegend { % xloc yloc tics range ConsLegend -> []
  /STR 8 string def
  /colshift 0.16 def
  /sep 0.1 def
  /range exch def
  % precompute number of tics but leave one tics for range numbers
  dup /tics exch dup 1 le { pop 42 } if def
  /lasttick exch dup 1 eq { pop 1.0 } { dup 1 gt { cvi } if  } ifelse def
  
  gsave
    /Helvetica findfont 10 scalefont setfont
    xmin xmax add size sub 2 div
    ymin ymax add size sub 2 div translate
    size dup scale
    translate
    0.015 dup scale
    % legend lines
    gsave 
    0.5 setgray
    0.05 setlinewidth
    newpath
    -1.5 2.5 moveto 10.1 2.5 lineto
    stroke
    newpath
    -1.5 1.1 moveto 10.1 1.1 lineto
    stroke
    newpath
    -1.5 2.5 moveto -1.5 -5 -6 sep mul add lineto
    stroke
    newpath
    10.1 1.1 moveto 10.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 1.1 moveto -0.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 -5 -6 sep mul add moveto 10.1 -5 -6 sep mul add lineto
    stroke
    grestore
    % color gradients
      6 -1 1
      {
        % get current number of different base pairs
        dup 1 sub 6 exch sub /curnum exch STR cvs def
        % compute y-position
        dup 6 sub dup sep mul add /ypos exch def
        % draw number of different base pairs
        -1 ypos moveto gsave 0.1 dup scale curnum show grestore
        % compute current color
        6 exch sub colshift mul
        /curcol exch def
        % draw gradient for counter examples
        gsave
        10 tics 1 add div 1 scale
        0 1 tics
        {
            dup ypos moveto
            tics div range mul 1 exch sub
            curcol exch hsb
            1 0 rlineto 0 1 rlineto -1 0 rlineto closepath fill
        } for
        grestore
      } for
    0 setgray
    % legend labels
    0.1 1.2 sep add moveto (0) gsave 0.1 dup scale show grestore
    9.4 1.2 sep add moveto lasttick STR cvs gsave 0.1 dup scale show grestore
    1 3 moveto (counter examples) gsave 0.1 dup scale show grestore
    -2 -4.5 moveto 90 rotate (base pairs)  gsave 0.1 dup scale show grestore
%    gsave 0.1 dup scale dup stringwidth pop -2 div 0 rmoveto show grestore
  grestore
} bind def

%%EndProlog

% data start here
/cutpoint 110 def
/sequence { (\
UAACACAGUGUGAAUAGUUUUUUGAACAGAGGUGAAAACCAUGUCUAAAAAACCAGGAGGACCCGGAAAGAACCGGGUCGUUAAUAUGCUGAAGCGCACAUCCCGCGCUA AGACCCCUUGGCAGUGAACGCAAAUAAAAACAGCAUAUUGACACCUGGGAUAGACUGGGAGACCCUCUGCUUAUUUCAACACCAGCCACUCGGCACAGAACGCCGUAAGUGUGGCUGGUGGUGAAAAUAAACACAGAGUCU\
) } def
/len { sequence length } bind def

/coor [
[96.20863342 252.63258362]
[81.66091156 246.89691162]
[74.24901581 233.12745667]
[77.47260284 217.82574463]
[89.80960083 208.21676636]
[90.18208313 193.22138977]
[79.76071167 182.64166260]
[79.92485046 167.42890930]
[91.09250641 156.56976318]
[91.46498871 141.57438660]
[91.83747101 126.57901001]
[92.20995331 111.58363342]
[86.93498993 125.62553406]
[75.55596924 135.39884949]
[60.87870407 138.49368286]
[46.52232742 134.14692688]
[36.02681732 123.43038177]
[31.98015594 108.98654175]
[35.38016891 94.37696075]
[45.38848114 83.20405579]
[59.53725052 78.22285461]
[74.33766937 80.66160583]
[86.13952637 89.91799927]
[78.02991486 77.29919434]
[69.92029572 64.68038940]
[55.95033264 57.25404739]
[55.57847977 42.36408615]
[47.46886826 29.74528122]
[39.35925674 17.12647820]
[31.24964333 4.50767565]
[23.14003181 -8.11112785]
[15.03041840 -20.72993088]
[7.77848101 -26.23841286]
[6.89958382 -33.55615234]
[-8.38955212 -33.12076187]
[-21.75557327 -40.34891891]
[-29.65650558 -53.21133423]
[-30.05577278 -68.20121765]
[-22.94624519 -81.29015350]
[-30.89854431 -94.00867462]
[-38.85084534 -106.72720337]
[-46.03382492 -112.32530975]
[-46.82178879 -119.65339661]
[-54.61554718 -132.46969604]
[-62.40930557 -145.28598022]
[-70.20306396 -158.10227966]
[-77.99682617 -170.91856384]
[-88.61762238 -170.77862549]
[-98.27037811 -175.01412964]
[-105.25115967 -182.80456543]
[-108.35797882 -192.70861816]
[-107.09742737 -202.93048096]
[-101.76170349 -211.64550781]
[-109.07273102 -224.74316406]
[-116.38376617 -237.84083557]
[-123.69479370 -250.93850708]
[-131.00581360 -264.03616333]
[-143.69792175 -263.43157959]
[-155.75601196 -270.46771240]
[-162.63981628 -284.03985596]
[-177.45948792 -286.35879517]
[-192.27914429 -288.67770386]
[-207.09881592 -290.99661255]
[-221.91848755 -293.31555176]
[-236.73815918 -295.63446045]
[-251.55783081 -297.95336914]
[-264.17715454 -288.43872070]
[-279.81640625 -290.71676636]
[-289.19708252 -303.43597412]
[-286.75384521 -319.05026245]
[-273.93615723 -328.29595947]
[-258.34857178 -325.68774414]
[-249.23890686 -312.77304077]
[-234.41925049 -310.45413208]
[-219.59957886 -308.13522339]
[-204.77990723 -305.81628418]
[-189.96023560 -303.49737549]
[-175.14056396 -301.17846680]
[-160.32089233 -298.85952759]
[-150.21951294 -309.94836426]
[-153.90653992 -324.48815918]
[-157.59358215 -339.02795410]
[-161.28060913 -353.56774902]
[-164.96763611 -368.10757446]
[-168.65467834 -382.64736938]
[-172.34170532 -397.18716431]
[-176.02874756 -411.72695923]
[-179.71577454 -426.26675415]
[-183.40281677 -440.80654907]
[-187.08984375 -455.34637451]
[-190.77688599 -469.88616943]
[-210.61575317 -463.93484497]
[-234.54132080 -478.06198120]
[-243.41827393 -490.15328979]
[-252.29521179 -502.24459839]
[-261.17214966 -514.33593750]
[-270.04910278 -526.42724609]
[-285.66448975 -527.25994873]
[-297.05596924 -537.97290039]
[-298.84484863 -553.50787354]
[-290.18643188 -566.52960205]
[-275.16897583 -570.88970947]
[-260.88327026 -564.52941895]
[-254.07460022 -550.45196533]
[-257.95779419 -535.30419922]
[-249.08085632 -523.21289062]
[-240.20390320 -511.12155151]
[-231.32696533 -499.03024292]
[-222.45001221 -486.93893433]
[-215.30850220 -489.22994995]
[-219.89057922 -503.51296997]
[-224.47267151 -517.79602051]
[-229.05474854 -532.07904053]
[-233.63682556 -546.36199951]
[-238.21867371 -560.64514160]
[-223.93550110 -565.22674561]
[-219.35380554 -550.94409180]
[-214.77172852 -536.66107178]
[-210.18965149 -522.37805176]
[-205.60757446 -508.09506226]
[-201.02549744 -493.81204224]
[-193.88398743 -496.10308838]
[-193.69772339 -511.10192871]
[-205.66828918 -521.16369629]
[-208.31976318 -536.57489014]
[-200.40017700 -550.05871582]
[-185.64894104 -555.24859619]
[-171.03111267 -549.69403076]
[-163.44880676 -536.01763916]
[-166.48214722 -520.67712402]
[-178.69888306 -510.91567993]
[-178.88513184 -495.91683960]
[-170.78634644 -508.54257202]
[-157.31420898 -515.13818359]
[-142.37480164 -513.79125977]
[-130.29960632 -504.89239502]
[-124.58966064 -491.02169800]
[-126.90048981 -476.20077515]
[-136.56210327 -464.72674561]
[-150.77323914 -459.92636108]
[-165.41357422 -463.19143677]
[-176.23707581 -473.57318115]
[-172.55004883 -459.03338623]
[-168.86300659 -444.49359131]
[-165.17597961 -429.95379639]
[-161.48893738 -415.41400146]
[-157.80191040 -400.87420654]
[-154.11488342 -386.33441162]
[-150.42784119 -371.79458618]
[-146.74081421 -357.25479126]
[-143.05377197 -342.71499634]
[-139.36674500 -328.17520142]
[-135.67970276 -313.63540649]
[-111.89667511 -296.29528809]
[-117.90815735 -271.34719849]
[-110.59712219 -258.24954224]
[-103.28609467 -245.15187073]
[-95.97506714 -232.05419922]
[-88.66403961 -218.95652771]
[-69.56641388 -214.99801636]
[-59.41688538 -197.98551941]
[-65.18053436 -178.71232605]
[-57.38677597 -165.89602661]
[-49.59301376 -153.07974243]
[-41.79925537 -140.26344299]
[-34.00549698 -127.44715881]
[-26.13231659 -114.67950439]
[-18.18001747 -101.96097565]
[-10.22771835 -89.24244690]
[4.65278769 -89.90284729]
[17.95439911 -82.98020172]
[26.05854797 -70.24485016]
[26.70427322 -55.06328583]
[19.61811066 -41.50845337]
[27.64922142 -28.83954239]
[35.75883484 -16.22073936]
[43.86844635 -3.60193682]
[51.97805786 9.01686668]
[60.08766937 21.63566971]
[68.19728088 34.25447083]
[81.58719635 40.77823257]
[82.53910065 56.57077789]
[90.64871216 69.18958282]
[98.75832367 81.80838776]
[140.95436096 84.37483215]
[153.91358948 91.92853546]
[166.87281799 99.48223877]
[179.83204651 107.03594971]
[192.79127502 114.58965302]
[208.61026001 114.85451508]
[215.70960999 127.94834900]
[228.66883850 135.50205994]
[241.62806702 143.05575562]
[254.58729553 150.60946655]
[267.54650879 158.16316223]
[280.50573730 165.71687317]
[293.46496582 173.27056885]
[306.42419434 180.82427979]
[319.38342285 188.37799072]
[332.34265137 195.93168640]
[354.71466064 194.44810486]
[364.59341431 213.71496582]
[377.91168213 220.61593628]
[391.22994995 227.51690674]
[404.54824829 234.41789246]
[418.91357422 228.23962402]
[433.87442017 232.79014587]
[442.36669922 245.92083740]
[440.38064575 261.43179321]
[428.85400391 271.99920654]
[413.22927856 272.63345337]
[400.88400269 263.03509521]
[397.64727783 247.73616028]
[384.32897949 240.83518982]
[371.01071167 233.93421936]
[357.69244385 227.03323364]
[350.91546631 230.93373108]
[343.05746460 231.86459351]
[335.37695312 229.60256958]
[329.13336182 224.44175720]
[325.38049316 217.15759277]
[324.78894043 208.89091492]
[311.82971191 201.33720398]
[298.87048340 193.78350830]
[285.91125488 186.22979736]
[272.95202637 178.67610168]
[259.99282837 171.12239075]
[247.03358459 163.56869507]
[234.07435608 156.01498413]
[221.11512756 148.46127319]
[208.15591431 140.90757751]
[193.26385498 141.18299866]
[185.23756409 127.54888153]
[172.27833557 119.99517059]
[159.31910706 112.44146729]
[146.35987854 104.88776398]
[133.40065002 97.33406067]
[126.85182190 100.98957825]
[137.85241699 111.18698120]
[131.55345154 124.80032349]
[116.65990448 123.01638031]
[113.75415802 108.30060577]
[107.20532227 111.95611572]
[106.83283997 126.95149231]
[106.46035767 141.94686890]
[106.08787537 156.94224548]
[116.70261383 168.34246826]
[116.11124420 183.54460144]
[105.17745972 193.59387207]
[104.80497742 208.58924866]
[116.64968109 218.79890442]
[119.10958099 234.24179077]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 250]
[6 249]
[9 246]
[10 245]
[11 244]
[12 243]
[23 184]
[24 183]
[25 182]
[27 180]
[28 179]
[29 178]
[30 177]
[31 176]
[32 175]
[34 174]
[39 169]
[40 168]
[41 167]
[43 166]
[44 165]
[45 164]
[46 163]
[47 162]
[53 159]
[54 158]
[55 157]
[56 156]
[57 155]
[60 79]
[61 78]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[80 153]
[81 152]
[82 151]
[83 150]
[84 149]
[85 148]
[86 147]
[87 146]
[88 145]
[89 144]
[90 143]
[91 142]
[93 109]
[94 108]
[95 107]
[96 106]
[97 105]
[122 132]
[123 131]
[185 237]
[186 236]
[187 235]
[188 234]
[189 233]
[191 231]
[192 230]
[193 229]
[194 228]
[195 227]
[196 226]
[197 225]
[198 224]
[199 223]
[200 222]
[202 216]
[203 215]
[204 214]
[205 213]
] def

init

% Start Annotations
1 110 9  0 0.9 0.2 omark
112 252 9  1 0.1 0.2 omark

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
