%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Jun 17 09:14:08 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 -140 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

/ConsLegend { % xloc yloc tics range ConsLegend -> []
  /STR 8 string def
  /colshift 0.16 def
  /sep 0.1 def
  /range exch def
  % precompute number of tics but leave one tics for range numbers
  dup /tics exch dup 1 le { pop 42 } if def
  /lasttick exch dup 1 eq { pop 1.0 } { dup 1 gt { cvi } if  } ifelse def
  
  gsave
    /Helvetica findfont 10 scalefont setfont
    xmin xmax add size sub 2 div
    ymin ymax add size sub 2 div translate
    size dup scale
    translate
    0.015 dup scale
    % legend lines
    gsave 
    0.5 setgray
    0.05 setlinewidth
    newpath
    -1.5 2.5 moveto 10.1 2.5 lineto
    stroke
    newpath
    -1.5 1.1 moveto 10.1 1.1 lineto
    stroke
    newpath
    -1.5 2.5 moveto -1.5 -5 -6 sep mul add lineto
    stroke
    newpath
    10.1 1.1 moveto 10.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 1.1 moveto -0.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 -5 -6 sep mul add moveto 10.1 -5 -6 sep mul add lineto
    stroke
    grestore
    % color gradients
      6 -1 1
      {
        % get current number of different base pairs
        dup 1 sub 6 exch sub /curnum exch STR cvs def
        % compute y-position
        dup 6 sub dup sep mul add /ypos exch def
        % draw number of different base pairs
        -1 ypos moveto gsave 0.1 dup scale curnum show grestore
        % compute current color
        6 exch sub colshift mul
        /curcol exch def
        % draw gradient for counter examples
        gsave
        10 tics 1 add div 1 scale
        0 1 tics
        {
            dup ypos moveto
            tics div range mul 1 exch sub
            curcol exch hsb
            1 0 rlineto 0 1 rlineto -1 0 rlineto closepath fill
        } for
        grestore
      } for
    0 setgray
    % legend labels
    0.1 1.2 sep add moveto (0) gsave 0.1 dup scale show grestore
    9.4 1.2 sep add moveto lasttick STR cvs gsave 0.1 dup scale show grestore
    1 3 moveto (counter examples) gsave 0.1 dup scale show grestore
    -2 -4.5 moveto 90 rotate (base pairs)  gsave 0.1 dup scale show grestore
%    gsave 0.1 dup scale dup stringwidth pop -2 div 0 rmoveto show grestore
  grestore
} bind def

%%EndProlog

% data start here
/cutpoint 110 def
/sequence { (\
UCUAUAACUCAGUGUGAACAAGUUUUUUGAUCAGUGGAUAAUGACUAAAAAACCAGGAAAGUCCGGCAAUCGUCGGACUGUCAAUAUGCUAAAGCGCGGAGCAUCCCGCG AGAGGUUAGAGGAGACCCCCACAUACCGCAAAACAAAACAGCAUAUUGACACCUGGGAUAGACUAGGAGAUCCGCUGCUCUGGAACCCCAGUUCUAGGCACAGAACGCCGUAAUGAACUGGGGUGCCAAAACACCGAAUCU\
) } def
/len { sequence length } bind def

/coor [
[77.35363007 281.67129517]
[62.31919098 284.09729004]
[47.59946823 280.19219971]
[35.74474716 270.63262939]
[28.80892563 257.07482910]
[27.99368286 241.86773682]
[33.44026184 227.64611816]
[44.20500565 216.87391663]
[58.42286301 211.41751099]
[59.16759872 196.43601990]
[52.07173920 183.34028625]
[60.48466110 169.94128418]
[61.22939682 154.95977783]
[61.97413254 139.97828674]
[62.71886826 124.99678040]
[54.88278580 137.78724670]
[39.99618912 139.62821960]
[25.51462555 135.71870422]
[13.57700443 126.63612366]
[5.94649601 113.72196960]
[3.75011635 98.88364410]
[7.31226778 84.31274414]
[16.10682487 72.16137695]
[28.83484459 64.22428131]
[43.61641312 61.67375183]
[58.26831818 64.88649750]
[70.62648773 73.38800812]
[78.86457825 85.92003632]
[90.70504761 95.12891388]
[84.72902679 81.37074280]
[72.13428497 71.79561615]
[74.16046906 57.03947067]
[68.18444824 43.28130341]
[62.20843124 29.52313423]
[56.23241806 15.76496410]
[50.25640106 2.00679421]
[44.28038406 -11.75137520]
[38.30436707 -25.50954437]
[32.32835007 -39.26771545]
[17.57246208 -36.29407501]
[2.52661967 -36.45348740]
[-12.15153694 -39.73655701]
[-25.82094574 -45.99740219]
[-37.88512421 -54.96014404]
[-47.81818390 -66.23106384]
[-55.18777084 -79.31589508]
[-59.67387390 -93.64149475]
[-61.08272552 -108.58096313]
[-59.35515976 -123.48104858]
[-54.56911469 -137.69073486]
[-46.93608856 -150.58969116]
[-36.79182434 -161.61534119]
[-24.58151817 -170.28736877]
[-30.55753517 -184.04554749]
[-36.53355026 -197.80371094]
[-42.50956726 -211.56188965]
[-48.48558426 -225.32005310]
[-60.75753021 -225.89985657]
[-71.80767822 -233.58544922]
[-77.57563019 -247.03828430]
[-92.39530182 -249.35719299]
[-107.21496582 -251.67611694]
[-122.03463745 -253.99504089]
[-136.85430908 -256.31396484]
[-151.67398071 -258.63287354]
[-166.49365234 -260.95178223]
[-181.31332397 -263.27072144]
[-196.40908813 -256.86370850]
[-209.34097290 -266.94827271]
[-206.80575562 -283.15026855]
[-191.41145325 -288.80245972]
[-178.99440002 -278.09036255]
[-164.17472839 -275.77145386]
[-149.35505676 -273.45254517]
[-134.53538513 -271.13363647]
[-119.71572113 -268.81469727]
[-104.89604950 -266.49578857]
[-90.07637787 -264.17687988]
[-75.25671387 -261.85794067]
[-64.61723328 -272.43157959]
[-66.84409332 -287.26535034]
[-69.07096100 -302.09915161]
[-71.29782104 -316.93292236]
[-73.52468872 -331.76669312]
[-75.75154877 -346.60049438]
[-77.97840881 -361.43426514]
[-80.20527649 -376.26803589]
[-82.43213654 -391.10183716]
[-84.65900421 -405.93560791]
[-86.88586426 -420.76937866]
[-107.96250916 -426.27069092]
[-124.16657257 -440.74240112]
[-131.96466064 -460.95904541]
[-129.68830872 -482.45010376]
[-117.89062500 -500.48883057]
[-126.31108856 -512.90234375]
[-134.73155212 -525.31591797]
[-143.15202332 -537.72943115]
[-151.57247925 -550.14294434]
[-167.13948059 -552.87133789]
[-176.14923096 -565.85595703]
[-173.25640869 -581.39324951]
[-160.17726135 -590.26519775]
[-144.67143250 -587.20825195]
[-135.93824768 -574.03607178]
[-139.15895081 -558.56341553]
[-130.73847961 -546.14990234]
[-122.31802368 -533.73638916]
[-113.89756012 -521.32281494]
[-105.47709656 -508.90930176]
[-101.68991089 -510.45367432]
[-97.78022766 -511.65460205]
[-93.77911377 -512.50250244]
[-101.51641083 -526.30267334]
[-93.77911377 -539.02996826]
[-93.77911377 -554.02996826]
[-93.77911377 -569.02996826]
[-106.97362518 -576.76635742]
[-114.47466278 -589.98120117]
[-114.35482788 -605.07592773]
[-106.74643707 -617.99755859]
[-93.77911377 -625.32653809]
[-93.77911377 -640.32653809]
[-105.13024902 -651.32324219]
[-105.29734039 -667.12664795]
[-94.18125916 -678.36090088]
[-78.37696838 -678.36090088]
[-67.26087952 -667.12664795]
[-67.42797089 -651.32324219]
[-78.77911377 -640.32653809]
[-78.77911377 -625.32653809]
[-65.81179047 -617.99755859]
[-58.20339584 -605.07592773]
[-58.08356094 -589.98120117]
[-65.58460236 -576.76635742]
[-78.77911377 -569.02996826]
[-78.77911377 -554.02996826]
[-78.77911377 -539.02996826]
[-71.04180908 -526.30267334]
[-78.77911377 -512.50250244]
[-68.11411285 -509.43023682]
[-58.48673630 -503.88119507]
[-50.46308136 -496.17425537]
[-44.51673889 -486.75537109]
[-41.00081635 -476.17187500]
[-40.12698364 -465.04046631]
[-41.95273590 -454.01156616]
[-46.37767029 -443.73098755]
[-53.14896774 -434.80242920]
[-61.87584305 -427.75177002]
[-72.05208588 -422.99624634]
[-69.82521820 -408.16247559]
[-67.59835815 -393.32870483]
[-65.37149048 -378.49490356]
[-63.14463043 -363.66113281]
[-60.91776657 -348.82736206]
[-58.69090271 -333.99356079]
[-56.46404266 -319.15979004]
[-54.23717880 -304.32598877]
[-52.01031494 -289.49221802]
[-49.78345108 -274.65844727]
[-26.72739601 -255.99458313]
[-34.72741318 -231.29606628]
[-28.75139809 -217.53790283]
[-22.77538109 -203.77972412]
[-16.79936409 -190.02156067]
[-10.82334900 -176.26339722]
[3.84866810 -179.26799011]
[18.83060455 -179.15620422]
[33.46757507 -175.93046570]
[47.11925888 -169.72941589]
[59.18792725 -160.82188416]
[69.14461517 -149.59526062]
[76.55226898 -136.53866577]
[81.08500671 -122.22161865]
[82.54235840 -107.26918030]
[80.85820770 -92.33469391]
[76.10375977 -78.07124329]
[68.48451996 -65.10305023]
[58.33144379 -53.99819946]
[46.08652115 -45.24373245]
[52.06253815 -31.48556137]
[58.03855515 -17.72739220]
[64.01457214 -3.96922207]
[69.99058533 9.78894711]
[75.96660614 23.54711723]
[81.94261932 37.30528641]
[87.91863251 51.06345749]
[100.08592987 59.65450668]
[98.48719788 75.39472961]
[104.46321106 89.15290070]
[113.78432465 100.90521240]
[125.82028961 109.85705566]
[137.85626221 118.80889893]
[153.54702759 120.83631134]
[159.14181519 134.64021301]
[171.17778015 143.59205627]
[183.21374512 152.54389954]
[195.24971008 161.49574280]
[207.28567505 170.44758606]
[219.32164001 179.39942932]
[231.35762024 188.35127258]
[243.39358521 197.30311584]
[255.42955017 206.25495911]
[267.46551514 215.20680237]
[287.19116211 211.26045227]
[303.18609619 222.94808960]
[305.35147095 242.33108521]
[317.71246338 250.82846069]
[330.07348633 259.32583618]
[345.09341431 254.97434998]
[359.37548828 261.34280396]
[366.17608643 275.42419434]
[362.28421021 290.56973267]
[349.53747559 299.62814331]
[333.95449829 298.32235718]
[322.89309692 287.26885986]
[321.57611084 271.68682861]
[309.21508789 263.18948364]
[296.85409546 254.69209290]
[287.68063354 259.19424438]
[277.38583374 259.49874878]
[267.81362915 255.48434448]
[260.70614624 247.80934143]
[257.38665771 237.80453491]
[258.51367188 227.24276733]
[246.47770691 218.29092407]
[234.44174194 209.33908081]
[222.40576172 200.38723755]
[210.36979675 191.43539429]
[198.33383179 182.48355103]
[186.29786682 173.53170776]
[174.26190186 164.57986450]
[162.22593689 155.62802124]
[150.18997192 146.67617798]
[135.36009216 145.28906250]
[128.90440369 130.84486389]
[116.86844635 121.89302063]
[104.83248138 112.94117737]
[98.04945374 116.14126587]
[84.48339844 122.54143524]
[77.70037079 125.74151611]
[76.95563507 140.72302246]
[76.21089935 155.70451355]
[75.46616364 170.68601990]
[82.50875854 184.85331726]
[74.14910126 197.18075562]
[73.40436554 212.16224670]
[87.01098633 219.00181580]
[96.65431976 230.78851318]
[100.66361237 245.48019409]
[98.34421539 260.53143311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 248]
[10 247]
[12 245]
[13 244]
[14 243]
[15 242]
[29 191]
[30 190]
[32 188]
[33 187]
[34 186]
[35 185]
[36 184]
[37 183]
[38 182]
[39 181]
[53 167]
[54 166]
[55 165]
[56 164]
[57 163]
[60 79]
[61 78]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
[80 161]
[81 160]
[82 159]
[83 158]
[84 157]
[85 156]
[86 155]
[87 154]
[88 153]
[89 152]
[90 151]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[113 140]
[115 138]
[116 137]
[117 136]
[122 131]
[123 130]
[192 239]
[193 238]
[194 237]
[196 235]
[197 234]
[198 233]
[199 232]
[200 231]
[201 230]
[202 229]
[203 228]
[204 227]
[205 226]
[208 220]
[209 219]
[210 218]
] def

init

% Start Annotations
1 110 9  0 0.9 0.2 omark
112 252 9  1 0.1 0.2 omark

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
