%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Jun 17 09:14:07 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 -140 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

/ConsLegend { % xloc yloc tics range ConsLegend -> []
  /STR 8 string def
  /colshift 0.16 def
  /sep 0.1 def
  /range exch def
  % precompute number of tics but leave one tics for range numbers
  dup /tics exch dup 1 le { pop 42 } if def
  /lasttick exch dup 1 eq { pop 1.0 } { dup 1 gt { cvi } if  } ifelse def
  
  gsave
    /Helvetica findfont 10 scalefont setfont
    xmin xmax add size sub 2 div
    ymin ymax add size sub 2 div translate
    size dup scale
    translate
    0.015 dup scale
    % legend lines
    gsave 
    0.5 setgray
    0.05 setlinewidth
    newpath
    -1.5 2.5 moveto 10.1 2.5 lineto
    stroke
    newpath
    -1.5 1.1 moveto 10.1 1.1 lineto
    stroke
    newpath
    -1.5 2.5 moveto -1.5 -5 -6 sep mul add lineto
    stroke
    newpath
    10.1 1.1 moveto 10.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 1.1 moveto -0.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 -5 -6 sep mul add moveto 10.1 -5 -6 sep mul add lineto
    stroke
    grestore
    % color gradients
      6 -1 1
      {
        % get current number of different base pairs
        dup 1 sub 6 exch sub /curnum exch STR cvs def
        % compute y-position
        dup 6 sub dup sep mul add /ypos exch def
        % draw number of different base pairs
        -1 ypos moveto gsave 0.1 dup scale curnum show grestore
        % compute current color
        6 exch sub colshift mul
        /curcol exch def
        % draw gradient for counter examples
        gsave
        10 tics 1 add div 1 scale
        0 1 tics
        {
            dup ypos moveto
            tics div range mul 1 exch sub
            curcol exch hsb
            1 0 rlineto 0 1 rlineto -1 0 rlineto closepath fill
        } for
        grestore
      } for
    0 setgray
    % legend labels
    0.1 1.2 sep add moveto (0) gsave 0.1 dup scale show grestore
    9.4 1.2 sep add moveto lasttick STR cvs gsave 0.1 dup scale show grestore
    1 3 moveto (counter examples) gsave 0.1 dup scale show grestore
    -2 -4.5 moveto 90 rotate (base pairs)  gsave 0.1 dup scale show grestore
%    gsave 0.1 dup scale dup stringwidth pop -2 div 0 rmoveto show grestore
  grestore
} bind def

%%EndProlog

% data start here
/cutpoint 110 def
/sequence { (\
AACAGUUUUCGUGUUGAGAAAGAAAACAGAUUCUUCGGAAAUGAAAACCCAAAAAAGGGCCGCAUCGCGGCCUAUCAAUAUGCUGAAGCGCUUUGGAUCUAGCGCUGGCC GAGACCCCCCGCGCCCAUAACCAACAUAAAACAGCAUAUUGACACCUGGGAAAGACCGGAGACUCUGUUGGCUUUCCCCACACCAGCCCCCUGGCACAGAGCGCCAGAUCGGGGGUUGGUGUGGAGCAACCCAACAGGACU\
) } def
/len { sequence length } bind def

/coor [
[106.46488190 282.54016113]
[94.29539490 291.82254028]
[79.20417786 294.37475586]
[64.65909576 289.61041260]
[54.00249481 278.62426758]
[49.68318558 263.94085693]
[52.69371033 248.93435669]
[62.34227753 237.05311584]
[76.41171265 231.02737427]
[77.52824402 216.06898499]
[70.75976562 202.80110168]
[79.50282288 189.61514282]
[80.61934662 174.65675354]
[81.73587799 159.69836426]
[82.85240936 144.73997498]
[83.96893311 129.78158569]
[74.30223846 106.59795380]
[83.84675598 89.54703522]
[75.42629242 77.13349915]
[67.00582886 64.71997070]
[58.58536148 52.30643463]
[50.16489792 39.89290237]
[34.89916992 36.79528809]
[26.53645706 24.08624840]
[29.58363533 9.55179596]
[21.16317177 -2.86173630]
[12.74270821 -15.27526855]
[4.32224417 -27.68880081]
[-4.09821939 -40.10233307]
[-12.51868343 -52.51586533]
[-26.66875458 -59.59301376]
[-27.41024208 -74.46915436]
[-35.83070755 -86.88268280]
[-44.25117111 -99.29621887]
[-52.67163467 -111.70974731]
[-61.09209824 -124.12328339]
[-69.51255798 -136.53681946]
[-77.93302155 -148.95034790]
[-89.21076202 -145.85899353]
[-100.88397980 -146.03410339]
[-112.02718353 -149.45106506]
[-121.75985718 -155.82867432]
[-129.31610107 -164.65225220]
[-134.10482788 -175.21513367]
[-135.75608826 -186.67524719]
[-134.14950562 -198.12231445]
[-129.42312622 -208.65008545]
[-121.96147919 -217.42808533]
[-129.75523376 -230.24438477]
[-137.54899597 -243.06066895]
[-145.34275818 -255.87696838]
[-156.01988220 -253.85824585]
[-166.78938293 -254.99607849]
[-176.74095154 -259.17294312]
[-185.03959656 -266.01531982]
[-190.99562073 -274.92712402]
[-194.12203979 -285.14135742]
[-209.10787964 -285.79309082]
[-224.09370422 -286.44479370]
[-239.07954407 -287.09649658]
[-254.06538391 -287.74819946]
[-269.05120850 -288.39990234]
[-284.03704834 -289.05160522]
[-300.12393188 -283.69912720]
[-309.72048950 -297.67562866]
[-298.94683838 -310.76623535]
[-283.38534546 -304.03744507]
[-268.39950562 -303.38574219]
[-253.41368103 -302.73403931]
[-238.42784119 -302.08233643]
[-223.44200134 -301.43060303]
[-208.45616150 -300.77890015]
[-193.47033691 -300.12719727]
[-187.09286499 -313.30352783]
[-176.06578064 -322.93115234]
[-180.64785767 -337.21417236]
[-185.22993469 -351.49719238]
[-189.81201172 -365.78021240]
[-194.39408875 -380.06323242]
[-198.97618103 -394.34625244]
[-203.55825806 -408.62927246]
[-208.14033508 -422.91229248]
[-212.72241211 -437.19528198]
[-217.30448914 -451.47830200]
[-221.88656616 -465.76132202]
[-235.98413086 -462.43286133]
[-252.56150818 -470.96603394]
[-262.73153687 -481.99194336]
[-272.90158081 -493.01782227]
[-283.07162476 -504.04373169]
[-293.24166870 -515.06964111]
[-303.41171265 -526.09552002]
[-318.80691528 -524.15472412]
[-332.38641357 -531.66320801]
[-338.92861938 -545.73370361]
[-335.91784668 -560.95587158]
[-324.51187134 -571.47650146]
[-309.09649658 -573.25018311]
[-295.59927368 -565.59484863]
[-289.21011353 -551.45416260]
[-292.38580322 -536.26556396]
[-282.21575928 -525.23962402]
[-272.04574585 -514.21374512]
[-261.87570190 -503.18786621]
[-251.70565796 -492.16195679]
[-241.53561401 -481.13607788]
[-228.34817505 -488.28390503]
[-232.03521729 -502.82369995]
[-235.72224426 -517.36352539]
[-250.77008057 -519.51556396]
[-263.84637451 -527.26660156]
[-272.95706177 -539.43475342]
[-276.71286011 -554.16436768]
[-274.54104614 -569.20941162]
[-266.77276611 -582.27545166]
[-254.59266663 -591.37017822]
[-239.85809326 -595.10656738]
[-224.81597900 -592.91497803]
[-211.76013184 -585.12951660]
[-202.68147278 -572.93743896]
[-198.96443176 -558.19793701]
[-201.17582703 -543.15875244]
[-208.97845459 -530.11315918]
[-221.18244934 -521.05053711]
[-217.49542236 -506.51074219]
[-213.80838013 -491.97094727]
[-211.61866760 -506.81024170]
[-204.61276245 -520.07360840]
[-193.59025574 -530.24731445]
[-179.80914307 -536.17022705]
[-164.84225464 -537.16638184]
[-150.39776611 -533.12200928]
[-138.12422180 -524.49877930]
[-129.42239380 -512.28082275]
[-125.28543854 -497.86260986]
[-126.18548584 -482.88964844]
[-132.01983643 -469.07080078]
[-142.12258911 -457.98321533]
[-155.34072876 -450.89233398]
[-170.16567993 -448.60745239]
[-184.90547180 -451.38928223]
[-197.87785339 -458.92037964]
[-207.60356140 -470.34341431]
[-203.02148438 -456.06039429]
[-198.43939209 -441.77737427]
[-193.85731506 -427.49435425]
[-189.27523804 -413.21133423]
[-184.69316101 -398.92831421]
[-180.11108398 -384.64532471]
[-175.52900696 -370.36230469]
[-170.94691467 -356.07928467]
[-166.36483765 -341.79626465]
[-161.78276062 -327.51324463]
[-143.80519104 -325.02777100]
[-129.15467834 -314.18960571]
[-121.45462036 -297.58972168]
[-122.65217590 -279.25488281]
[-132.52647400 -263.67071533]
[-124.73271179 -250.85443115]
[-116.93894958 -238.03814697]
[-109.14518738 -225.22184753]
[-90.88856506 -227.80754089]
[-73.30057526 -222.10279846]
[-59.96369171 -209.22233582]
[-53.61521530 -191.74729919]
[-55.58550262 -173.20799255]
[-65.51949310 -157.37080383]
[-57.09902954 -144.95727539]
[-48.67856598 -132.54374695]
[-40.25810242 -120.13021088]
[-31.83763695 -107.71668243]
[-23.41717339 -95.30314636]
[-14.99670982 -82.88961792]
[-1.44892573 -76.70036316]
[-0.10515086 -60.93632889]
[8.31531334 -48.52279663]
[16.73577690 -36.10926437]
[25.15624046 -23.69573212]
[33.57670593 -11.28219986]
[41.99716949 1.13133252]
[56.62830353 3.67406416]
[65.34468842 16.14319801]
[62.57843018 31.47243881]
[70.99889374 43.88597107]
[79.41935730 56.29950333]
[87.83982086 68.71303558]
[96.26028442 81.12657166]
[118.16662598 80.66398621]
[133.52223206 104.49414825]
[146.28990173 112.36733246]
[159.05755615 120.24051666]
[171.82521057 128.11369324]
[184.59286499 135.98687744]
[197.36051941 143.86006165]
[210.12817383 151.73323059]
[222.89582825 159.60641479]
[235.66348267 167.47959900]
[248.43113708 175.35278320]
[261.19879150 183.22596741]
[273.96646118 191.09913635]
[286.73410034 198.97232056]
[299.50177002 206.84550476]
[312.46099854 214.39920044]
[325.60379028 221.62876892]
[338.74658203 228.85835266]
[351.88940430 236.08792114]
[366.40374756 230.26828003]
[381.24694824 235.18890381]
[389.41058350 248.52642822]
[387.03994751 263.98327637]
[375.25442505 274.26119995]
[359.61877441 274.50726318]
[347.51568604 264.60531616]
[344.65982056 249.23071289]
[331.51702881 242.00114441]
[318.37420654 234.77157593]
[305.23141479 227.54200745]
[302.52624512 228.17257690]
[299.41143799 227.78421021]
[296.26855469 226.21678162]
[293.52975464 223.44927979]
[291.62857056 219.61315918]
[278.86093140 211.73997498]
[266.09326172 203.86679077]
[253.32560730 195.99362183]
[240.55795288 188.12043762]
[227.79029846 180.24725342]
[215.02264404 172.37406921]
[202.25498962 164.50088501]
[189.48733521 156.62771606]
[176.71968079 148.75453186]
[163.95202637 140.88134766]
[151.18437195 133.00816345]
[138.41671753 125.13498688]
[125.64905548 117.26181030]
[118.96862793 120.67088318]
[126.39868927 133.70138550]
[136.57667542 144.71995544]
[129.59646606 157.99687195]
[114.74961853 155.85887146]
[111.79934692 141.15155029]
[105.60775757 127.48903656]
[98.92732239 130.89811707]
[97.81079102 145.85650635]
[96.69426727 160.81489563]
[95.57773590 175.77328491]
[94.46120453 190.73165894]
[101.14982605 205.06948853]
[92.48663330 217.18551636]
[91.37010193 232.14390564]
[104.38906097 240.19158936]
[112.16685486 253.37356567]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 250]
[10 249]
[12 247]
[13 246]
[14 245]
[15 244]
[16 243]
[18 187]
[19 186]
[20 185]
[21 184]
[22 183]
[25 180]
[26 179]
[27 178]
[28 177]
[29 176]
[30 175]
[32 173]
[33 172]
[34 171]
[35 170]
[36 169]
[37 168]
[38 167]
[48 161]
[49 160]
[50 159]
[51 158]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[62 68]
[63 67]
[75 153]
[76 152]
[77 151]
[78 150]
[79 149]
[80 148]
[81 147]
[82 146]
[83 145]
[84 144]
[85 143]
[87 106]
[88 105]
[89 104]
[90 103]
[91 102]
[92 101]
[107 126]
[108 125]
[109 124]
[189 235]
[190 234]
[191 233]
[192 232]
[193 231]
[194 230]
[195 229]
[196 228]
[197 227]
[198 226]
[199 225]
[200 224]
[201 223]
[202 222]
[203 217]
[204 216]
[205 215]
[206 214]
] def

init

% Start Annotations
1 110 9  0 0.9 0.2 omark
112 252 9  1 0.1 0.2 omark

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
