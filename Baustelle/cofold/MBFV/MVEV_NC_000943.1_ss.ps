%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Jun 17 09:14:07 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 -140 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

/ConsLegend { % xloc yloc tics range ConsLegend -> []
  /STR 8 string def
  /colshift 0.16 def
  /sep 0.1 def
  /range exch def
  % precompute number of tics but leave one tics for range numbers
  dup /tics exch dup 1 le { pop 42 } if def
  /lasttick exch dup 1 eq { pop 1.0 } { dup 1 gt { cvi } if  } ifelse def
  
  gsave
    /Helvetica findfont 10 scalefont setfont
    xmin xmax add size sub 2 div
    ymin ymax add size sub 2 div translate
    size dup scale
    translate
    0.015 dup scale
    % legend lines
    gsave 
    0.5 setgray
    0.05 setlinewidth
    newpath
    -1.5 2.5 moveto 10.1 2.5 lineto
    stroke
    newpath
    -1.5 1.1 moveto 10.1 1.1 lineto
    stroke
    newpath
    -1.5 2.5 moveto -1.5 -5 -6 sep mul add lineto
    stroke
    newpath
    10.1 1.1 moveto 10.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 1.1 moveto -0.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 -5 -6 sep mul add moveto 10.1 -5 -6 sep mul add lineto
    stroke
    grestore
    % color gradients
      6 -1 1
      {
        % get current number of different base pairs
        dup 1 sub 6 exch sub /curnum exch STR cvs def
        % compute y-position
        dup 6 sub dup sep mul add /ypos exch def
        % draw number of different base pairs
        -1 ypos moveto gsave 0.1 dup scale curnum show grestore
        % compute current color
        6 exch sub colshift mul
        /curcol exch def
        % draw gradient for counter examples
        gsave
        10 tics 1 add div 1 scale
        0 1 tics
        {
            dup ypos moveto
            tics div range mul 1 exch sub
            curcol exch hsb
            1 0 rlineto 0 1 rlineto -1 0 rlineto closepath fill
        } for
        grestore
      } for
    0 setgray
    % legend labels
    0.1 1.2 sep add moveto (0) gsave 0.1 dup scale show grestore
    9.4 1.2 sep add moveto lasttick STR cvs gsave 0.1 dup scale show grestore
    1 3 moveto (counter examples) gsave 0.1 dup scale show grestore
    -2 -4.5 moveto 90 rotate (base pairs)  gsave 0.1 dup scale show grestore
%    gsave 0.1 dup scale dup stringwidth pop -2 div 0 rmoveto show grestore
  grestore
} bind def

%%EndProlog

% data start here
/cutpoint 110 def
/sequence { (\
UAACGCGGUUUGAACAGUUUUUUGGAGCUUUUGAUUUCAAAUGUCUAAAAAACCAGGAGGACCCGGGAAGCCCCGGGUCGUCAAUAUGCUAAAACGCGGCAUACCCCGCG GACCCCACUCUCAAAAGCAUCAAACAACAGCAUAUUGACACCUGGGAAAAGACUAGGAGAUCUUCUGCUCUAUUCCAACAUCAGUCACAAGGCACCGAGCGCCGAACACUGUGACUGAUGGGGGAGAAGACCACAGGAUCU\
) } def
/len { sequence length } bind def

/coor [
[124.05084229 145.19145203]
[135.39208984 155.00859070]
[142.55816650 168.18612671]
[144.63423157 183.04176331]
[141.35523987 197.67898560]
[133.13980103 210.22914124]
[121.03673553 219.09005737]
[106.59114838 223.13049316]
[91.64723206 221.83465576]
[78.11276245 215.36795044]
[67.71560669 204.55595398]
[61.78310013 190.77897644]
[61.07260895 175.79580688]
[65.67483521 161.51927185]
[75.00140381 149.77268982]
[80.41465759 135.78352356]
[85.82791138 121.79436493]
[74.37057495 131.47575378]
[62.91323090 141.15715027]
[51.45589066 150.83854675]
[39.99855042 160.51992798]
[28.54120827 170.20132446]
[17.08386612 179.88272095]
[5.62652588 189.56410217]
[-5.83081532 199.24549866]
[-17.28815651 208.92689514]
[-21.80703735 216.83345032]
[-28.94839859 218.65629578]
[-34.67898178 233.40318298]
[-49.42169952 235.52487183]
[-60.99837112 245.06324768]
[-72.57504272 254.60163879]
[-84.15171814 264.14001465]
[-89.38862610 279.68051147]
[-105.51672363 282.64974976]
[-115.94480896 269.99325562]
[-109.94535828 254.73091125]
[-93.69009399 252.56333923]
[-82.11341858 243.02496338]
[-70.53675079 233.48658752]
[-58.96007919 223.94819641]
[-54.05753326 209.88356018]
[-38.48677444 207.07962036]
[-26.96954727 197.46954346]
[-15.51220608 187.78816223]
[-4.05486536 178.10676575]
[7.40247583 168.42536926]
[18.85981750 158.74398804]
[30.31715775 149.06259155]
[41.77449799 139.38119507]
[53.23184204 129.69981384]
[64.68917847 120.01841736]
[76.14652252 110.33702850]
[74.12304688 103.11515045]
[59.67928696 107.16210175]
[45.23546219 111.20880890]
[41.18898773 96.76491547]
[55.63233566 92.71833801]
[70.07609558 88.67138672]
[68.05261993 81.44950867]
[53.23294830 79.13059235]
[38.41328049 76.81167603]
[23.59360886 74.49275208]
[8.77393913 72.17383575]
[-6.04573059 69.85491943]
[-20.86540031 67.53600311]
[-35.68507004 65.21708679]
[-50.78084183 71.62408447]
[-63.71272659 61.53952408]
[-61.17750931 45.33752823]
[-45.78320312 39.68532181]
[-33.36615372 50.39741135]
[-18.54648209 52.71633148]
[-3.72681260 55.03524780]
[11.09285736 57.35416794]
[25.91252708 59.67308426]
[40.73219681 61.99200058]
[55.55186844 64.31092072]
[70.37153625 66.62983704]
[80.26464081 55.35480118]
[76.03865051 40.96240616]
[71.81266785 26.57001114]
[67.58667755 12.17761612]
[63.36068726 -2.21477866]
[59.13470078 -16.60717392]
[54.90871048 -30.99956703]
[50.68272400 -45.39196396]
[46.45673370 -59.78435516]
[42.23074722 -74.17675018]
[38.00475693 -88.56914520]
[34.23347855 -91.02436066]
[31.53460503 -94.25016785]
[30.02120781 -97.85887909]
[29.68017197 -101.46509552]
[30.38336754 -104.72375488]
[21.96290398 -117.13728333]
[13.54243946 -129.55081177]
[5.12197590 -141.96435547]
[-3.29848814 -154.37788391]
[-18.86548615 -157.10627747]
[-27.87523270 -170.09088135]
[-24.98240662 -185.62815857]
[-11.90327072 -194.50012207]
[3.60255766 -191.44319153]
[12.33574390 -178.27098083]
[9.11504459 -162.79833984]
[17.53550911 -150.38481140]
[25.95597267 -137.97128296]
[34.37643433 -125.55774689]
[42.79689789 -113.14421844]
[39.94639587 -127.87088013]
[40.07012939 -142.87037659]
[43.16320038 -157.54800415]
[49.10297775 -171.32185364]
[57.65396500 -183.64584351]
[68.47714233 -194.03135681]
[81.14340973 -202.06663513]
[95.15058136 -207.43310547]
[109.94332123 -209.91801453]
[124.93515015 -209.42285156]
[139.53167725 -205.96722412]
[153.15420532 -199.68814087]
[165.26263428 -190.83456421]
[175.37690735 -179.75749207]
[183.09603882 -166.89611816]
[188.11396790 -152.76033020]
[190.23175049 -137.91058350]
[189.36544800 -122.93562317]
[185.54937744 -108.42915344]
[178.93486023 -94.96630859]
[169.78411865 -83.08086395]
[158.45996094 -73.24401855]
[145.41134644 -65.84578705]
[131.15562439 -61.17948532]
[116.25798798 -59.43011093]
[101.30907440 -60.66702271]
[86.90155792 -64.84118652]
[73.60666656 -71.78710175]
[61.95148849 -81.22939301]
[52.39715195 -92.79513550]
[56.62314224 -78.40274048]
[60.84912872 -64.01034546]
[65.07511902 -49.61795044]
[69.30110931 -35.22555542]
[73.52709198 -20.83316231]
[77.75308228 -6.44076681]
[81.97907257 7.95162773]
[86.20506287 22.34402275]
[90.43104553 36.73641586]
[94.65703583 51.12881088]
[101.50593567 65.58955383]
[103.84837341 80.65469360]
[114.93720245 70.55330658]
[126.02602386 60.45192337]
[137.11485291 50.35053635]
[148.20367432 40.24915314]
[147.38664246 24.63292694]
[156.83990479 12.17620850]
[172.09991455 8.76067829]
[185.96138000 15.99904442]
[191.87931824 30.47357178]
[187.05947876 45.34983063]
[173.77763367 53.60371017]
[158.30505371 51.33797455]
[147.21623230 61.43936157]
[136.12741089 71.54074860]
[125.03858185 81.64212799]
[113.94976044 91.74351501]
[115.62261963 106.64994049]
[128.67463684 114.04215240]
[141.72665405 121.43435669]
[154.77868652 128.82656860]
[167.83070374 136.21876526]
[180.88272095 143.61097717]
[193.93475342 151.00318909]
[209.75581360 151.07160950]
[217.01719666 164.07627869]
[230.06922913 171.46847534]
[245.89028931 171.53689575]
[253.15167236 184.54156494]
[266.20370483 191.93377686]
[279.25570679 199.32598877]
[295.07678223 199.39440918]
[302.33816528 212.39907837]
[315.39019775 219.79127502]
[328.44223022 227.18348694]
[341.49423218 234.57569885]
[356.55053711 230.58251953]
[369.68185425 238.26519775]
[373.39593506 252.64369202]
[386.44796753 260.03588867]
[399.49996948 267.42810059]
[412.55200195 274.82031250]
[425.60403442 282.21252441]
[438.65603638 289.60473633]
[451.70806885 296.99694824]
[464.76010132 304.38912964]
[477.81210327 311.78134155]
[490.86413574 319.17355347]
[503.91616821 326.56576538]
[527.02648926 324.52124023]
[537.59051514 344.33163452]
[551.07604980 350.89978027]
[564.56158447 357.46789551]
[578.76910400 350.93481445]
[593.83831787 355.11242676]
[602.65405273 368.02816772]
[601.05377197 383.58367920]
[589.79309082 394.43405151]
[574.18896484 395.45611572]
[561.60913086 386.16726685]
[557.99346924 370.95343018]
[544.50793457 364.38531494]
[531.02239990 357.81716919]
[525.15692139 361.69998169]
[518.24664307 363.33941650]
[511.12725830 362.48922729]
[504.67633057 359.20709229]
[499.70523071 353.85333252]
[496.85711670 347.05191040]
[496.52395630 339.61779785]
[483.47192383 332.22558594]
[470.41992188 324.83337402]
[457.36788940 317.44116211]
[444.31585693 310.04895020]
[431.26385498 302.65673828]
[418.21182251 295.26455688]
[405.15979004 287.87234497]
[392.10778809 280.48013306]
[379.05575562 273.08792114]
[366.00372314 265.69570923]
[351.76226807 269.90481567]
[338.42037964 262.59399414]
[334.10202026 247.62771606]
[321.05001831 240.23550415]
[307.99798584 232.84330750]
[294.94595337 225.45109558]
[280.05847168 225.91142273]
[271.86352539 212.37800598]
[258.81149292 204.98579407]
[245.75947571 197.59359741]
[230.87197876 198.05390930]
[222.67701721 184.52050781]
[209.62500000 177.12829590]
[194.73750305 177.58862305]
[186.54254150 164.05520630]
[173.49052429 156.66299438]
[160.43849182 149.27079773]
[147.38647461 141.87858582]
[134.33445740 134.48637390]
[121.28243256 127.09416962]
[108.23040771 119.70196533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 53]
[18 52]
[19 51]
[20 50]
[21 49]
[22 48]
[23 47]
[24 46]
[25 45]
[26 44]
[28 43]
[30 41]
[31 40]
[32 39]
[33 38]
[60 79]
[61 78]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
[80 150]
[81 149]
[82 148]
[83 147]
[84 146]
[85 145]
[86 144]
[87 143]
[88 142]
[89 141]
[90 140]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[152 168]
[153 167]
[154 166]
[155 165]
[156 164]
[169 252]
[170 251]
[171 250]
[172 249]
[173 248]
[174 247]
[175 246]
[177 244]
[178 243]
[180 241]
[181 240]
[182 239]
[184 237]
[185 236]
[186 235]
[187 234]
[190 231]
[191 230]
[192 229]
[193 228]
[194 227]
[195 226]
[196 225]
[197 224]
[198 223]
[199 222]
[200 221]
[202 214]
[203 213]
[204 212]
] def

init

% Start Annotations
1 110 9  0 0.9 0.2 omark
112 252 9  1 0.1 0.2 omark

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
