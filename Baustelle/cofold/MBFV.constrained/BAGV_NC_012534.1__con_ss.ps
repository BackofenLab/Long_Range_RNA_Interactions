%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Jun 17 09:45:35 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 -140 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

/ConsLegend { % xloc yloc tics range ConsLegend -> []
  /STR 8 string def
  /colshift 0.16 def
  /sep 0.1 def
  /range exch def
  % precompute number of tics but leave one tics for range numbers
  dup /tics exch dup 1 le { pop 42 } if def
  /lasttick exch dup 1 eq { pop 1.0 } { dup 1 gt { cvi } if  } ifelse def
  
  gsave
    /Helvetica findfont 10 scalefont setfont
    xmin xmax add size sub 2 div
    ymin ymax add size sub 2 div translate
    size dup scale
    translate
    0.015 dup scale
    % legend lines
    gsave 
    0.5 setgray
    0.05 setlinewidth
    newpath
    -1.5 2.5 moveto 10.1 2.5 lineto
    stroke
    newpath
    -1.5 1.1 moveto 10.1 1.1 lineto
    stroke
    newpath
    -1.5 2.5 moveto -1.5 -5 -6 sep mul add lineto
    stroke
    newpath
    10.1 1.1 moveto 10.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 1.1 moveto -0.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 -5 -6 sep mul add moveto 10.1 -5 -6 sep mul add lineto
    stroke
    grestore
    % color gradients
      6 -1 1
      {
        % get current number of different base pairs
        dup 1 sub 6 exch sub /curnum exch STR cvs def
        % compute y-position
        dup 6 sub dup sep mul add /ypos exch def
        % draw number of different base pairs
        -1 ypos moveto gsave 0.1 dup scale curnum show grestore
        % compute current color
        6 exch sub colshift mul
        /curcol exch def
        % draw gradient for counter examples
        gsave
        10 tics 1 add div 1 scale
        0 1 tics
        {
            dup ypos moveto
            tics div range mul 1 exch sub
            curcol exch hsb
            1 0 rlineto 0 1 rlineto -1 0 rlineto closepath fill
        } for
        grestore
      } for
    0 setgray
    % legend labels
    0.1 1.2 sep add moveto (0) gsave 0.1 dup scale show grestore
    9.4 1.2 sep add moveto lasttick STR cvs gsave 0.1 dup scale show grestore
    1 3 moveto (counter examples) gsave 0.1 dup scale show grestore
    -2 -4.5 moveto 90 rotate (base pairs)  gsave 0.1 dup scale show grestore
%    gsave 0.1 dup scale dup stringwidth pop -2 div 0 rmoveto show grestore
  grestore
} bind def

%%EndProlog

% data start here
/cutpoint 110 def
/sequence { (\
CCGUAAACACAGUUUGAACGUUUUUUGGAGAGAGAUUAUUAUGUUUAACAAAAAACCAGGAAAACCCGGGGCAACCCGGGUUGUCAAUAUGCUAAAGCGCGGUGCAUCCC GGAGACCCCUUGCGAGUUAACACCAAAACAAAACAGCAUAUUGACACCUGGGAGAGACUAGGAGACCCUCUGUCCUAACAACACCAGCCAUCCGGCACAGAGCGCCGUAAGUGUGGCUGGUGGUGGUAGAACACAGUGUCU\
) } def
/len { sequence length } bind def

/coor [
[235.48707581 571.94671631]
[232.16223145 557.31982422]
[219.56150818 545.08911133]
[225.18707275 527.54223633]
[221.68086243 512.95776367]
[208.88415527 505.42254639]
[205.12059021 490.68176270]
[213.11100769 477.31048584]
[209.60479736 462.72601318]
[206.09858704 448.14157104]
[202.59237671 433.55709839]
[192.09446716 422.99096680]
[196.39166260 407.76452637]
[192.88545227 393.18008423]
[178.56423950 389.08517456]
[168.14620972 378.29998779]
[164.50134277 363.65136719]
[168.70565796 349.04931641]
[179.72628784 338.44302368]
[176.22007751 323.85858154]
[172.71386719 309.27410889]
[169.20765686 294.68963623]
[165.70144653 280.10519409]
[162.19523621 265.52072144]
[157.28857422 261.92184448]
[154.60356140 255.65399170]
[155.53334045 248.15512085]
[148.38549805 234.96768188]
[141.23767090 221.78024292]
[128.37049866 214.27789307]
[128.59675598 198.45831299]
[121.44892883 185.27087402]
[114.30109406 172.08343506]
[107.15326691 158.89599609]
[108.24803162 173.85598755]
[105.77144623 188.65013123]
[99.86421204 202.43797302]
[90.86190033 214.43623352]
[79.27592468 223.96331787]
[65.76448822 230.47799683]
[51.09514999 233.61016846]
[36.10126495 233.18190002]
[21.63462067 229.21752930]
[8.51705647 221.94227600]
[-2.50623322 211.76940918]
[-10.80902481 199.27687073]
[-15.91964531 185.17433167]
[-17.54776382 170.26295471]
[-15.60088921 155.38983154]
[-10.18962097 141.39990234]
[-1.62136972 129.08790588]
[9.61711121 119.15329742]
[22.88737488 112.16043091]
[37.43555069 108.50658417]
[52.43516541 108.39931488]
[67.03411102 111.84471893]
[80.40303040 118.64706421]
[91.78244781 128.41992188]
[100.52492523 140.60630798]
[97.56433105 125.90138245]
[85.14797211 121.35957336]
[76.56729889 111.30144501]
[74.03834534 98.32460022]
[78.21425629 85.78044891]
[88.01654816 76.90863800]
[85.23876953 62.16807938]
[75.07970428 50.03943634]
[80.32627869 36.09946442]
[77.54849243 21.35890961]
[62.86782074 17.32913208]
[51.43918228 7.36553431]
[45.49419022 -6.51528883]
[46.16276169 -21.53907013]
[53.25877762 -34.72830963]
[65.32761383 -43.49236298]
[62.54983521 -58.23291779]
[59.77205658 -72.97347260]
[56.99427414 -87.71402740]
[54.21649551 -102.45458221]
[51.43871689 -117.19513702]
[48.66093826 -131.93568420]
[44.00812912 -139.76419067]
[45.94137573 -146.87644958]
[43.34684372 -161.65036011]
[40.75231171 -176.42427063]
[38.15777969 -191.19818115]
[35.56324768 -205.97209167]
[32.96871567 -220.74600220]
[30.37418556 -235.51991272]
[27.77965355 -250.29382324]
[25.18512154 -265.06771851]
[22.59059143 -279.84164429]
[19.99605942 -294.61553955]
[15.42965317 -298.64425659]
[13.04461575 -303.68838501]
[12.88571358 -308.75839233]
[14.59967327 -312.99395752]
[8.79495335 -326.82525635]
[2.99023342 -340.65658569]
[-9.48464394 -350.38735962]
[-7.27539206 -365.11721802]
[-13.08011150 -378.94851685]
[-25.55498886 -388.67929077]
[-23.34573746 -403.40914917]
[-37.69977951 -409.45886230]
[-43.38956070 -423.56848145]
[-37.53361130 -437.21557617]
[-43.33832932 -451.04690552]
[-49.14305115 -464.87820435]
[-58.61548233 -481.78747559]
[-40.74386597 -489.28781128]
[-35.31173706 -470.68292236]
[-29.50701714 -456.85162354]
[-23.70229721 -443.02029419]
[-9.86084747 -437.63980103]
[-3.77700353 -423.69555664]
[-9.51442432 -409.21386719]
[2.54526091 -400.47241211]
[0.75120151 -384.75323486]
[6.55592155 -370.92193604]
[18.61560631 -362.18045044]
[16.82154655 -346.46130371]
[22.62626648 -332.62997437]
[28.43098640 -318.79867554]
[29.17008972 -333.78045654]
[33.84015274 -348.03494263]
[42.10947418 -360.54968262]
[53.39068985 -370.43572998]
[66.88251495 -376.99093628]
[81.62664795 -379.74966431]
[96.57582855 -378.51596069]
[110.66824341 -373.37750244]
[122.90292358 -364.69921875]
[132.41087341 -353.09753418]
[138.51672363 -339.39651489]
[140.78681946 -324.56927490]
[139.05990601 -309.66900635]
[133.45864868 -295.75405884]
[124.38088989 -283.81277466]
[112.47140503 -274.69332886]
[98.57611084 -269.04348755]
[83.68198395 -267.26449585]
[68.84690857 -269.48275757]
[55.12461472 -275.54071045]
[43.48977280 -285.00802612]
[34.76996994 -297.21008301]
[37.36450195 -282.43615723]
[39.95903015 -267.66226196]
[42.55356216 -252.88835144]
[45.14809418 -238.11444092]
[47.74262619 -223.34053040]
[50.33715820 -208.56661987]
[52.93169022 -193.79270935]
[55.52622223 -179.01879883]
[58.12075043 -164.24488831]
[60.71528244 -149.47097778]
[63.40148926 -134.71347046]
[66.17926788 -119.97291565]
[68.95704651 -105.23236084]
[71.73483276 -90.49180603]
[74.51261139 -75.75125122]
[77.29039001 -61.01069641]
[80.06816864 -46.27014160]
[94.49904633 -42.49981689]
[105.90877533 -32.79789352]
[111.99961853 -19.04788589]
[111.51450348 -3.95534277]
[104.49612427 9.48449707]
[92.28904724 18.58113098]
[95.06682587 33.32168579]
[105.02720642 44.39598846]
[99.97932434 59.39030075]
[102.75710297 74.13085175]
[117.58527374 80.82781982]
[125.53527069 95.02365112]
[123.49760437 111.16588593]
[112.26925659 122.94078827]
[115.22985077 137.64570618]
[120.34070587 151.74816895]
[127.48853302 164.93560791]
[134.63636780 178.12304688]
[141.78419495 191.31048584]
[155.16262817 199.75607300]
[154.42510986 214.63241577]
[161.57293701 227.81985474]
[168.72077942 241.00729370]
[167.85462952 226.03231812]
[170.66661072 211.29824829]
[176.98692322 197.69480896]
[186.43388367 186.04341125]
[198.43707275 177.04766846]
[212.27165222 171.25074768]
[227.10224915 169.00271606]
[242.03329468 170.43931580]
[256.16317749 175.47380066]
[268.63870239 183.80215454]
[278.70651245 194.92147827]
[285.75863647 208.16033936]
[289.36929321 222.71929932]
[289.32040405 237.71922302]
[285.61492920 252.25433350]
[278.47662354 265.44692993]
[268.33657837 276.50039673]
[255.80702209 284.74725342]
[241.64460754 289.68951416]
[226.70451355 291.02874756]
[211.88890076 288.68411255]
[198.09239197 282.79711914]
[186.14810181 273.72332764]
[176.77970886 262.01452637]
[180.28590393 276.59896851]
[183.79211426 291.18344116]
[187.29832458 305.76791382]
[190.80453491 320.35235596]
[194.31074524 334.93682861]
[208.94810486 339.37475586]
[219.33026123 350.47012329]
[222.74211121 365.17474365]
[218.36488342 379.51684570]
[207.46992493 389.67385864]
[210.97612000 404.25833130]
[221.72483826 415.86761475]
[217.17684937 430.05090332]
[220.68304443 444.63534546]
[224.18925476 459.21981812]
[227.69546509 473.80429077]
[240.89054871 482.08242798]
[244.23858643 496.92306519]
[236.26531982 509.45156860]
[239.77153015 524.03601074]
[250.33099365 531.41198730]
[252.96185303 543.61163330]
[246.78910828 553.99499512]
[250.11395264 568.62188721]
[265.18780518 569.74908447]
[279.25909424 575.27087402]
[291.07662964 584.69622803]
[299.58959961 597.18701172]
[304.04104614 611.63269043]
[304.03512573 626.74859619]
[299.57238770 641.19073486]
[291.04962158 653.67486572]
[279.22473145 663.09100342]
[265.14910889 668.60174561]
[250.07438660 669.71716309]
[235.34098816 666.33807373]
[222.25900269 658.76489258]
[211.99166870 647.67102051]
[205.45193481 634.04296875]
[203.22134399 619.09252930]
[205.49821472 604.14910889]
[212.08007812 590.54138184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 234]
[2 233]
[4 230]
[5 229]
[8 226]
[9 225]
[10 224]
[11 223]
[13 221]
[14 220]
[19 215]
[20 214]
[21 213]
[22 212]
[23 211]
[24 210]
[27 186]
[28 185]
[29 184]
[31 182]
[32 181]
[33 180]
[34 179]
[59 178]
[60 177]
[65 173]
[66 172]
[68 170]
[69 169]
[75 163]
[76 162]
[77 161]
[78 160]
[79 159]
[80 158]
[81 157]
[83 156]
[84 155]
[85 154]
[86 153]
[87 152]
[88 151]
[89 150]
[90 149]
[91 148]
[92 147]
[93 146]
[97 124]
[98 123]
[99 122]
[101 120]
[102 119]
[104 117]
[107 114]
[108 113]
[109 112]
] def

init

% Start Annotations
1 110 9  0 0.9 0.2 omark
112 252 9  1 0.1 0.2 omark

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
