%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Jun 17 09:45:34 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 -140 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

/ConsLegend { % xloc yloc tics range ConsLegend -> []
  /STR 8 string def
  /colshift 0.16 def
  /sep 0.1 def
  /range exch def
  % precompute number of tics but leave one tics for range numbers
  dup /tics exch dup 1 le { pop 42 } if def
  /lasttick exch dup 1 eq { pop 1.0 } { dup 1 gt { cvi } if  } ifelse def
  
  gsave
    /Helvetica findfont 10 scalefont setfont
    xmin xmax add size sub 2 div
    ymin ymax add size sub 2 div translate
    size dup scale
    translate
    0.015 dup scale
    % legend lines
    gsave 
    0.5 setgray
    0.05 setlinewidth
    newpath
    -1.5 2.5 moveto 10.1 2.5 lineto
    stroke
    newpath
    -1.5 1.1 moveto 10.1 1.1 lineto
    stroke
    newpath
    -1.5 2.5 moveto -1.5 -5 -6 sep mul add lineto
    stroke
    newpath
    10.1 1.1 moveto 10.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 1.1 moveto -0.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 -5 -6 sep mul add moveto 10.1 -5 -6 sep mul add lineto
    stroke
    grestore
    % color gradients
      6 -1 1
      {
        % get current number of different base pairs
        dup 1 sub 6 exch sub /curnum exch STR cvs def
        % compute y-position
        dup 6 sub dup sep mul add /ypos exch def
        % draw number of different base pairs
        -1 ypos moveto gsave 0.1 dup scale curnum show grestore
        % compute current color
        6 exch sub colshift mul
        /curcol exch def
        % draw gradient for counter examples
        gsave
        10 tics 1 add div 1 scale
        0 1 tics
        {
            dup ypos moveto
            tics div range mul 1 exch sub
            curcol exch hsb
            1 0 rlineto 0 1 rlineto -1 0 rlineto closepath fill
        } for
        grestore
      } for
    0 setgray
    % legend labels
    0.1 1.2 sep add moveto (0) gsave 0.1 dup scale show grestore
    9.4 1.2 sep add moveto lasttick STR cvs gsave 0.1 dup scale show grestore
    1 3 moveto (counter examples) gsave 0.1 dup scale show grestore
    -2 -4.5 moveto 90 rotate (base pairs)  gsave 0.1 dup scale show grestore
%    gsave 0.1 dup scale dup stringwidth pop -2 div 0 rmoveto show grestore
  grestore
} bind def

%%EndProlog

% data start here
/cutpoint 110 def
/sequence { (\
AACAGUUUUCGUGUUGAGAAAGAAAACAGAUUCUUCGGAAAUGAAAACCCAAAAAAGGGCCGCAUCGCGGCCUAUCAAUAUGCUGAAGCGCUUUGGAUCUAGCGCUGGCC GAGACCCCCCGCGCCCAUAACCAACAUAAAACAGCAUAUUGACACCUGGGAAAGACCGGAGACUCUGUUGGCUUUCCCCACACCAGCCCCCUGGCACAGAGCGCCAGAUCGGGGGUUGGUGUGGAGCAACCCAACAGGACU\
) } def
/len { sequence length } bind def

/coor [
[352.78848267 541.76367188]
[363.16244507 530.90472412]
[374.74798584 521.34893799]
[366.63836670 508.73016357]
[358.52874756 496.11135864]
[341.80273438 498.65417480]
[325.59881592 493.60058594]
[313.20281982 481.92449951]
[307.15060425 465.94781494]
[308.70950317 448.87875366]
[317.61312866 434.16775513]
[309.19265747 421.75421143]
[300.77218628 409.34069824]
[292.35171509 396.92715454]
[278.80395508 390.73791504]
[277.46017456 374.97387695]
[263.91238403 368.78463745]
[262.56860352 353.02059937]
[254.14814758 340.60705566]
[245.72767639 328.19351196]
[237.30722046 315.77999878]
[228.88674927 303.36645508]
[214.25561523 300.82373047]
[205.53923035 288.35458374]
[208.30549622 273.02536011]
[199.88502502 260.61181641]
[191.46455383 248.19828796]
[183.04409790 235.78475952]
[174.62362671 223.37121582]
[166.20317078 210.95768738]
[152.65538025 204.76843262]
[151.31161499 189.00439453]
[142.89114380 176.59086609]
[134.47068787 164.17733765]
[126.05021667 151.76380920]
[117.62975311 139.35026550]
[109.20928955 126.93673706]
[100.78882599 114.52320862]
[103.52556610 129.27143860]
[102.97134399 144.26119995]
[99.15298462 158.76705933]
[92.25526428 172.08702087]
[82.61200714 183.57647705]
[70.68989563 192.67939758]
[57.06587982 198.95524597]
[42.39929962 202.10031128]
[27.39993286 201.96238708]
[12.79366970 198.54814148]
[-0.71262926 192.02281189]
[-12.46533203 182.70219421]
[-21.89567184 171.03733826]
[-28.54727173 157.59277344]
[-32.09823227 143.01914978]
[-32.37670517 128.02172852]
[-29.36921310 113.32632446]
[-23.22130203 99.64410400]
[-14.23050022 87.63721466]
[-2.83191013 77.88671875]
[10.42283726 70.86449432]
[24.89228439 66.91036987]
[39.87619019 66.21571350]
[54.64941788 68.81413269]
[68.49701691 74.57988739]
[80.74884796 83.23394775]
[90.81124115 94.35646057]
[86.05216217 80.13143921]
[74.33620453 69.49908447]
[77.63574219 54.97454834]
[72.87666321 40.74952698]
[68.11758423 26.52450943]
[54.71423721 23.37493896]
[44.69214630 14.09265995]
[40.59146881 1.17583978]
[43.37947464 -11.97585297]
[52.22489929 -21.95593834]
[47.64281845 -36.23895645]
[43.06074142 -50.52197266]
[38.47866058 -64.80498505]
[33.89657974 -79.08800507]
[29.31450272 -93.37101746]
[24.73242188 -107.65403748]
[20.15034294 -121.93704987]
[15.56826305 -136.22006226]
[10.98618317 -150.50308228]
[6.40410376 -164.78610229]
[-8.72259045 -165.42521667]
[-22.69170380 -171.19026184]
[-33.82461929 -181.36761475]
[-40.79068756 -194.71467590]
[-42.76626205 -209.61160278]
[-39.53203201 -224.25790405]
[-31.49719810 -236.89002991]
[-19.64780045 -245.99371338]
[-24.22988129 -260.27673340]
[-28.81196022 -274.55975342]
[-33.39403915 -288.84277344]
[-49.53880692 -290.96246338]
[-63.09078979 -299.88418579]
[-71.36003113 -313.77612305]
[-72.73178101 -329.82617188]
[-66.98158264 -344.81112671]
[-55.31013870 -355.74383545]
[-60.06921768 -369.96884155]
[-64.82829285 -384.19387817]
[-69.58737183 -398.41888428]
[-81.30332947 -409.05123901]
[-78.00379181 -423.57577515]
[-82.76287079 -437.80081177]
[-97.82911682 -440.78472900]
[-109.37432861 -450.91406250]
[-114.29290771 -465.46408081]
[-111.26177216 -480.52090454]
[-101.09629059 -492.03433228]
[-86.53092194 -496.90725708]
[-71.48368073 -493.82894897]
[-60.00218964 -483.62744141]
[-55.17492676 -469.04684448]
[-58.30038834 -454.00933838]
[-68.53784943 -442.55987549]
[-63.77877045 -428.33486938]
[-52.40321350 -418.71997070]
[-55.36235809 -403.17797852]
[-50.60327911 -388.95294189]
[-45.84419632 -374.72793579]
[-41.08511734 -360.50289917]
[-27.26649666 -359.44265747]
[-14.85427189 -353.18035889]
[-5.73388290 -342.63031006]
[-1.30475688 -329.36090088]
[-2.26565218 -315.36148071]
[-8.50464153 -302.74407959]
[-19.11102486 -293.42483521]
[-14.52894497 -279.14181519]
[-9.94686508 -264.85882568]
[-5.36478519 -250.57580566]
[9.56919479 -250.06439209]
[23.45314789 -244.46394348]
[34.60414886 -234.43251038]
[41.66343307 -221.16645813]
[43.76195145 -206.25785828]
[40.62731552 -191.50340271]
[32.61897659 -178.68783569]
[20.68712044 -169.36817932]
[25.26919937 -155.08515930]
[29.85127831 -140.80213928]
[34.43335724 -126.51912689]
[39.01543808 -112.23611450]
[43.59751892 -97.95310211]
[48.17959595 -83.67008209]
[52.76167679 -69.38706970]
[57.34375763 -55.10404968]
[61.92583466 -40.82103348]
[66.50791931 -26.53801918]
[82.26776123 -21.90015984]
[92.24996185 -8.64375019]
[92.35486603 8.11677551]
[82.34260559 21.76543045]
[87.10168457 35.99044800]
[91.86076355 50.21546936]
[103.23632050 59.83035278]
[100.27717590 75.37236023]
[105.03625488 89.59738159]
[108.38667297 91.20182037]
[111.19888306 93.90008545]
[113.11415100 97.50270844]
[113.84284973 101.70299530]
[113.20236206 106.10274506]
[121.62282562 118.51627350]
[130.04328918 130.92980957]
[138.46374512 143.34333801]
[146.88421631 155.75686646]
[155.30467224 168.17041016]
[163.72514343 180.58393860]
[177.87521362 187.66108704]
[178.61669922 202.53723145]
[187.03717041 214.95075989]
[195.45762634 227.36428833]
[203.87809753 239.77781677]
[212.29855347 252.19136047]
[220.71902466 264.60488892]
[235.98475647 267.70251465]
[244.34745789 280.41152954]
[241.30027771 294.94598389]
[249.72074890 307.35952759]
[258.14120483 319.77307129]
[266.56167603 332.18658447]
[274.98214722 344.60012817]
[289.13220215 351.67727661]
[289.87368774 366.55340576]
[304.02377319 373.63055420]
[304.76525879 388.50668335]
[313.18572998 400.92022705]
[321.60617065 413.33377075]
[330.02664185 425.74728394]
[342.89593506 422.88095093]
[355.94281006 424.54617310]
[367.62280273 430.52401733]
[376.56057739 440.08630371]
[381.71197510 452.08419800]
[382.48596191 465.08636475]
[378.81234741 477.54953003]
[371.14755249 488.00173950]
[379.25717163 500.62054443]
[387.36679077 513.23931885]
[400.87179565 506.67037964]
[415.05892944 501.74484253]
[429.72909546 498.53189087]
[444.67626953 497.07659912]
[459.69067383 497.39941406]
[474.56149292 499.49581909]
[489.07998657 503.33636475]
[503.04232788 508.86712646]
[516.25250244 516.01049805]
[528.52508545 524.66613770]
[539.68774414 534.71258545]
[549.58380127 546.00878906]
[558.07434082 558.39617920]
[565.04016113 571.70080566]
[570.38348389 585.73596191]
[574.02923584 600.30462646]
[575.92633057 615.20214844]
[576.04803467 630.21954346]
[574.39270020 645.14587402]
[570.98358154 659.77172852]
[565.86853027 673.89166260]
[559.11926270 687.30743408]
[550.83068848 699.83087158]
[541.11901855 711.28601074]
[530.12066650 721.51208496]
[517.99005127 730.36553955]
[504.89739990 737.72210693]
[491.02655029 743.47845459]
[476.57220459 747.55383301]
[461.73733521 749.89105225]
[446.73013306 750.45721436]
[431.76132202 749.24444580]
[417.04101562 746.26971436]
[402.77587891 741.57476807]
[389.16616821 735.22564697]
[376.40292358 727.31134033]
[364.66534424 717.94299316]
[354.11822510 707.25213623]
[344.90957642 695.38885498]
[337.16870117 682.51971436]
[331.00430298 668.82531738]
[326.50286865 654.49792480]
[323.72760010 639.73870850]
[322.71749878 624.75488281]
[323.48669434 609.75671387]
[326.02441406 594.95477295]
[330.29504395 580.55694580]
[336.23858643 566.76525879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 204]
[4 203]
[5 202]
[11 194]
[12 193]
[13 192]
[14 191]
[16 189]
[18 187]
[19 186]
[20 185]
[21 184]
[22 183]
[25 180]
[26 179]
[27 178]
[28 177]
[29 176]
[30 175]
[32 173]
[33 172]
[34 171]
[35 170]
[36 169]
[37 168]
[38 167]
[65 162]
[66 161]
[68 159]
[69 158]
[70 157]
[75 153]
[76 152]
[77 151]
[78 150]
[79 149]
[80 148]
[81 147]
[82 146]
[83 145]
[84 144]
[85 143]
[93 135]
[94 134]
[95 133]
[96 132]
[102 125]
[103 124]
[104 123]
[105 122]
[107 120]
[108 119]
] def

init

% Start Annotations
1 110 9  0 0.9 0.2 omark
112 252 9  1 0.1 0.2 omark

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
