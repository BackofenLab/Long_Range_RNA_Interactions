%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Jun 17 09:45:36 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 -140 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

/ConsLegend { % xloc yloc tics range ConsLegend -> []
  /STR 8 string def
  /colshift 0.16 def
  /sep 0.1 def
  /range exch def
  % precompute number of tics but leave one tics for range numbers
  dup /tics exch dup 1 le { pop 42 } if def
  /lasttick exch dup 1 eq { pop 1.0 } { dup 1 gt { cvi } if  } ifelse def
  
  gsave
    /Helvetica findfont 10 scalefont setfont
    xmin xmax add size sub 2 div
    ymin ymax add size sub 2 div translate
    size dup scale
    translate
    0.015 dup scale
    % legend lines
    gsave 
    0.5 setgray
    0.05 setlinewidth
    newpath
    -1.5 2.5 moveto 10.1 2.5 lineto
    stroke
    newpath
    -1.5 1.1 moveto 10.1 1.1 lineto
    stroke
    newpath
    -1.5 2.5 moveto -1.5 -5 -6 sep mul add lineto
    stroke
    newpath
    10.1 1.1 moveto 10.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 1.1 moveto -0.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 -5 -6 sep mul add moveto 10.1 -5 -6 sep mul add lineto
    stroke
    grestore
    % color gradients
      6 -1 1
      {
        % get current number of different base pairs
        dup 1 sub 6 exch sub /curnum exch STR cvs def
        % compute y-position
        dup 6 sub dup sep mul add /ypos exch def
        % draw number of different base pairs
        -1 ypos moveto gsave 0.1 dup scale curnum show grestore
        % compute current color
        6 exch sub colshift mul
        /curcol exch def
        % draw gradient for counter examples
        gsave
        10 tics 1 add div 1 scale
        0 1 tics
        {
            dup ypos moveto
            tics div range mul 1 exch sub
            curcol exch hsb
            1 0 rlineto 0 1 rlineto -1 0 rlineto closepath fill
        } for
        grestore
      } for
    0 setgray
    % legend labels
    0.1 1.2 sep add moveto (0) gsave 0.1 dup scale show grestore
    9.4 1.2 sep add moveto lasttick STR cvs gsave 0.1 dup scale show grestore
    1 3 moveto (counter examples) gsave 0.1 dup scale show grestore
    -2 -4.5 moveto 90 rotate (base pairs)  gsave 0.1 dup scale show grestore
%    gsave 0.1 dup scale dup stringwidth pop -2 div 0 rmoveto show grestore
  grestore
} bind def

%%EndProlog

% data start here
/cutpoint 110 def
/sequence { (\
UAACACAGUGUGAAUAGUUUUUUGAACAGAGGUGAAAACCAUGUCUAAAAAACCAGGAGGACCCGGAAAGAACCGGGUCGUUAAUAUGCUGAAGCGCACAUCCCGCGCUA AGACCCCUUGGCAGUGAACGCAAAUAAAAACAGCAUAUUGACACCUGGGAUAGACUGGGAGACCCUCUGCUUAUUUCAACACCAGCCACUCGGCACAGAACGCCGUAAGUGUGGCUGGUGGUGAAAAUAAACACAGAGUCU\
) } def
/len { sequence length } bind def

/coor [
[210.37648010 650.88690186]
[220.13893127 639.44097900]
[231.83847046 629.98394775]
[245.07666016 622.83795166]
[240.49458313 608.55493164]
[235.91249084 594.27191162]
[231.33041382 579.98889160]
[220.07511902 570.23352051]
[223.22702026 554.72943115]
[209.22088623 554.11224365]
[196.23738098 548.74395752]
[185.84109497 539.24932861]
[179.29234314 526.75195312]
[177.39440918 512.74078369]
[180.39503479 498.89321899]
[187.95431519 486.87393188]
[199.18307495 478.13497925]
[194.77870178 463.79617310]
[190.37432861 449.45736694]
[185.96994019 435.11856079]
[181.56556702 420.77975464]
[170.43228149 410.88534546]
[173.77645874 395.42160034]
[169.37208557 381.08279419]
[155.24633789 376.43508911]
[146.46205139 364.21624756]
[146.55818176 348.98980713]
[155.70742798 336.59637451]
[151.30305481 322.25753784]
[140.16976929 312.36315918]
[143.51393127 296.89941406]
[139.10955811 282.56060791]
[134.70518494 268.22180176]
[125.15258789 267.42770386]
[116.24684906 263.80334473]
[108.80899811 257.66381836]
[103.53038025 249.55702209]
[100.90844727 240.21464539]
[101.19990540 230.48623657]
[104.39569855 221.26193237]
[110.22021484 213.39100647]
[118.15499878 207.60365295]
[114.64878845 193.01919556]
[111.14257812 178.43473816]
[98.34586334 170.89950562]
[94.58231354 156.15873718]
[102.57272339 142.78746033]
[99.06651306 128.20300293]
[95.56030273 113.61853790]
[86.07286835 103.34818268]
[89.85523224 89.88767242]
[86.34902954 75.30321503]
[75.60031891 63.69391251]
[80.14830780 49.51064682]
[76.64210510 34.92618561]
[73.13589478 20.34172440]
[69.62968445 5.75726366]
[58.88097763 -5.85203552]
[63.42897034 -20.03530121]
[59.92276382 -34.61976242]
[45.40269470 -48.62820053]
[51.75683594 -66.90690613]
[47.88954544 -81.39980316]
[44.02225113 -95.89270020]
[40.15496063 -110.38559723]
[36.28767014 -124.87849426]
[21.25354385 -126.94022369]
[8.18935299 -134.58024597]
[-0.92984867 -146.60745239]
[-4.73925161 -161.17028809]
[-2.68848968 -176.04170227]
[4.87908506 -188.95980835]
[16.78342247 -197.97180176]
[12.91613102 -212.46469116]
[9.04884052 -226.95759583]
[5.18154955 -241.45048523]
[1.31425893 -255.94338989]
[-2.55303192 -270.43627930]
[-7.77564764 -277.89672852]
[-6.37717009 -285.13317871]
[-10.06420326 -299.67297363]
[-13.75123692 -314.21276855]
[-17.43827057 -328.75256348]
[-21.12530518 -343.29235840]
[-24.81233788 -357.83215332]
[-28.49937248 -372.37197876]
[-32.18640518 -386.91177368]
[-35.87343979 -401.45156860]
[-39.56047440 -415.99136353]
[-43.24750519 -430.53115845]
[-46.93453979 -445.07095337]
[-67.72291565 -455.10260010]
[-74.10081482 -477.00314331]
[-62.23517227 -496.16528320]
[-67.17051697 -510.33010864]
[-72.10586548 -524.49493408]
[-77.21671295 -538.59741211]
[-82.50228119 -552.63531494]
[-87.78784943 -566.67321777]
[-101.90661621 -573.25329590]
[-107.06695557 -587.56506348]
[-100.70681000 -600.98455811]
[-105.99237061 -615.02252197]
[-121.12713623 -614.55603027]
[-135.59257507 -619.03149414]
[-147.81959534 -627.96337891]
[-156.48188782 -640.38287354]
[-160.63983154 -654.94274902]
[-159.84240723 -670.06372070]
[-154.17611694 -684.10552979]
[-144.25559998 -695.54498291]
[-131.15695190 -703.14129639]
[-116.30101776 -706.07049561]
[-101.29926300 -704.01477051]
[-87.77896118 -697.19714355]
[-77.20669556 -686.35711670]
[-70.72926331 -672.67053223]
[-69.04929352 -657.62207031]
[-72.34900665 -642.84405518]
[-80.27049255 -629.93945312]
[-91.95446777 -620.30804443]
[-86.66889954 -606.27014160]
[-73.03744507 -600.37786865]
[-67.47714996 -586.21673584]
[-73.74993896 -571.95874023]
[-68.46437073 -557.92083740]
[-63.17880630 -543.88293457]
[-59.29906082 -541.14007568]
[-57.08614731 -535.94238281]
[-57.94103622 -529.43029785]
[-53.00569153 -515.26544189]
[-48.07034683 -501.10061646]
[-40.69298172 -500.64678955]
[-33.67548370 -498.24176025]
[-27.52620697 -494.04473877]
[-22.69459915 -488.34518433]
[-19.53836250 -481.54299927]
[-18.29699326 -474.12045288]
[-19.07366943 -466.60800171]
[-21.82682419 -459.54635620]
[-26.37212563 -453.44760132]
[-32.39474106 -448.75799561]
[-28.70770645 -434.21820068]
[-25.02067375 -419.67840576]
[-21.33363914 -405.13861084]
[-17.64660645 -390.59881592]
[-13.95957184 -376.05899048]
[-10.27253819 -361.51919556]
[-6.58550501 -346.97940063]
[-2.89847112 -332.43960571]
[0.78856266 -317.89981079]
[4.47559643 -303.36001587]
[8.16263008 -288.82019043]
[11.93986511 -274.30355835]
[15.80715561 -259.81066895]
[19.67444611 -245.31777954]
[23.54173660 -230.82487488]
[27.40902901 -216.33198547]
[31.27631950 -201.83909607]
[46.08790970 -199.95597839]
[59.08531952 -192.52545166]
[68.27249146 -180.65277100]
[72.22481537 -166.12808228]
[70.30997467 -151.15653992]
[62.78886414 -138.02352905]
[50.78056717 -128.74578857]
[54.64785767 -114.25288391]
[58.51514816 -99.75998688]
[62.38244247 -85.26708984]
[66.24973297 -70.77419281]
[75.49024200 -66.49016571]
[80.97494507 -57.64868927]
[80.69697571 -47.02859879]
[74.50722504 -38.12596893]
[78.01343536 -23.54150963]
[88.51135254 -12.97538853]
[84.21414948 2.25105572]
[87.72035980 16.83551598]
[91.22656250 31.41997719]
[94.73277283 46.00444031]
[105.23069000 56.57056046]
[100.93348694 71.79700470]
[104.43969727 86.38146210]
[113.92713165 96.65181732]
[110.14476776 110.11232758]
[113.65097046 124.69678497]
[117.15718079 139.28125000]
[130.35226440 147.55938721]
[133.70030212 162.40005493]
[125.72704315 174.92852783]
[129.23324585 189.51298523]
[132.73945618 204.09745789]
[152.36337280 210.87805176]
[163.77046204 228.05786133]
[162.42314148 248.49519348]
[149.04400635 263.81741333]
[153.44837952 278.15625000]
[157.85275269 292.49505615]
[169.30107117 303.41503906]
[165.64186096 317.85317993]
[170.04623413 332.19198608]
[184.57510376 337.31234741]
[193.20223999 349.85931396]
[192.79187012 364.90243530]
[183.71089172 376.67843628]
[188.11526489 391.01724243]
[199.56358337 401.93725586]
[195.90438843 416.37536621]
[200.30876160 430.71417236]
[204.71313477 445.05297852]
[209.11750793 459.39181519]
[213.52188110 473.73062134]
[229.54978943 475.15173340]
[243.76844788 482.60180664]
[254.01055908 494.91180420]
[258.72784424 510.17449951]
[257.22503662 526.03997803]
[249.76211548 540.07739258]
[237.51004028 550.14739990]
[249.09307861 560.92437744]
[245.61343384 575.40686035]
[250.19551086 589.68988037]
[254.77758789 603.97290039]
[259.35968018 618.25585938]
[274.28439331 616.36706543]
[289.30203247 617.25305176]
[303.90112305 620.88360596]
[317.58441162 627.13519287]
[329.88583374 635.79486084]
[340.38647461 646.56756592]
[348.72860718 659.08648682]
[354.62814331 672.92523193]
[357.88412476 687.61236572]
[358.38568115 702.64776611]
[356.11569214 717.51928711]
[351.15151978 731.72039795]
[343.66223145 744.76745605]
[333.90286255 756.21600342]
[322.20587158 765.67614746]
[308.96960449 772.82574463]
[294.64492798 777.42120361]
[279.71969604 779.30596924]
[264.70230103 778.41595459]
[250.10418701 774.78143311]
[236.42259216 768.52618408]
[224.12348938 759.86322021]
[213.62577820 749.08764648]
[205.28700256 736.56646729]
[199.39120483 722.72619629]
[196.13917542 708.03814697]
[195.64167786 693.00262451]
[197.91564941 678.13171387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 224]
[5 223]
[6 222]
[7 221]
[9 219]
[17 212]
[18 211]
[19 210]
[20 209]
[21 208]
[23 206]
[24 205]
[28 201]
[29 200]
[31 198]
[32 197]
[33 196]
[42 192]
[43 191]
[44 190]
[47 187]
[48 186]
[49 185]
[51 183]
[52 182]
[54 180]
[55 179]
[56 178]
[57 177]
[59 175]
[60 174]
[62 170]
[63 169]
[64 168]
[65 167]
[66 166]
[73 159]
[74 158]
[75 157]
[76 156]
[77 155]
[78 154]
[80 153]
[81 152]
[82 151]
[83 150]
[84 149]
[85 148]
[86 147]
[87 146]
[88 145]
[89 144]
[90 143]
[91 142]
[94 132]
[95 131]
[96 130]
[97 127]
[98 126]
[99 125]
[102 122]
[103 121]
] def

init

% Start Annotations
1 110 9  0 0.9 0.2 omark
112 252 9  1 0.1 0.2 omark

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
