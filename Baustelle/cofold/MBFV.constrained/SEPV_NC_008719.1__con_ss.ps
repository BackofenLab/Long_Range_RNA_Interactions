%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Jun 17 09:45:36 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 -140 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

/ConsLegend { % xloc yloc tics range ConsLegend -> []
  /STR 8 string def
  /colshift 0.16 def
  /sep 0.1 def
  /range exch def
  % precompute number of tics but leave one tics for range numbers
  dup /tics exch dup 1 le { pop 42 } if def
  /lasttick exch dup 1 eq { pop 1.0 } { dup 1 gt { cvi } if  } ifelse def
  
  gsave
    /Helvetica findfont 10 scalefont setfont
    xmin xmax add size sub 2 div
    ymin ymax add size sub 2 div translate
    size dup scale
    translate
    0.015 dup scale
    % legend lines
    gsave 
    0.5 setgray
    0.05 setlinewidth
    newpath
    -1.5 2.5 moveto 10.1 2.5 lineto
    stroke
    newpath
    -1.5 1.1 moveto 10.1 1.1 lineto
    stroke
    newpath
    -1.5 2.5 moveto -1.5 -5 -6 sep mul add lineto
    stroke
    newpath
    10.1 1.1 moveto 10.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 1.1 moveto -0.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 -5 -6 sep mul add moveto 10.1 -5 -6 sep mul add lineto
    stroke
    grestore
    % color gradients
      6 -1 1
      {
        % get current number of different base pairs
        dup 1 sub 6 exch sub /curnum exch STR cvs def
        % compute y-position
        dup 6 sub dup sep mul add /ypos exch def
        % draw number of different base pairs
        -1 ypos moveto gsave 0.1 dup scale curnum show grestore
        % compute current color
        6 exch sub colshift mul
        /curcol exch def
        % draw gradient for counter examples
        gsave
        10 tics 1 add div 1 scale
        0 1 tics
        {
            dup ypos moveto
            tics div range mul 1 exch sub
            curcol exch hsb
            1 0 rlineto 0 1 rlineto -1 0 rlineto closepath fill
        } for
        grestore
      } for
    0 setgray
    % legend labels
    0.1 1.2 sep add moveto (0) gsave 0.1 dup scale show grestore
    9.4 1.2 sep add moveto lasttick STR cvs gsave 0.1 dup scale show grestore
    1 3 moveto (counter examples) gsave 0.1 dup scale show grestore
    -2 -4.5 moveto 90 rotate (base pairs)  gsave 0.1 dup scale show grestore
%    gsave 0.1 dup scale dup stringwidth pop -2 div 0 rmoveto show grestore
  grestore
} bind def

%%EndProlog

% data start here
/cutpoint 110 def
/sequence { (\
AUUUCUACUGAAAGGGUAGAGAAAAGGAGUUUUGCUUCUCAUGGCAACAAGAGGAGCAAGCAAGUCUCGGGUCACGACCCGGGGCGUCAAUAUGGUGACGGCCAAGGCCA GAGGAGACCCUCCCGAGCACUAUAGCGGACCAUAUUGACGCCUGGGAAAGACCGGAGACACUCCUUGAUUCUCACCUUUCUCACCCUUAAGCACAGAUUGCUUGAAUGCAGGGUGGGGAAGUUGGGAACCAACUAGUGUCU\
) } def
/len { sequence length } bind def

/coor [
[275.06658936 666.88714600]
[288.28286743 659.63500977]
[284.41555786 645.14208984]
[280.54827881 630.64916992]
[276.68099976 616.15631104]
[272.81369019 601.66339111]
[268.94641113 587.17053223]
[265.07913208 572.67761230]
[261.21182251 558.18469238]
[256.21728516 554.70880127]
[253.37747192 548.50952148]
[254.12074280 540.98986816]
[246.64764404 527.98400879]
[239.17454529 514.97814941]
[231.70144653 501.97225952]
[224.22834778 488.96640015]
[216.75524902 475.96051025]
[210.71424866 471.73818970]
[209.27125549 462.74642944]
[201.96022034 449.64877319]
[194.64920044 436.55108643]
[187.33816528 423.45343018]
[180.02713013 410.35577393]
[172.71611023 397.25808716]
[166.72799683 392.96109009]
[165.39675903 383.95208740]
[158.24893188 370.76464844]
[159.02207947 385.74472046]
[156.11866760 400.46102905]
[149.71403503 414.02499390]
[140.19490051 425.61749268]
[128.13610840 434.53854370]
[114.26579285 440.24945068]
[99.42153168 442.40536499]
[84.49969482 440.87609863]
[70.40132904 435.75399780]
[57.97776031 427.34832764]
[47.97919083 416.16671753]
[41.00938416 402.88433838]
[37.48920441 388.30322266]
[37.63122177 373.30389404]
[41.42686081 358.79208374]
[48.64692307 345.64404297]
[58.85542297 334.65374756]
[71.43592072 326.48483276]
[85.62874603 321.63061523]
[100.57687378 320.38415527]
[115.37764740 322.82073975]
[129.13732910 328.79327393]
[141.02505493 337.94107056]
[150.32058716 349.70779419]
[146.99574280 335.08093262]
[143.67089844 320.45404053]
[140.34605408 305.82717896]
[137.02120972 291.20031738]
[126.65530396 280.50463867]
[131.14125061 265.33273315]
[127.81640625 250.70585632]
[124.49156189 236.07897949]
[121.16671753 221.45211792]
[105.86899567 215.46362305]
[97.07529449 201.39067078]
[98.42580414 184.68432617]
[109.58513641 171.95637512]
[106.07892609 157.37191772]
[102.57272339 142.78746033]
[99.06651306 128.20300293]
[95.56030273 113.61853790]
[86.07286835 103.34818268]
[89.85523224 89.88767242]
[86.34902954 75.30321503]
[82.84281921 60.71875000]
[79.33660889 46.13428879]
[66.25728607 41.83303833]
[57.07884216 31.71576309]
[54.11498260 18.49171829]
[58.03419113 5.63171005]
[67.71261597 -3.54280758]
[64.38777161 -18.16968155]
[61.06293106 -32.79655457]
[57.73808670 -47.42342758]
[54.41324615 -62.05030060]
[51.08840561 -76.67717743]
[46.14726639 -84.32695770]
[47.81428146 -91.50628662]
[44.67131805 -106.17331696]
[41.52835464 -120.84034729]
[38.38539124 -135.50738525]
[35.24243164 -150.17440796]
[32.09946823 -164.84144592]
[28.95650291 -179.50846863]
[25.81354141 -194.17550659]
[22.67057800 -208.84252930]
[19.52761459 -223.50956726]
[16.38465118 -238.17658997]
[13.24168777 -252.84362793]
[2.86864591 -260.47955322]
[0.54154581 -272.74072266]
[6.97022295 -282.96762085]
[4.00962305 -297.67254639]
[-10.45229244 -302.65252686]
[-20.41402817 -314.12686157]
[-23.27585411 -328.94836426]
[-18.36750984 -343.11749268]
[-7.10182428 -352.86169434]
[-10.06242371 -367.56661987]
[-13.11426449 -382.25289917]
[-16.25722694 -396.91992188]
[-19.49119186 -411.56716919]
[-34.53332138 -413.44070435]
[-48.02609253 -420.34872437]
[-58.34019089 -431.45709229]
[-64.23013306 -445.42434692]
[-64.98468781 -460.56390381]
[-60.51273346 -475.04760742]
[-51.35428238 -487.12643433]
[-38.61526108 -495.34185791]
[-23.83397102 -498.70181274]
[-8.79532051 -496.80053711]
[4.68469715 -489.86767578]
[14.97830582 -478.74032593]
[20.84250069 -464.76223755]
[21.56915283 -449.62130737]
[17.07051468 -435.14587402]
[7.88982010 -423.08392334]
[-4.86431885 -414.89199829]
[-0.32938394 -409.08200073]
[-1.59019697 -400.06289673]
[1.55276620 -385.39584351]
[6.01520824 -379.52999878]
[4.64250183 -370.52722168]
[7.60310173 -355.82229614]
[21.76188278 -351.19689941]
[31.77099228 -340.03115845]
[34.86777496 -325.25698853]
[30.12253952 -310.82162476]
[18.71455002 -300.63314819]
[21.67514992 -285.92822266]
[33.96827698 -273.38836670]
[27.90871811 -255.98658752]
[31.05168152 -241.31954956]
[34.19464493 -226.65252686]
[37.33760834 -211.98548889]
[40.48057175 -197.31846619]
[43.62353516 -182.65142822]
[46.76649857 -167.98440552]
[49.90946198 -153.31736755]
[53.05242538 -138.65034485]
[56.19538498 -123.98331451]
[59.33834839 -109.31628418]
[62.48131180 -94.64925385]
[65.71527863 -80.00201416]
[69.04012299 -65.37514496]
[72.36495972 -50.74826813]
[75.68980408 -36.12139511]
[79.01464844 -21.49452400]
[82.33948517 -6.86764956]
[97.63721466 -0.87915456]
[106.43090820 13.19378471]
[105.08039856 29.90014076]
[93.92107391 42.62808228]
[97.42727661 57.21254349]
[100.93348694 71.79700470]
[104.43969727 86.38146210]
[113.92713165 96.65181732]
[110.14476776 110.11232758]
[113.65097046 124.69678497]
[117.15718079 139.28125000]
[120.66339111 153.86570740]
[124.16959381 168.45016479]
[137.24893188 172.75141907]
[146.42736816 182.86869812]
[149.39122009 196.09274292]
[145.47201538 208.95274353]
[135.79359436 218.12727356]
[139.11843872 232.75413513]
[142.44328308 247.38101196]
[145.76812744 262.00790405]
[156.37184143 273.74975586]
[151.64808655 287.87545776]
[154.97293091 302.50231934]
[158.29777527 317.12921143]
[161.62261963 331.75607300]
[164.94746399 346.38296509]
[172.00332642 354.25314331]
[171.43637085 363.61682129]
[178.58419800 376.80426025]
[185.81376648 389.94705200]
[193.12480164 403.04473877]
[200.43583679 416.14239502]
[207.74685669 429.24005127]
[215.05789185 442.33773804]
[222.36891174 455.43539429]
[229.76112366 468.48742676]
[237.23422241 481.49328613]
[244.70732117 494.49917603]
[252.18041992 507.50503540]
[259.65353394 520.51092529]
[267.12661743 533.51678467]
[265.88888550 518.56793213]
[268.33413696 503.76858521]
[274.31466675 490.01239014]
[283.46939087 478.13000488]
[295.24551392 468.83895874]
[308.93188477 462.70028687]
[323.70205688 460.08468628]
[338.66418457 461.15005493]
[352.91473389 465.83212280]
[365.59323120 473.84811401]
[375.93402100 484.71401978]
[383.31274414 497.77365112]
[387.28381348 512.23846436]
[387.60739136 527.23498535]
[384.26400757 541.85760498]
[377.45553589 555.22344971]
[367.59307861 566.52526855]
[355.27218628 575.08074951]
[341.23687744 580.37316895]
[326.33462524 582.08294678]
[311.46536255 580.10693359]
[297.52691650 574.56439209]
[285.36099243 565.78997803]
[275.70471191 554.31744385]
[279.57202148 568.81030273]
[283.43930054 583.30322266]
[287.30661011 597.79614258]
[291.17388916 612.28900146]
[295.04116821 626.78192139]
[298.90847778 641.27478027]
[302.77575684 655.76770020]
[317.84811401 655.47131348]
[332.55325317 658.79119873]
[346.03628540 665.53448486]
[357.51327515 675.30902100]
[366.31698608 687.54663086]
[371.93560791 701.53570557]
[374.04244995 716.46301270]
[372.51504517 731.46069336]
[367.44216919 745.65679932]
[359.11874390 758.22595215]
[348.02874756 768.43750000]
[334.81686401 775.69763184]
[320.25125122 779.58435059]
[305.17874146 779.87158203]
[290.47558594 776.54272461]
[276.99667358 769.79132080]
[265.52560425 760.00982666]
[256.72927856 747.76690674]
[251.11915588 733.77441406]
[249.02136230 718.84582520]
[250.55787659 703.84906006]
[255.63935852 689.65606689]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 230]
[3 229]
[4 228]
[5 227]
[6 226]
[7 225]
[8 224]
[9 223]
[12 199]
[13 198]
[14 197]
[15 196]
[16 195]
[17 194]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[26 187]
[27 186]
[51 184]
[52 183]
[53 182]
[54 181]
[55 180]
[57 178]
[58 177]
[59 176]
[60 175]
[64 170]
[65 169]
[66 168]
[67 167]
[68 166]
[70 164]
[71 163]
[72 162]
[73 161]
[78 157]
[79 156]
[80 155]
[81 154]
[82 153]
[83 152]
[85 151]
[86 150]
[87 149]
[88 148]
[89 147]
[90 146]
[91 145]
[92 144]
[93 143]
[94 142]
[95 141]
[96 140]
[99 138]
[100 137]
[105 132]
[106 131]
[107 129]
[108 128]
[109 126]
] def

init

% Start Annotations
1 110 9  0 0.9 0.2 omark
112 252 9  1 0.1 0.2 omark

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
