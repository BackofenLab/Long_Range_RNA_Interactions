%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Jun 17 09:45:34 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 -140 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

/ConsLegend { % xloc yloc tics range ConsLegend -> []
  /STR 8 string def
  /colshift 0.16 def
  /sep 0.1 def
  /range exch def
  % precompute number of tics but leave one tics for range numbers
  dup /tics exch dup 1 le { pop 42 } if def
  /lasttick exch dup 1 eq { pop 1.0 } { dup 1 gt { cvi } if  } ifelse def
  
  gsave
    /Helvetica findfont 10 scalefont setfont
    xmin xmax add size sub 2 div
    ymin ymax add size sub 2 div translate
    size dup scale
    translate
    0.015 dup scale
    % legend lines
    gsave 
    0.5 setgray
    0.05 setlinewidth
    newpath
    -1.5 2.5 moveto 10.1 2.5 lineto
    stroke
    newpath
    -1.5 1.1 moveto 10.1 1.1 lineto
    stroke
    newpath
    -1.5 2.5 moveto -1.5 -5 -6 sep mul add lineto
    stroke
    newpath
    10.1 1.1 moveto 10.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 1.1 moveto -0.1 -5 -6 sep mul add lineto
    stroke
    newpath
    -0.1 -5 -6 sep mul add moveto 10.1 -5 -6 sep mul add lineto
    stroke
    grestore
    % color gradients
      6 -1 1
      {
        % get current number of different base pairs
        dup 1 sub 6 exch sub /curnum exch STR cvs def
        % compute y-position
        dup 6 sub dup sep mul add /ypos exch def
        % draw number of different base pairs
        -1 ypos moveto gsave 0.1 dup scale curnum show grestore
        % compute current color
        6 exch sub colshift mul
        /curcol exch def
        % draw gradient for counter examples
        gsave
        10 tics 1 add div 1 scale
        0 1 tics
        {
            dup ypos moveto
            tics div range mul 1 exch sub
            curcol exch hsb
            1 0 rlineto 0 1 rlineto -1 0 rlineto closepath fill
        } for
        grestore
      } for
    0 setgray
    % legend labels
    0.1 1.2 sep add moveto (0) gsave 0.1 dup scale show grestore
    9.4 1.2 sep add moveto lasttick STR cvs gsave 0.1 dup scale show grestore
    1 3 moveto (counter examples) gsave 0.1 dup scale show grestore
    -2 -4.5 moveto 90 rotate (base pairs)  gsave 0.1 dup scale show grestore
%    gsave 0.1 dup scale dup stringwidth pop -2 div 0 rmoveto show grestore
  grestore
} bind def

%%EndProlog

% data start here
/cutpoint 110 def
/sequence { (\
UAACGCGGUUUGAACAGUUUUUUGGAGCUUUUGAUUUCAAAUGUCUAAAAAACCAGGAGGACCCGGGAAGCCCCGGGUCGUCAAUAUGCUAAAACGCGGCAUACCCCGCG GACCCCACUCUCAAAAGCAUCAAACAACAGCAUAUUGACACCUGGGAAAAGACUAGGAGAUCUUCUGCUCUAUUCCAACAUCAGUCACAAGGCACCGAGCGCCGAACACUGUGACUGAUGGGGGAGAAGACCACAGGAUCU\
) } def
/len { sequence length } bind def

/coor [
[146.81234741 514.35827637]
[155.32841492 501.90280151]
[166.77865601 492.07659912]
[180.38237000 485.54962158]
[170.42199707 474.47534180]
[175.46987915 459.48101807]
[165.50950623 448.40670776]
[170.55738831 433.41241455]
[167.77960205 418.67184448]
[165.00183105 403.93130493]
[149.93774414 397.37719727]
[141.67427063 382.98654175]
[143.64605713 366.34207153]
[155.27166748 354.03857422]
[152.31106567 339.33364868]
[149.35046387 324.62872314]
[146.38987732 309.92379761]
[143.42927551 295.21884155]
[140.37742615 280.53259277]
[137.23446655 265.86557007]
[134.09150696 251.19853210]
[130.49481201 236.63612366]
[126.44786072 222.19236755]
[122.40090942 207.74861145]
[118.35395813 193.30484009]
[107.46980286 183.13703918]
[111.19694519 167.76110840]
[107.14999390 153.31735229]
[103.10303497 138.87359619]
[99.05608368 124.42983246]
[95.00913239 109.98607635]
[90.87258911 95.56771851]
[86.64659882 81.17532349]
[82.42060852 66.78292847]
[78.19461823 52.39053345]
[73.96863556 37.99813843]
[65.20971680 34.63877106]
[59.05780411 27.73942757]
[56.78887939 18.92015076]
[58.78636932 10.17622852]
[64.48279572 3.42692876]
[60.79576111 -11.11287117]
[57.10873032 -25.65267181]
[53.42169571 -40.19247055]
[37.69115067 -40.72191238]
[22.76075363 -45.65710831]
[9.83747864 -54.59046936]
[-0.03638542 -66.79154205]
[-6.06729889 -81.26674652]
[-7.77424431 -96.84024811]
[-5.02707863 -112.24951172]
[1.94357920 -126.24763489]
[12.56568813 -137.70425415]
[25.97271919 -145.69679260]
[22.10542679 -160.18968201]
[18.23813629 -174.68258667]
[14.37084579 -189.17547607]
[10.50355530 -203.66838074]
[6.63626432 -218.16127014]
[2.76897359 -232.65417480]
[-12.09447765 -246.29772949]
[-6.19619656 -264.72857666]
[-10.42218494 -279.12097168]
[-21.73402786 -290.18228149]
[-17.89583015 -304.57385254]
[-22.12181854 -318.96624756]
[-38.20896912 -321.48623657]
[-51.53522873 -330.74169922]
[-59.45695114 -344.83471680]
[-60.42971802 -360.91387939]
[-54.30918503 -375.75140381]
[-42.36985779 -386.39093018]
[-46.77423096 -400.72973633]
[-51.17860413 -415.06854248]
[-55.58297729 -429.40734863]
[-59.98735428 -443.74615479]
[-64.39172363 -458.08499146]
[-68.79609680 -472.42379761]
[-74.29294586 -479.68453979]
[-73.16494751 -486.96804810]
[-77.39093781 -501.36044312]
[-81.61692810 -515.75286865]
[-85.84291077 -530.14526367]
[-90.06890106 -544.53765869]
[-94.29489136 -558.93005371]
[-98.52087402 -573.32244873]
[-102.74686432 -587.71484375]
[-106.97285461 -602.10723877]
[-111.19884491 -616.49963379]
[-115.42482758 -630.89202881]
[-131.89886475 -631.19000244]
[-147.45564270 -636.56158447]
[-160.57394409 -646.46936035]
[-169.97480774 -659.93273926]
[-174.74612427 -675.62542725]
[-174.43125916 -692.00579834]
[-169.07261658 -707.46826172]
[-159.20639038 -720.50085449]
[-145.80897522 -729.83306885]
[-150.39105225 -744.11608887]
[-165.38465881 -742.69982910]
[-180.33212280 -744.54034424]
[-194.53433228 -749.55145264]
[-207.32699585 -757.49890137]
[-218.11181641 -768.01086426]
[-226.38433838 -780.59576416]
[-231.75765991 -794.66491699]
[-233.98043823 -809.56036377]
[-232.94874573 -824.58532715]
[-228.71080017 -839.03710938]
[-221.46484375 -852.23974609]
[-211.54975891 -863.57574463]
[-199.42930603 -872.51495361]
[-185.67039490 -878.63916016]
[-170.91653442 -881.66198730]
[-155.85778809 -881.44207764]
[-141.19848633 -877.98968506]
[-127.62428284 -871.46624756]
[-115.77005768 -862.17694092]
[-106.19024658 -850.55621338]
[-99.33292389 -837.14758301]
[-95.51882172 -822.57824707]
[-94.92632294 -807.52954102]
[-97.58315277 -792.70538330]
[-103.36502838 -778.79913330]
[-112.00154114 -766.46118164]
[-123.08872986 -756.26861572]
[-136.10803223 -748.69818115]
[-131.52595520 -734.41516113]
[-117.92713928 -734.94195557]
[-104.64274597 -731.92913818]
[-92.57913208 -725.57550049]
[-82.56112671 -716.30798340]
[-75.27559662 -704.75311279]
[-71.22439575 -691.69433594]
[-70.68978119 -678.01934814]
[-73.71475220 -664.65936279]
[-80.09968567 -652.52581787]
[-89.41548920 -642.44842529]
[-101.03244019 -635.11798096]
[-96.80644989 -620.72558594]
[-92.58045959 -606.33319092]
[-88.35446930 -591.94079590]
[-84.12848663 -577.54840088]
[-79.90249634 -563.15600586]
[-75.67650604 -548.76361084]
[-71.45051575 -534.37121582]
[-67.22453308 -519.97882080]
[-62.99854279 -505.58642578]
[-58.77255249 -491.19403076]
[-54.45729065 -476.82815552]
[-50.05291367 -462.48934937]
[-45.64854050 -448.15054321]
[-41.24416733 -433.81173706]
[-36.83979416 -419.47293091]
[-32.43542099 -405.13409424]
[-28.03104782 -390.79528809]
[-14.24301434 -389.39224243]
[-1.99012470 -382.82363892]
[6.86547089 -372.05035400]
[10.96372318 -358.67504883]
[9.65548897 -344.70379639]
[3.10510612 -332.24523926]
[-7.72942305 -323.19226074]
[-3.50343490 -308.79986572]
[7.50613737 -298.76797485]
[3.97020984 -283.34695435]
[8.19619846 -268.95455933]
[17.54024124 -264.90130615]
[23.24280548 -256.19876099]
[23.22864342 -245.57504272]
[17.26187134 -236.52145386]
[21.12916183 -222.02856445]
[24.99645233 -207.53565979]
[28.86374283 -193.04277039]
[32.73103333 -178.54986572]
[36.59832382 -164.05697632]
[40.46561432 -149.56407166]
[54.78568268 -149.50360107]
[68.61350250 -145.73443604]
[81.00444031 -138.50755310]
[91.11030579 -128.31037903]
[98.23748016 -115.83389282]
[101.89445496 -101.92582703]
[101.82578278 -87.53305054]
[98.02986145 -73.63712311]
[90.75949097 -61.18733597]
[80.50507355 -51.03588104]
[67.96149445 -43.87950516]
[71.64852905 -29.33970451]
[75.33556366 -14.79990482]
[79.02259827 -0.26010492]
[94.63230896 13.26319218]
[88.36103058 33.77215195]
[92.58701324 48.16454697]
[96.81300354 62.55694199]
[101.03899384 76.94933319]
[105.26498413 91.34172821]
[110.36392212 97.55425262]
[109.45289612 105.93912506]
[113.49984741 120.38288116]
[117.54679871 134.82664490]
[121.59375000 149.27040100]
[125.64070129 163.71415710]
[136.81431580 174.91508484]
[132.79771423 189.25788879]
[136.84466553 203.70166016]
[140.89161682 218.14541626]
[144.93856812 232.58917236]
[154.33216858 220.89471436]
[169.33197021 220.81967163]
[178.84210205 232.41957092]
[175.82754517 247.11352539]
[162.51828003 254.03189087]
[148.75852966 248.05557251]
[151.90150452 262.72259521]
[155.04446411 277.38961792]
[159.89022827 285.10018921]
[158.13420105 292.25827026]
[161.09480286 306.96319580]
[164.05540466 321.66812134]
[167.01599121 336.37304688]
[169.97659302 351.07797241]
[182.88665771 355.86334229]
[191.68193054 366.31542969]
[194.15121460 379.64068604]
[189.75578308 392.34582520]
[179.74238586 401.15350342]
[182.52015686 415.89407349]
[185.29794312 430.63461304]
[195.45700073 442.76327515]
[190.21043396 456.70324707]
[200.36949158 468.83187866]
[195.12292480 482.77185059]
[210.16918945 483.89987183]
[224.41047668 488.88464355]
[236.87580872 497.38629150]
[246.71527100 508.82516479]
[253.25799561 522.42132568]
[256.05789185 537.24774170]
[254.92405701 552.29357910]
[249.93377686 566.53289795]
[241.42732239 578.99499512]
[229.98468018 588.83001709]
[216.38600159 595.36749268]
[201.55848694 598.16168213]
[186.51310730 597.02197266]
[172.27566528 592.02624512]
[159.81690979 583.51495361]
[149.98628235 572.06854248]
[143.45405579 558.46734619]
[140.66561890 543.63873291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 234]
[6 232]
[8 230]
[9 229]
[10 228]
[14 223]
[15 222]
[16 221]
[17 220]
[18 219]
[19 217]
[20 216]
[21 215]
[22 209]
[23 208]
[24 207]
[25 206]
[27 204]
[28 203]
[29 202]
[30 201]
[31 200]
[32 198]
[33 197]
[34 196]
[35 195]
[36 194]
[41 192]
[42 191]
[43 190]
[44 189]
[54 178]
[55 177]
[56 176]
[57 175]
[58 174]
[59 173]
[60 172]
[62 168]
[63 167]
[65 165]
[66 164]
[72 157]
[73 156]
[74 155]
[75 154]
[76 153]
[77 152]
[78 151]
[80 150]
[81 149]
[82 148]
[83 147]
[84 146]
[85 145]
[86 144]
[87 143]
[88 142]
[89 141]
[90 140]
[99 129]
[100 128]
] def

init

% Start Annotations
1 110 9  0 0.9 0.2 omark
112 252 9  1 0.1 0.2 omark

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
